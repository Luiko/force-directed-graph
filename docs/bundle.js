!function(t){var n={};function e(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:r})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var i in t)e.d(r,i,function(n){return t[n]}.bind(null,i));return r},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=3)}([function(t,n,e){"use strict";e.r(n);var r=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},i=function(t){var n;return 1===t.length&&(n=t,t=function(t,e){return r(n(t),e)}),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)<0?r=o+1:i=o}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)>0?i=o:r=o+1}return r}}};var o=i(r),u=o.right,a=o.left,c=u,f=function(t,n){null==n&&(n=s);for(var e=0,r=t.length-1,i=t[0],o=new Array(r<0?0:r);e<r;)o[e]=n(i,i=t[++e]);return o};function s(t,n){return[t,n]}var l=function(t,n,e){var r,i,o,u,a=t.length,c=n.length,f=new Array(a*c);for(null==e&&(e=s),r=o=0;r<a;++r)for(u=t[r],i=0;i<c;++i,++o)f[o]=e(u,n[i]);return f},h=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},d=function(t){return null===t?NaN:+t},p=function(t,n){var e,r,i=t.length,o=0,u=-1,a=0,c=0;if(null==n)for(;++u<i;)isNaN(e=d(t[u]))||(c+=(r=e-a)*(e-(a+=r/++o)));else for(;++u<i;)isNaN(e=d(n(t[u],u,t)))||(c+=(r=e-a)*(e-(a+=r/++o)));if(o>1)return c/(o-1)},g=function(t,n){var e=p(t,n);return e?Math.sqrt(e):e},y=function(t,n){var e,r,i,o=t.length,u=-1;if(null==n){for(;++u<o;)if(null!=(e=t[u])&&e>=e)for(r=i=e;++u<o;)null!=(e=t[u])&&(r>e&&(r=e),i<e&&(i=e))}else for(;++u<o;)if(null!=(e=n(t[u],u,t))&&e>=e)for(r=i=e;++u<o;)null!=(e=n(t[u],u,t))&&(r>e&&(r=e),i<e&&(i=e));return[r,i]},v=Array.prototype,b=v.slice,_=v.map,m=function(t){return function(){return t}},x=function(t){return t},w=function(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;for(var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),o=new Array(i);++r<i;)o[r]=t+r*e;return o},M=Math.sqrt(50),A=Math.sqrt(10),S=Math.sqrt(2),T=function(t,n,e){var r,i,o,u,a=-1;if(e=+e,(t=+t)===(n=+n)&&e>0)return[t];if((r=n<t)&&(i=t,t=n,n=i),0===(u=k(t,n,e))||!isFinite(u))return[];if(u>0)for(t=Math.ceil(t/u),n=Math.floor(n/u),o=new Array(i=Math.ceil(n-t+1));++a<i;)o[a]=(t+a)*u;else for(t=Math.floor(t*u),n=Math.ceil(n*u),o=new Array(i=Math.ceil(t-n+1));++a<i;)o[a]=(t-a)/u;return r&&o.reverse(),o};function k(t,n,e){var r=(n-t)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),o=r/Math.pow(10,i);return i>=0?(o>=M?10:o>=A?5:o>=S?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(o>=M?10:o>=A?5:o>=S?2:1)}function N(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),o=r/i;return o>=M?i*=10:o>=A?i*=5:o>=S&&(i*=2),n<t?-i:i}var E=function(t){return Math.ceil(Math.log(t.length)/Math.LN2)+1},C=function(){var t=x,n=y,e=E;function r(r){var i,o,u=r.length,a=new Array(u);for(i=0;i<u;++i)a[i]=t(r[i],i,r);var f=n(a),s=f[0],l=f[1],h=e(a,s,l);Array.isArray(h)||(h=N(s,l,h),h=w(Math.ceil(s/h)*h,Math.floor(l/h)*h,h));for(var d=h.length;h[0]<=s;)h.shift(),--d;for(;h[d-1]>l;)h.pop(),--d;var p,g=new Array(d+1);for(i=0;i<=d;++i)(p=g[i]=[]).x0=i>0?h[i-1]:s,p.x1=i<d?h[i]:l;for(i=0;i<u;++i)s<=(o=a[i])&&o<=l&&g[c(h,o,0,d)].push(r[i]);return g}return r.value=function(n){return arguments.length?(t="function"==typeof n?n:m(n),r):t},r.domain=function(t){return arguments.length?(n="function"==typeof t?t:m([t[0],t[1]]),r):n},r.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Array.isArray(t)?m(b.call(t)):m(t),r):e},r},z=function(t,n,e){if(null==e&&(e=d),r=t.length){if((n=+n)<=0||r<2)return+e(t[0],0,t);if(n>=1)return+e(t[r-1],r-1,t);var r,i=(r-1)*n,o=Math.floor(i),u=+e(t[o],o,t);return u+(+e(t[o+1],o+1,t)-u)*(i-o)}},P=function(t,n,e){return t=_.call(t,d).sort(r),Math.ceil((e-n)/(2*(z(t,.75)-z(t,.25))*Math.pow(t.length,-1/3)))},R=function(t,n,e){return Math.ceil((e-n)/(3.5*g(t)*Math.pow(t.length,-1/3)))},L=function(t,n){var e,r,i=t.length,o=-1;if(null==n){for(;++o<i;)if(null!=(e=t[o])&&e>=e)for(r=e;++o<i;)null!=(e=t[o])&&e>r&&(r=e)}else for(;++o<i;)if(null!=(e=n(t[o],o,t))&&e>=e)for(r=e;++o<i;)null!=(e=n(t[o],o,t))&&e>r&&(r=e);return r},U=function(t,n){var e,r=t.length,i=r,o=-1,u=0;if(null==n)for(;++o<r;)isNaN(e=d(t[o]))?--i:u+=e;else for(;++o<r;)isNaN(e=d(n(t[o],o,t)))?--i:u+=e;if(i)return u/i},D=function(t,n){var e,i=t.length,o=-1,u=[];if(null==n)for(;++o<i;)isNaN(e=d(t[o]))||u.push(e);else for(;++o<i;)isNaN(e=d(n(t[o],o,t)))||u.push(e);return z(u.sort(r),.5)},q=function(t){for(var n,e,r,i=t.length,o=-1,u=0;++o<i;)u+=t[o].length;for(e=new Array(u);--i>=0;)for(n=(r=t[i]).length;--n>=0;)e[--u]=r[n];return e},B=function(t,n){var e,r,i=t.length,o=-1;if(null==n){for(;++o<i;)if(null!=(e=t[o])&&e>=e)for(r=e;++o<i;)null!=(e=t[o])&&r>e&&(r=e)}else for(;++o<i;)if(null!=(e=n(t[o],o,t))&&e>=e)for(r=e;++o<i;)null!=(e=n(t[o],o,t))&&r>e&&(r=e);return r},O=function(t,n){for(var e=n.length,r=new Array(e);e--;)r[e]=t[n[e]];return r},Y=function(t,n){if(e=t.length){var e,i,o=0,u=0,a=t[u];for(null==n&&(n=r);++o<e;)(n(i=t[o],a)<0||0!==n(a,a))&&(a=i,u=o);return 0===n(a,a)?u:void 0}},I=function(t,n,e){for(var r,i,o=(null==e?t.length:e)-(n=null==n?0:+n);o;)i=Math.random()*o--|0,r=t[o+n],t[o+n]=t[i+n],t[i+n]=r;return t},F=function(t,n){var e,r=t.length,i=-1,o=0;if(null==n)for(;++i<r;)(e=+t[i])&&(o+=e);else for(;++i<r;)(e=+n(t[i],i,t))&&(o+=e);return o},j=function(t){if(!(i=t.length))return[];for(var n=-1,e=B(t,H),r=new Array(e);++n<e;)for(var i,o=-1,u=r[n]=new Array(i);++o<i;)u[o]=t[o][n];return r};function H(t){return t.length}var G=function(){return j(arguments)},X=Array.prototype.slice,V=function(t){return t},$=1,W=2,Z=3,Q=4,K=1e-6;function J(t){return"translate("+(t+.5)+",0)"}function tt(t){return"translate(0,"+(t+.5)+")"}function nt(){return!this.__axis}function et(t,n){var e=[],r=null,i=null,o=6,u=6,a=3,c=t===$||t===Q?-1:1,f=t===Q||t===W?"x":"y",s=t===$||t===Z?J:tt;function l(l){var h=null==r?n.ticks?n.ticks.apply(n,e):n.domain():r,d=null==i?n.tickFormat?n.tickFormat.apply(n,e):V:i,p=Math.max(o,0)+a,g=n.range(),y=+g[0]+.5,v=+g[g.length-1]+.5,b=(n.bandwidth?function(t){var n=Math.max(0,t.bandwidth()-1)/2;return t.round()&&(n=Math.round(n)),function(e){return+t(e)+n}}:function(t){return function(n){return+t(n)}})(n.copy()),_=l.selection?l.selection():l,m=_.selectAll(".domain").data([null]),x=_.selectAll(".tick").data(h,n).order(),w=x.exit(),M=x.enter().append("g").attr("class","tick"),A=x.select("line"),S=x.select("text");m=m.merge(m.enter().insert("path",".tick").attr("class","domain").attr("stroke","#000")),x=x.merge(M),A=A.merge(M.append("line").attr("stroke","#000").attr(f+"2",c*o)),S=S.merge(M.append("text").attr("fill","#000").attr(f,c*p).attr("dy",t===$?"0em":t===Z?"0.71em":"0.32em")),l!==_&&(m=m.transition(l),x=x.transition(l),A=A.transition(l),S=S.transition(l),w=w.transition(l).attr("opacity",K).attr("transform",function(t){return isFinite(t=b(t))?s(t):this.getAttribute("transform")}),M.attr("opacity",K).attr("transform",function(t){var n=this.parentNode.__axis;return s(n&&isFinite(n=n(t))?n:b(t))})),w.remove(),m.attr("d",t===Q||t==W?"M"+c*u+","+y+"H0.5V"+v+"H"+c*u:"M"+y+","+c*u+"V0.5H"+v+"V"+c*u),x.attr("opacity",1).attr("transform",function(t){return s(b(t))}),A.attr(f+"2",c*o),S.attr(f,c*p).text(d),_.filter(nt).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",t===W?"start":t===Q?"end":"middle"),_.each(function(){this.__axis=b})}return l.scale=function(t){return arguments.length?(n=t,l):n},l.ticks=function(){return e=X.call(arguments),l},l.tickArguments=function(t){return arguments.length?(e=null==t?[]:X.call(t),l):e.slice()},l.tickValues=function(t){return arguments.length?(r=null==t?null:X.call(t),l):r&&r.slice()},l.tickFormat=function(t){return arguments.length?(i=t,l):i},l.tickSize=function(t){return arguments.length?(o=u=+t,l):o},l.tickSizeInner=function(t){return arguments.length?(o=+t,l):o},l.tickSizeOuter=function(t){return arguments.length?(u=+t,l):u},l.tickPadding=function(t){return arguments.length?(a=+t,l):a},l}function rt(t){return et($,t)}function it(t){return et(W,t)}function ot(t){return et(Z,t)}function ut(t){return et(Q,t)}var at={value:function(){}};function ct(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r)throw new Error("illegal type: "+t);r[t]=[]}return new ft(r)}function ft(t){this._=t}function st(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function lt(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=at,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}ft.prototype=ct.prototype={constructor:ft,on:function(t,n){var e,r,i=this._,o=(r=i,(t+"").trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");if(e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),t&&!r.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:n}})),u=-1,a=o.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++u<a;)if(e=(t=o[u]).type)i[e]=lt(i[e],t.name,n);else if(null==n)for(e in i)i[e]=lt(i[e],t.name,null);return this}for(;++u<a;)if((e=(t=o[u]).type)&&(e=st(i[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new ft(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),o=0;o<e;++o)i[o]=arguments[o+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=0,e=(r=this._[t]).length;o<e;++o)r[o].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,o=r.length;i<o;++i)r[i].value.apply(n,e)}};var ht=ct,dt="http://www.w3.org/1999/xhtml",pt={svg:"http://www.w3.org/2000/svg",xhtml:dt,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},gt=function(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),pt.hasOwnProperty(n)?{space:pt[n],local:t}:t};var yt=function(t){var n=gt(t);return(n.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===dt&&n.documentElement.namespaceURI===dt?n.createElement(t):n.createElementNS(e,t)}})(n)};function vt(){}var bt=function(t){return null==t?vt:function(){return this.querySelector(t)}};function _t(){return[]}var mt=function(t){return null==t?_t:function(){return this.querySelectorAll(t)}},xt=function(t){return function(){return this.matches(t)}};if("undefined"!=typeof document){var wt=document.documentElement;if(!wt.matches){var Mt=wt.webkitMatchesSelector||wt.msMatchesSelector||wt.mozMatchesSelector||wt.oMatchesSelector;xt=function(t){return function(){return Mt.call(this,t)}}}}var At=xt,St=function(t){return new Array(t.length)};function Tt(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}Tt.prototype={constructor:Tt,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var kt="$";function Nt(t,n,e,r,i,o){for(var u,a=0,c=n.length,f=o.length;a<f;++a)(u=n[a])?(u.__data__=o[a],r[a]=u):e[a]=new Tt(t,o[a]);for(;a<c;++a)(u=n[a])&&(i[a]=u)}function Et(t,n,e,r,i,o,u){var a,c,f,s={},l=n.length,h=o.length,d=new Array(l);for(a=0;a<l;++a)(c=n[a])&&(d[a]=f=kt+u.call(c,c.__data__,a,n),f in s?i[a]=c:s[f]=c);for(a=0;a<h;++a)(c=s[f=kt+u.call(t,o[a],a,o)])?(r[a]=c,c.__data__=o[a],s[f]=null):e[a]=new Tt(t,o[a]);for(a=0;a<l;++a)(c=n[a])&&s[d[a]]===c&&(i[a]=c)}function Ct(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}var zt=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView};function Pt(t,n){return t.style.getPropertyValue(n)||zt(t).getComputedStyle(t,null).getPropertyValue(n)}function Rt(t){return t.trim().split(/^|\s+/)}function Lt(t){return t.classList||new Ut(t)}function Ut(t){this._node=t,this._names=Rt(t.getAttribute("class")||"")}function Dt(t,n){for(var e=Lt(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function qt(t,n){for(var e=Lt(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}Ut.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function Bt(){this.textContent=""}function Ot(){this.innerHTML=""}function Yt(){this.nextSibling&&this.parentNode.appendChild(this)}function It(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function Ft(){return null}function jt(){var t=this.parentNode;t&&t.removeChild(this)}function Ht(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function Gt(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var Xt={},Vt=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(Xt={mouseenter:"mouseover",mouseleave:"mouseout"}));function $t(t,n,e){return t=Wt(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function Wt(t,n,e){return function(r){var i=Vt;Vt=r;try{t.call(this,this.__data__,n,e)}finally{Vt=i}}}function Zt(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,o=n.length;r<o;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function Qt(t,n,e){var r=Xt.hasOwnProperty(t.type)?$t:Wt;return function(i,o,u){var a,c=this.__on,f=r(n,o,u);if(c)for(var s=0,l=c.length;s<l;++s)if((a=c[s]).type===t.type&&a.name===t.name)return this.removeEventListener(a.type,a.listener,a.capture),this.addEventListener(a.type,a.listener=f,a.capture=e),void(a.value=n);this.addEventListener(t.type,f,e),a={type:t.type,name:t.name,value:n,listener:f,capture:e},c?c.push(a):this.__on=[a]}}function Kt(t,n,e,r){var i=Vt;t.sourceEvent=Vt,Vt=t;try{return n.apply(e,r)}finally{Vt=i}}function Jt(t,n,e){var r=zt(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}var tn=[null];function nn(t,n){this._groups=t,this._parents=n}function en(){return new nn([[document.documentElement]],tn)}nn.prototype=en.prototype={constructor:nn,select:function(t){"function"!=typeof t&&(t=bt(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u,a=n[i],c=a.length,f=r[i]=new Array(c),s=0;s<c;++s)(o=a[s])&&(u=t.call(o,o.__data__,s,a))&&("__data__"in o&&(u.__data__=o.__data__),f[s]=u);return new nn(r,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=mt(t));for(var n=this._groups,e=n.length,r=[],i=[],o=0;o<e;++o)for(var u,a=n[o],c=a.length,f=0;f<c;++f)(u=a[f])&&(r.push(t.call(u,u.__data__,f,a)),i.push(u));return new nn(r,i)},filter:function(t){"function"!=typeof t&&(t=At(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u=n[i],a=u.length,c=r[i]=[],f=0;f<a;++f)(o=u[f])&&t.call(o,o.__data__,f,u)&&c.push(o);return new nn(r,this._parents)},data:function(t,n){if(!t)return p=new Array(this.size()),s=-1,this.each(function(t){p[++s]=t}),p;var e,r=n?Et:Nt,i=this._parents,o=this._groups;"function"!=typeof t&&(e=t,t=function(){return e});for(var u=o.length,a=new Array(u),c=new Array(u),f=new Array(u),s=0;s<u;++s){var l=i[s],h=o[s],d=h.length,p=t.call(l,l&&l.__data__,s,i),g=p.length,y=c[s]=new Array(g),v=a[s]=new Array(g);r(l,h,y,v,f[s]=new Array(d),p,n);for(var b,_,m=0,x=0;m<g;++m)if(b=y[m]){for(m>=x&&(x=m+1);!(_=v[x])&&++x<g;);b._next=_||null}}return(a=new nn(a,i))._enter=c,a._exit=f,a},enter:function(){return new nn(this._enter||this._groups.map(St),this._parents)},exit:function(){return new nn(this._exit||this._groups.map(St),this._parents)},merge:function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var c,f=n[a],s=e[a],l=f.length,h=u[a]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;a<r;++a)u[a]=n[a];return new nn(u,this._parents)},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],o=i.length-1,u=i[o];--o>=0;)(r=i[o])&&(u&&u!==r.nextSibling&&u.parentNode.insertBefore(r,u),u=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=Ct);for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o){for(var u,a=e[o],c=a.length,f=i[o]=new Array(c),s=0;s<c;++s)(u=a[s])&&(f[s]=u);f.sort(n)}return new nn(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),n=-1;return this.each(function(){t[++n]=this}),t},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,o=r.length;i<o;++i){var u=r[i];if(u)return u}return null},size:function(){var t=0;return this.each(function(){++t}),t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,o=n[e],u=0,a=o.length;u<a;++u)(i=o[u])&&t.call(i,i.__data__,u,o);return this},attr:function(t,n){var e=gt(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}}:"function"==typeof n?e.local?function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}:function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}:e.local?function(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}:function(t,n){return function(){this.setAttribute(t,n)}})(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?function(t){return function(){this.style.removeProperty(t)}}:"function"==typeof n?function(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}:function(t,n,e){return function(){this.style.setProperty(t,n,e)}})(t,n,null==e?"":e)):Pt(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?function(t){return function(){delete this[t]}}:"function"==typeof n?function(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}:function(t,n){return function(){this[t]=n}})(t,n)):this.node()[t]},classed:function(t,n){var e=Rt(t+"");if(arguments.length<2){for(var r=Lt(this.node()),i=-1,o=e.length;++i<o;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?function(t,n){return function(){(n.apply(this,arguments)?Dt:qt)(this,t)}}:n?function(t){return function(){Dt(this,t)}}:function(t){return function(){qt(this,t)}})(e,n))},text:function(t){return arguments.length?this.each(null==t?Bt:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}:function(t){return function(){this.textContent=t}})(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?Ot:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}:function(t){return function(){this.innerHTML=t}})(t)):this.node().innerHTML},raise:function(){return this.each(Yt)},lower:function(){return this.each(It)},append:function(t){var n="function"==typeof t?t:yt(t);return this.select(function(){return this.appendChild(n.apply(this,arguments))})},insert:function(t,n){var e="function"==typeof t?t:yt(t),r=null==n?Ft:"function"==typeof n?n:bt(n);return this.select(function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(jt)},clone:function(t){return this.select(t?Gt:Ht)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,o=function(t){return t.trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}})}(t+""),u=o.length;if(!(arguments.length<2)){for(a=n?Qt:Zt,null==e&&(e=!1),r=0;r<u;++r)this.each(a(o[r],n,e));return this}var a=this.node().__on;if(a)for(var c,f=0,s=a.length;f<s;++f)for(r=0,c=a[f];r<u;++r)if((i=o[r]).type===c.type&&i.name===c.name)return c.value},dispatch:function(t,n){return this.each(("function"==typeof n?function(t,n){return function(){return Jt(this,t,n.apply(this,arguments))}}:function(t,n){return function(){return Jt(this,t,n)}})(t,n))}};var rn=en,on=function(t){return"string"==typeof t?new nn([[document.querySelector(t)]],[document.documentElement]):new nn([[t]],tn)},un=function(t){return on(yt(t).call(document.documentElement))},an=0;function cn(){return new fn}function fn(){this._="@"+(++an).toString(36)}fn.prototype=cn.prototype={constructor:fn,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};var sn=function(){for(var t,n=Vt;t=n.sourceEvent;)n=t;return n},ln=function(t,n){var e=t.ownerSVGElement||t;if(e.createSVGPoint){var r=e.createSVGPoint();return r.x=n.clientX,r.y=n.clientY,[(r=r.matrixTransform(t.getScreenCTM().inverse())).x,r.y]}var i=t.getBoundingClientRect();return[n.clientX-i.left-t.clientLeft,n.clientY-i.top-t.clientTop]},hn=function(t){var n=sn();return n.changedTouches&&(n=n.changedTouches[0]),ln(t,n)},dn=function(t){return"string"==typeof t?new nn([document.querySelectorAll(t)],[document.documentElement]):new nn([null==t?[]:t],tn)},pn=function(t,n,e){arguments.length<3&&(e=n,n=sn().changedTouches);for(var r,i=0,o=n?n.length:0;i<o;++i)if((r=n[i]).identifier===e)return ln(t,r);return null},gn=function(t,n){null==n&&(n=sn().touches);for(var e=0,r=n?n.length:0,i=new Array(r);e<r;++e)i[e]=ln(t,n[e]);return i};function yn(){Vt.stopImmediatePropagation()}var vn=function(){Vt.preventDefault(),Vt.stopImmediatePropagation()},bn=function(t){var n=t.document.documentElement,e=on(t).on("dragstart.drag",vn,!0);"onselectstart"in n?e.on("selectstart.drag",vn,!0):(n.__noselect=n.style.MozUserSelect,n.style.MozUserSelect="none")};function _n(t,n){var e=t.document.documentElement,r=on(t).on("dragstart.drag",null);n&&(r.on("click.drag",vn,!0),setTimeout(function(){r.on("click.drag",null)},0)),"onselectstart"in e?r.on("selectstart.drag",null):(e.style.MozUserSelect=e.__noselect,delete e.__noselect)}var mn=function(t){return function(){return t}};function xn(t,n,e,r,i,o,u,a,c,f){this.target=t,this.type=n,this.subject=e,this.identifier=r,this.active=i,this.x=o,this.y=u,this.dx=a,this.dy=c,this._=f}function wn(){return!Vt.button}function Mn(){return this.parentNode}function An(t){return null==t?{x:Vt.x,y:Vt.y}:t}function Sn(){return"ontouchstart"in this}xn.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t};var Tn=function(){var t,n,e,r,i=wn,o=Mn,u=An,a=Sn,c={},f=ht("start","drag","end"),s=0,l=0;function h(t){t.on("mousedown.drag",d).filter(a).on("touchstart.drag",y).on("touchmove.drag",v).on("touchend.drag touchcancel.drag",b).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function d(){if(!r&&i.apply(this,arguments)){var u=_("mouse",o.apply(this,arguments),hn,this,arguments);u&&(on(Vt.view).on("mousemove.drag",p,!0).on("mouseup.drag",g,!0),bn(Vt.view),yn(),e=!1,t=Vt.clientX,n=Vt.clientY,u("start"))}}function p(){if(vn(),!e){var r=Vt.clientX-t,i=Vt.clientY-n;e=r*r+i*i>l}c.mouse("drag")}function g(){on(Vt.view).on("mousemove.drag mouseup.drag",null),_n(Vt.view,e),vn(),c.mouse("end")}function y(){if(i.apply(this,arguments)){var t,n,e=Vt.changedTouches,r=o.apply(this,arguments),u=e.length;for(t=0;t<u;++t)(n=_(e[t].identifier,r,pn,this,arguments))&&(yn(),n("start"))}}function v(){var t,n,e=Vt.changedTouches,r=e.length;for(t=0;t<r;++t)(n=c[e[t].identifier])&&(vn(),n("drag"))}function b(){var t,n,e=Vt.changedTouches,i=e.length;for(r&&clearTimeout(r),r=setTimeout(function(){r=null},500),t=0;t<i;++t)(n=c[e[t].identifier])&&(yn(),n("end"))}function _(t,n,e,r,i){var o,a,l,d=e(n,t),p=f.copy();if(Kt(new xn(h,"beforestart",o,t,s,d[0],d[1],0,0,p),function(){return null!=(Vt.subject=o=u.apply(r,i))&&(a=o.x-d[0]||0,l=o.y-d[1]||0,!0)}))return function u(f){var g,y=d;switch(f){case"start":c[t]=u,g=s++;break;case"end":delete c[t],--s;case"drag":d=e(n,t),g=s}Kt(new xn(h,f,o,t,g,d[0]+a,d[1]+l,d[0]-y[0],d[1]-y[1],p),p.apply,p,[f,r,i])}}return h.filter=function(t){return arguments.length?(i="function"==typeof t?t:mn(!!t),h):i},h.container=function(t){return arguments.length?(o="function"==typeof t?t:mn(t),h):o},h.subject=function(t){return arguments.length?(u="function"==typeof t?t:mn(t),h):u},h.touchable=function(t){return arguments.length?(a="function"==typeof t?t:mn(!!t),h):a},h.on=function(){var t=f.on.apply(f,arguments);return t===f?h:t},h.clickDistance=function(t){return arguments.length?(l=(t=+t)*t,h):Math.sqrt(l)},h},kn=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t};function Nn(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function En(){}var Cn="\\s*([+-]?\\d+)\\s*",zn="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",Pn="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Rn=/^#([0-9a-f]{3})$/,Ln=/^#([0-9a-f]{6})$/,Un=new RegExp("^rgb\\("+[Cn,Cn,Cn]+"\\)$"),Dn=new RegExp("^rgb\\("+[Pn,Pn,Pn]+"\\)$"),qn=new RegExp("^rgba\\("+[Cn,Cn,Cn,zn]+"\\)$"),Bn=new RegExp("^rgba\\("+[Pn,Pn,Pn,zn]+"\\)$"),On=new RegExp("^hsl\\("+[zn,Pn,Pn]+"\\)$"),Yn=new RegExp("^hsla\\("+[zn,Pn,Pn,zn]+"\\)$"),In={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Fn(t){var n;return t=(t+"").trim().toLowerCase(),(n=Rn.exec(t))?new Vn((n=parseInt(n[1],16))>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):(n=Ln.exec(t))?jn(parseInt(n[1],16)):(n=Un.exec(t))?new Vn(n[1],n[2],n[3],1):(n=Dn.exec(t))?new Vn(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=qn.exec(t))?Hn(n[1],n[2],n[3],n[4]):(n=Bn.exec(t))?Hn(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=On.exec(t))?Wn(n[1],n[2]/100,n[3]/100,1):(n=Yn.exec(t))?Wn(n[1],n[2]/100,n[3]/100,n[4]):In.hasOwnProperty(t)?jn(In[t]):"transparent"===t?new Vn(NaN,NaN,NaN,0):null}function jn(t){return new Vn(t>>16&255,t>>8&255,255&t,1)}function Hn(t,n,e,r){return r<=0&&(t=n=e=NaN),new Vn(t,n,e,r)}function Gn(t){return t instanceof En||(t=Fn(t)),t?new Vn((t=t.rgb()).r,t.g,t.b,t.opacity):new Vn}function Xn(t,n,e,r){return 1===arguments.length?Gn(t):new Vn(t,n,e,null==r?1:r)}function Vn(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function $n(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function Wn(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new Qn(t,n,e,r)}function Zn(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof Qn)return new Qn(t.h,t.s,t.l,t.opacity);if(t instanceof En||(t=Fn(t)),!t)return new Qn;if(t instanceof Qn)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),o=Math.max(n,e,r),u=NaN,a=o-i,c=(o+i)/2;return a?(u=n===o?(e-r)/a+6*(e<r):e===o?(r-n)/a+2:(n-e)/a+4,a/=c<.5?o+i:2-o-i,u*=60):a=c>0&&c<1?0:u,new Qn(u,a,c,t.opacity)}(t):new Qn(t,n,e,null==r?1:r)}function Qn(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Kn(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}kn(En,Fn,{displayable:function(){return this.rgb().displayable()},hex:function(){return this.rgb().hex()},toString:function(){return this.rgb()+""}}),kn(Vn,Xn,Nn(En,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Vn(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Vn(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},hex:function(){return"#"+$n(this.r)+$n(this.g)+$n(this.b)},toString:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),kn(Qn,Zn,Nn(En,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Qn(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Qn(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new Vn(Kn(t>=240?t-240:t+120,i,r),Kn(t,i,r),Kn(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var Jn=Math.PI/180,te=180/Math.PI,ne=.96422,ee=1,re=.82521,ie=4/29,oe=6/29,ue=3*oe*oe,ae=oe*oe*oe;function ce(t){if(t instanceof le)return new le(t.l,t.a,t.b,t.opacity);if(t instanceof _e){if(isNaN(t.h))return new le(t.l,0,0,t.opacity);var n=t.h*Jn;return new le(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}t instanceof Vn||(t=Gn(t));var e,r,i=ge(t.r),o=ge(t.g),u=ge(t.b),a=he((.2225045*i+.7168786*o+.0606169*u)/ee);return i===o&&o===u?e=r=a:(e=he((.4360747*i+.3850649*o+.1430804*u)/ne),r=he((.0139322*i+.0971045*o+.7141733*u)/re)),new le(116*a-16,500*(e-a),200*(a-r),t.opacity)}function fe(t,n){return new le(t,0,0,null==n?1:n)}function se(t,n,e,r){return 1===arguments.length?ce(t):new le(t,n,e,null==r?1:r)}function le(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function he(t){return t>ae?Math.pow(t,1/3):t/ue+ie}function de(t){return t>oe?t*t*t:ue*(t-ie)}function pe(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function ge(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function ye(t){if(t instanceof _e)return new _e(t.h,t.c,t.l,t.opacity);if(t instanceof le||(t=ce(t)),0===t.a&&0===t.b)return new _e(NaN,0,t.l,t.opacity);var n=Math.atan2(t.b,t.a)*te;return new _e(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function ve(t,n,e,r){return 1===arguments.length?ye(t):new _e(e,n,t,null==r?1:r)}function be(t,n,e,r){return 1===arguments.length?ye(t):new _e(t,n,e,null==r?1:r)}function _e(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}kn(le,se,Nn(En,{brighter:function(t){return new le(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new le(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return new Vn(pe(3.1338561*(n=ne*de(n))-1.6168667*(t=ee*de(t))-.4906146*(e=re*de(e))),pe(-.9787684*n+1.9161415*t+.033454*e),pe(.0719453*n-.2289914*t+1.4052427*e),this.opacity)}})),kn(_e,be,Nn(En,{brighter:function(t){return new _e(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new _e(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return ce(this).rgb()}}));var me=-.29227,xe=-.90649,we=1.97294,Me=we*xe,Ae=1.78277*we,Se=1.78277*me- -.14861*xe;function Te(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof ke)return new ke(t.h,t.s,t.l,t.opacity);t instanceof Vn||(t=Gn(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(Se*r+Me*n-Ae*e)/(Se+Me-Ae),o=r-i,u=(we*(e-i)-me*o)/xe,a=Math.sqrt(u*u+o*o)/(we*i*(1-i)),c=a?Math.atan2(u,o)*te-120:NaN;return new ke(c<0?c+360:c,a,i,t.opacity)}(t):new ke(t,n,e,null==r?1:r)}function ke(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Ne(t,n,e,r,i){var o=t*t,u=o*t;return((1-3*t+3*o-u)*n+(4-6*o+3*u)*e+(1+3*t+3*o-3*u)*r+u*i)/6}kn(ke,Te,Nn(En,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new ke(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new ke(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*Jn,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new Vn(255*(n+e*(-.14861*r+1.78277*i)),255*(n+e*(me*r+xe*i)),255*(n+e*(we*r)),this.opacity)}}));var Ee=function(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),i=t[r],o=t[r+1],u=r>0?t[r-1]:2*i-o,a=r<n-1?t[r+2]:2*o-i;return Ne((e-r/n)*n,u,i,o,a)}},Ce=function(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),i=t[(r+n-1)%n],o=t[r%n],u=t[(r+1)%n],a=t[(r+2)%n];return Ne((e-r/n)*n,i,o,u,a)}},ze=function(t){return function(){return t}};function Pe(t,n){return function(e){return t+e*n}}function Re(t,n){var e=n-t;return e?Pe(t,e>180||e<-180?e-360*Math.round(e/360):e):ze(isNaN(t)?n:t)}function Le(t){return 1==(t=+t)?Ue:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):ze(isNaN(n)?e:n)}}function Ue(t,n){var e=n-t;return e?Pe(t,e):ze(isNaN(t)?n:t)}var De=function t(n){var e=Le(n);function r(t,n){var r=e((t=Xn(t)).r,(n=Xn(n)).r),i=e(t.g,n.g),o=e(t.b,n.b),u=Ue(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=i(n),t.b=o(n),t.opacity=u(n),t+""}}return r.gamma=t,r}(1);function qe(t){return function(n){var e,r,i=n.length,o=new Array(i),u=new Array(i),a=new Array(i);for(e=0;e<i;++e)r=Xn(n[e]),o[e]=r.r||0,u[e]=r.g||0,a[e]=r.b||0;return o=t(o),u=t(u),a=t(a),r.opacity=1,function(t){return r.r=o(t),r.g=u(t),r.b=a(t),r+""}}}var Be=qe(Ee),Oe=qe(Ce),Ye=function(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,o=new Array(i),u=new Array(r);for(e=0;e<i;++e)o[e]=Qe(t[e],n[e]);for(;e<r;++e)u[e]=n[e];return function(t){for(e=0;e<i;++e)u[e]=o[e](t);return u}},Ie=function(t,n){var e=new Date;return n-=t=+t,function(r){return e.setTime(t+n*r),e}},Fe=function(t,n){return n-=t=+t,function(e){return t+n*e}},je=function(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=Qe(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}},He=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Ge=new RegExp(He.source,"g");var Xe,Ve,$e,We,Ze=function(t,n){var e,r,i,o=He.lastIndex=Ge.lastIndex=0,u=-1,a=[],c=[];for(t+="",n+="";(e=He.exec(t))&&(r=Ge.exec(n));)(i=r.index)>o&&(i=n.slice(o,i),a[u]?a[u]+=i:a[++u]=i),(e=e[0])===(r=r[0])?a[u]?a[u]+=r:a[++u]=r:(a[++u]=null,c.push({i:u,x:Fe(e,r)})),o=Ge.lastIndex;return o<n.length&&(i=n.slice(o),a[u]?a[u]+=i:a[++u]=i),a.length<2?c[0]?function(t){return function(n){return t(n)+""}}(c[0].x):function(t){return function(){return t}}(n):(n=c.length,function(t){for(var e,r=0;r<n;++r)a[(e=c[r]).i]=e.x(t);return a.join("")})},Qe=function(t,n){var e,r=typeof n;return null==n||"boolean"===r?ze(n):("number"===r?Fe:"string"===r?(e=Fn(n))?(n=e,De):Ze:n instanceof Fn?De:n instanceof Date?Ie:Array.isArray(n)?Ye:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?je:Fe)(t,n)},Ke=function(t,n){return n-=t=+t,function(e){return Math.round(t+n*e)}},Je=180/Math.PI,tr={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},nr=function(t,n,e,r,i,o){var u,a,c;return(u=Math.sqrt(t*t+n*n))&&(t/=u,n/=u),(c=t*e+n*r)&&(e-=t*c,r-=n*c),(a=Math.sqrt(e*e+r*r))&&(e/=a,r/=a,c/=a),t*r<n*e&&(t=-t,n=-n,c=-c,u=-u),{translateX:i,translateY:o,rotate:Math.atan2(n,t)*Je,skewX:Math.atan(c)*Je,scaleX:u,scaleY:a}};function er(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}return function(o,u){var a=[],c=[];return o=t(o),u=t(u),function(t,r,i,o,u,a){if(t!==i||r!==o){var c=u.push("translate(",null,n,null,e);a.push({i:c-4,x:Fe(t,i)},{i:c-2,x:Fe(r,o)})}else(i||o)&&u.push("translate("+i+n+o+e)}(o.translateX,o.translateY,u.translateX,u.translateY,a,c),function(t,n,e,o){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),o.push({i:e.push(i(e)+"rotate(",null,r)-2,x:Fe(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}(o.rotate,u.rotate,a,c),function(t,n,e,o){t!==n?o.push({i:e.push(i(e)+"skewX(",null,r)-2,x:Fe(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}(o.skewX,u.skewX,a,c),function(t,n,e,r,o,u){if(t!==e||n!==r){var a=o.push(i(o)+"scale(",null,",",null,")");u.push({i:a-4,x:Fe(t,e)},{i:a-2,x:Fe(n,r)})}else 1===e&&1===r||o.push(i(o)+"scale("+e+","+r+")")}(o.scaleX,o.scaleY,u.scaleX,u.scaleY,a,c),o=u=null,function(t){for(var n,e=-1,r=c.length;++e<r;)a[(n=c[e]).i]=n.x(t);return a.join("")}}}var rr=er(function(t){return"none"===t?tr:(Xe||(Xe=document.createElement("DIV"),Ve=document.documentElement,$e=document.defaultView),Xe.style.transform=t,t=$e.getComputedStyle(Ve.appendChild(Xe),null).getPropertyValue("transform"),Ve.removeChild(Xe),t=t.slice(7,-1).split(","),nr(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))},"px, ","px)","deg)"),ir=er(function(t){return null==t?tr:(We||(We=document.createElementNS("http://www.w3.org/2000/svg","g")),We.setAttribute("transform",t),(t=We.transform.baseVal.consolidate())?(t=t.matrix,nr(t.a,t.b,t.c,t.d,t.e,t.f)):tr)},", ",")",")"),or=Math.SQRT2;function ur(t){return((t=Math.exp(t))+1/t)/2}var ar=function(t,n){var e,r,i=t[0],o=t[1],u=t[2],a=n[0],c=n[1],f=n[2],s=a-i,l=c-o,h=s*s+l*l;if(h<1e-12)r=Math.log(f/u)/or,e=function(t){return[i+t*s,o+t*l,u*Math.exp(or*t*r)]};else{var d=Math.sqrt(h),p=(f*f-u*u+4*h)/(2*u*2*d),g=(f*f-u*u-4*h)/(2*f*2*d),y=Math.log(Math.sqrt(p*p+1)-p),v=Math.log(Math.sqrt(g*g+1)-g);r=(v-y)/or,e=function(t){var n,e=t*r,a=ur(y),c=u/(2*d)*(a*(n=or*e+y,((n=Math.exp(2*n))-1)/(n+1))-function(t){return((t=Math.exp(t))-1/t)/2}(y));return[i+c*s,o+c*l,u*a/ur(or*e+y)]}}return e.duration=1e3*r,e};function cr(t){return function(n,e){var r=t((n=Zn(n)).h,(e=Zn(e)).h),i=Ue(n.s,e.s),o=Ue(n.l,e.l),u=Ue(n.opacity,e.opacity);return function(t){return n.h=r(t),n.s=i(t),n.l=o(t),n.opacity=u(t),n+""}}}var fr=cr(Re),sr=cr(Ue);function lr(t,n){var e=Ue((t=se(t)).l,(n=se(n)).l),r=Ue(t.a,n.a),i=Ue(t.b,n.b),o=Ue(t.opacity,n.opacity);return function(n){return t.l=e(n),t.a=r(n),t.b=i(n),t.opacity=o(n),t+""}}function hr(t){return function(n,e){var r=t((n=be(n)).h,(e=be(e)).h),i=Ue(n.c,e.c),o=Ue(n.l,e.l),u=Ue(n.opacity,e.opacity);return function(t){return n.h=r(t),n.c=i(t),n.l=o(t),n.opacity=u(t),n+""}}}var dr=hr(Re),pr=hr(Ue);function gr(t){return function n(e){function r(n,r){var i=t((n=Te(n)).h,(r=Te(r)).h),o=Ue(n.s,r.s),u=Ue(n.l,r.l),a=Ue(n.opacity,r.opacity);return function(t){return n.h=i(t),n.s=o(t),n.l=u(Math.pow(t,e)),n.opacity=a(t),n+""}}return e=+e,r.gamma=n,r}(1)}var yr=gr(Re),vr=gr(Ue);function br(t,n){for(var e=0,r=n.length-1,i=n[0],o=new Array(r<0?0:r);e<r;)o[e]=t(i,i=n[++e]);return function(t){var n=Math.max(0,Math.min(r-1,Math.floor(t*=r)));return o[n](t-n)}}var _r,mr,xr=function(t,n){for(var e=new Array(n),r=0;r<n;++r)e[r]=t(r/(n-1));return e},wr=0,Mr=0,Ar=0,Sr=1e3,Tr=0,kr=0,Nr=0,Er="object"==typeof performance&&performance.now?performance:Date,Cr="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function zr(){return kr||(Cr(Pr),kr=Er.now()+Nr)}function Pr(){kr=0}function Rr(){this._call=this._time=this._next=null}function Lr(t,n,e){var r=new Rr;return r.restart(t,n,e),r}function Ur(){zr(),++wr;for(var t,n=_r;n;)(t=kr-n._time)>=0&&n._call.call(null,t),n=n._next;--wr}function Dr(){kr=(Tr=Er.now())+Nr,wr=Mr=0;try{Ur()}finally{wr=0,function(){var t,n,e=_r,r=1/0;for(;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:_r=n);mr=t,Br(r)}(),kr=0}}function qr(){var t=Er.now(),n=t-Tr;n>Sr&&(Nr-=n,Tr=t)}function Br(t){wr||(Mr&&(Mr=clearTimeout(Mr)),t-kr>24?(t<1/0&&(Mr=setTimeout(Dr,t-Er.now()-Nr)),Ar&&(Ar=clearInterval(Ar))):(Ar||(Tr=Er.now(),Ar=setInterval(qr,Sr)),wr=1,Cr(Dr)))}Rr.prototype=Lr.prototype={constructor:Rr,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?zr():+e)+(null==n?0:+n),this._next||mr===this||(mr?mr._next=this:_r=this,mr=this),this._call=t,this._time=e,Br()},stop:function(){this._call&&(this._call=null,this._time=1/0,Br())}};var Or=function(t,n,e){var r=new Rr;return n=null==n?0:+n,r.restart(function(e){r.stop(),t(e+n)},n,e),r},Yr=function(t,n,e){var r=new Rr,i=n;return null==n?(r.restart(t,n,e),r):(n=+n,e=null==e?zr():+e,r.restart(function o(u){u+=i,r.restart(o,i+=n,e),t(u)},n,e),r)},Ir=ht("start","end","interrupt"),Fr=[],jr=0,Hr=1,Gr=2,Xr=3,Vr=4,$r=5,Wr=6,Zr=function(t,n,e,r,i,o){var u=t.__transition;if(u){if(e in u)return}else t.__transition={};!function(t,n,e){var r,i=t.__transition;function o(c){var f,s,l,h;if(e.state!==Hr)return a();for(f in i)if((h=i[f]).name===e.name){if(h.state===Xr)return Or(o);h.state===Vr?(h.state=Wr,h.timer.stop(),h.on.call("interrupt",t,t.__data__,h.index,h.group),delete i[f]):+f<n&&(h.state=Wr,h.timer.stop(),delete i[f])}if(Or(function(){e.state===Xr&&(e.state=Vr,e.timer.restart(u,e.delay,e.time),u(c))}),e.state=Gr,e.on.call("start",t,t.__data__,e.index,e.group),e.state===Gr){for(e.state=Xr,r=new Array(l=e.tween.length),f=0,s=-1;f<l;++f)(h=e.tween[f].value.call(t,t.__data__,e.index,e.group))&&(r[++s]=h);r.length=s+1}}function u(n){for(var i=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(a),e.state=$r,1),o=-1,u=r.length;++o<u;)r[o].call(null,i);e.state===$r&&(e.on.call("end",t,t.__data__,e.index,e.group),a())}function a(){for(var r in e.state=Wr,e.timer.stop(),delete i[n],i)return;delete t.__transition}i[n]=e,e.timer=Lr(function(t){e.state=Hr,e.timer.restart(o,e.delay,e.time),e.delay<=t&&o(t-e.delay)},0,e.time)}(t,e,{name:n,index:r,group:i,on:Ir,tween:Fr,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:jr})};function Qr(t,n){var e=Jr(t,n);if(e.state>jr)throw new Error("too late; already scheduled");return e}function Kr(t,n){var e=Jr(t,n);if(e.state>Gr)throw new Error("too late; already started");return e}function Jr(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("transition not found");return e}var ti=function(t,n){var e,r,i,o=t.__transition,u=!0;if(o){for(i in n=null==n?null:n+"",o)(e=o[i]).name===n?(r=e.state>Gr&&e.state<$r,e.state=Wr,e.timer.stop(),r&&e.on.call("interrupt",t,t.__data__,e.index,e.group),delete o[i]):u=!1;u&&delete t.__transition}};function ni(t,n,e){var r=t._id;return t.each(function(){var t=Kr(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)}),function(t){return Jr(t,r).value[n]}}var ei=function(t,n){var e;return("number"==typeof n?Fe:n instanceof Fn?De:(e=Fn(n))?(n=e,De):Ze)(t,n)};var ri=rn.prototype.constructor;var ii=0;function oi(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function ui(t){return rn().transition(t)}function ai(){return++ii}var ci=rn.prototype;function fi(t){return+t}function si(t){return t*t}function li(t){return t*(2-t)}function hi(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}function di(t){return t*t*t}function pi(t){return--t*t*t+1}function gi(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}oi.prototype=ui.prototype={constructor:oi,select:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=bt(t));for(var r=this._groups,i=r.length,o=new Array(i),u=0;u<i;++u)for(var a,c,f=r[u],s=f.length,l=o[u]=new Array(s),h=0;h<s;++h)(a=f[h])&&(c=t.call(a,a.__data__,h,f))&&("__data__"in a&&(c.__data__=a.__data__),l[h]=c,Zr(l[h],n,e,h,l,Jr(a,e)));return new oi(o,this._parents,n,e)},selectAll:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=mt(t));for(var r=this._groups,i=r.length,o=[],u=[],a=0;a<i;++a)for(var c,f=r[a],s=f.length,l=0;l<s;++l)if(c=f[l]){for(var h,d=t.call(c,c.__data__,l,f),p=Jr(c,e),g=0,y=d.length;g<y;++g)(h=d[g])&&Zr(h,n,e,g,d,p);o.push(d),u.push(c)}return new oi(o,u,n,e)},filter:function(t){"function"!=typeof t&&(t=At(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u=n[i],a=u.length,c=r[i]=[],f=0;f<a;++f)(o=u[f])&&t.call(o,o.__data__,f,u)&&c.push(o);return new oi(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var c,f=n[a],s=e[a],l=f.length,h=u[a]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;a<r;++a)u[a]=n[a];return new oi(u,this._parents,this._name,this._id)},selection:function(){return new ri(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=ai(),r=this._groups,i=r.length,o=0;o<i;++o)for(var u,a=r[o],c=a.length,f=0;f<c;++f)if(u=a[f]){var s=Jr(u,n);Zr(u,t,e,f,a,{time:s.time+s.delay+s.duration,delay:0,duration:s.duration,ease:s.ease})}return new oi(r,this._parents,t,e)},call:ci.call,nodes:ci.nodes,node:ci.node,size:ci.size,empty:ci.empty,each:ci.each,on:function(t,n){var e=this._id;return arguments.length<2?Jr(this.node(),e).on.on(t):this.each(function(t,n,e){var r,i,o=function(t){return(t+"").trim().split(/^|\s+/).every(function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t})}(n)?Qr:Kr;return function(){var u=o(this,t),a=u.on;a!==r&&(i=(r=a).copy()).on(n,e),u.on=i}}(e,t,n))},attr:function(t,n){var e=gt(t),r="transform"===e?ir:ei;return this.attrTween(t,"function"==typeof n?(e.local?function(t,n,e){var r,i,o;return function(){var u,a=e(this);if(null!=a)return(u=this.getAttributeNS(t.space,t.local))===a?null:u===r&&a===i?o:o=n(r=u,i=a);this.removeAttributeNS(t.space,t.local)}}:function(t,n,e){var r,i,o;return function(){var u,a=e(this);if(null!=a)return(u=this.getAttribute(t))===a?null:u===r&&a===i?o:o=n(r=u,i=a);this.removeAttribute(t)}})(e,r,ni(this,"attr."+t,n)):null==n?(e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}})(e):(e.local?function(t,n,e){var r,i;return function(){var o=this.getAttributeNS(t.space,t.local);return o===e?null:o===r?i:i=n(r=o,e)}}:function(t,n,e){var r,i;return function(){var o=this.getAttribute(t);return o===e?null:o===r?i:i=n(r=o,e)}})(e,r,n+""))},attrTween:function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var r=gt(t);return this.tween(e,(r.local?function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttributeNS(t.space,t.local,r(n))}}return e._value=n,e}:function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttribute(t,r(n))}}return e._value=n,e})(r,n))},style:function(t,n,e){var r="transform"==(t+="")?rr:ei;return null==n?this.styleTween(t,function(t,n){var e,r,i;return function(){var o=Pt(this,t),u=(this.style.removeProperty(t),Pt(this,t));return o===u?null:o===e&&u===r?i:i=n(e=o,r=u)}}(t,r)).on("end.style."+t,function(t){return function(){this.style.removeProperty(t)}}(t)):this.styleTween(t,"function"==typeof n?function(t,n,e){var r,i,o;return function(){var u=Pt(this,t),a=e(this);return null==a&&(this.style.removeProperty(t),a=Pt(this,t)),u===a?null:u===r&&a===i?o:o=n(r=u,i=a)}}(t,r,ni(this,"style."+t,n)):function(t,n,e){var r,i;return function(){var o=Pt(this,t);return o===e?null:o===r?i:i=n(r=o,e)}}(t,r,n+""),e)},styleTween:function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,function(t,n,e){function r(){var r=this,i=n.apply(r,arguments);return i&&function(n){r.style.setProperty(t,i(n),e)}}return r._value=n,r}(t,n,null==e?"":e))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?"":n}}(ni(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},remove:function(){return this.on("end.remove",(t=this._id,function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}));var t},tween:function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=Jr(this.node(),e).tween,o=0,u=i.length;o<u;++o)if((r=i[o]).name===t)return r.value;return null}return this.each((null==n?function(t,n){var e,r;return function(){var i=Kr(this,t),o=i.tween;if(o!==e)for(var u=0,a=(r=e=o).length;u<a;++u)if(r[u].name===n){(r=r.slice()).splice(u,1);break}i.tween=r}}:function(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var o=Kr(this,t),u=o.tween;if(u!==r){i=(r=u).slice();for(var a={name:n,value:e},c=0,f=i.length;c<f;++c)if(i[c].name===n){i[c]=a;break}c===f&&i.push(a)}o.tween=i}})(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){Qr(this,t).delay=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){Qr(this,t).delay=n}})(n,t)):Jr(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){Kr(this,t).duration=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){Kr(this,t).duration=n}})(n,t)):Jr(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(function(t,n){if("function"!=typeof n)throw new Error;return function(){Kr(this,t).ease=n}}(n,t)):Jr(this.node(),n).ease}};var yi=function t(n){function e(t){return Math.pow(t,n)}return n=+n,e.exponent=t,e}(3),vi=function t(n){function e(t){return 1-Math.pow(1-t,n)}return n=+n,e.exponent=t,e}(3),bi=function t(n){function e(t){return((t*=2)<=1?Math.pow(t,n):2-Math.pow(2-t,n))/2}return n=+n,e.exponent=t,e}(3),_i=Math.PI,mi=_i/2;function xi(t){return 1-Math.cos(t*mi)}function wi(t){return Math.sin(t*mi)}function Mi(t){return(1-Math.cos(_i*t))/2}function Ai(t){return Math.pow(2,10*t-10)}function Si(t){return 1-Math.pow(2,-10*t)}function Ti(t){return((t*=2)<=1?Math.pow(2,10*t-10):2-Math.pow(2,10-10*t))/2}function ki(t){return 1-Math.sqrt(1-t*t)}function Ni(t){return Math.sqrt(1- --t*t)}function Ei(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}var Ci=4/11,zi=6/11,Pi=8/11,Ri=.75,Li=9/11,Ui=10/11,Di=.9375,qi=21/22,Bi=63/64,Oi=1/Ci/Ci;function Yi(t){return 1-Ii(1-t)}function Ii(t){return(t=+t)<Ci?Oi*t*t:t<Pi?Oi*(t-=zi)*t+Ri:t<Ui?Oi*(t-=Li)*t+Di:Oi*(t-=qi)*t+Bi}function Fi(t){return((t*=2)<=1?1-Ii(1-t):Ii(t-1)+1)/2}var ji=function t(n){function e(t){return t*t*((n+1)*t-n)}return n=+n,e.overshoot=t,e}(1.70158),Hi=function t(n){function e(t){return--t*t*((n+1)*t+n)+1}return n=+n,e.overshoot=t,e}(1.70158),Gi=function t(n){function e(t){return((t*=2)<1?t*t*((n+1)*t-n):(t-=2)*t*((n+1)*t+n)+2)/2}return n=+n,e.overshoot=t,e}(1.70158),Xi=2*Math.PI,Vi=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=Xi);function i(t){return n*Math.pow(2,10*--t)*Math.sin((r-t)/e)}return i.amplitude=function(n){return t(n,e*Xi)},i.period=function(e){return t(n,e)},i}(1,.3),$i=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=Xi);function i(t){return 1-n*Math.pow(2,-10*(t=+t))*Math.sin((t+r)/e)}return i.amplitude=function(n){return t(n,e*Xi)},i.period=function(e){return t(n,e)},i}(1,.3),Wi=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=Xi);function i(t){return((t=2*t-1)<0?n*Math.pow(2,10*t)*Math.sin((r-t)/e):2-n*Math.pow(2,-10*t)*Math.sin((r+t)/e))/2}return i.amplitude=function(n){return t(n,e*Xi)},i.period=function(e){return t(n,e)},i}(1,.3),Zi={time:null,delay:0,duration:250,ease:gi};function Qi(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))return Zi.time=zr(),Zi;return e}rn.prototype.interrupt=function(t){return this.each(function(){ti(this,t)})},rn.prototype.transition=function(t){var n,e;t instanceof oi?(n=t._id,t=t._name):(n=ai(),(e=Zi).time=zr(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var u,a=r[o],c=a.length,f=0;f<c;++f)(u=a[f])&&Zr(u,t,n,f,a,e||Qi(u,n));return new oi(r,this._parents,t,n)};var Ki=[null],Ji=function(t,n){var e,r,i=t.__transition;if(i)for(r in n=null==n?null:n+"",i)if((e=i[r]).state>Hr&&e.name===n)return new oi([[t]],Ki,n,+r);return null},to=function(t){return function(){return t}},no=function(t,n,e){this.target=t,this.type=n,this.selection=e};function eo(){Vt.stopImmediatePropagation()}var ro=function(){Vt.preventDefault(),Vt.stopImmediatePropagation()},io={name:"drag"},oo={name:"space"},uo={name:"handle"},ao={name:"center"},co={name:"x",handles:["e","w"].map(vo),input:function(t,n){return t&&[[t[0],n[0][1]],[t[1],n[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},fo={name:"y",handles:["n","s"].map(vo),input:function(t,n){return t&&[[n[0][0],t[0]],[n[1][0],t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},so={name:"xy",handles:["n","e","s","w","nw","ne","se","sw"].map(vo),input:function(t){return t},output:function(t){return t}},lo={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},ho={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},po={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},go={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},yo={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function vo(t){return{type:t}}function bo(){return!Vt.button}function _o(){var t=this.ownerSVGElement||this;return[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]}function mo(t){for(;!t.__brush;)if(!(t=t.parentNode))return;return t.__brush}function xo(t){return t[0][0]===t[1][0]||t[0][1]===t[1][1]}function wo(t){var n=t.__brush;return n?n.dim.output(n.selection):null}function Mo(){return To(co)}function Ao(){return To(fo)}var So=function(){return To(so)};function To(t){var n,e=_o,r=bo,i=ht(u,"start","brush","end"),o=6;function u(n){var e=n.property("__brush",l).selectAll(".overlay").data([vo("overlay")]);e.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",lo.overlay).merge(e).each(function(){var t=mo(this).extent;on(this).attr("x",t[0][0]).attr("y",t[0][1]).attr("width",t[1][0]-t[0][0]).attr("height",t[1][1]-t[0][1])}),n.selectAll(".selection").data([vo("selection")]).enter().append("rect").attr("class","selection").attr("cursor",lo.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var r=n.selectAll(".handle").data(t.handles,function(t){return t.type});r.exit().remove(),r.enter().append("rect").attr("class",function(t){return"handle handle--"+t.type}).attr("cursor",function(t){return lo[t.type]}),n.each(a).attr("fill","none").attr("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush touchstart.brush",s)}function a(){var t=on(this),n=mo(this).selection;n?(t.selectAll(".selection").style("display",null).attr("x",n[0][0]).attr("y",n[0][1]).attr("width",n[1][0]-n[0][0]).attr("height",n[1][1]-n[0][1]),t.selectAll(".handle").style("display",null).attr("x",function(t){return"e"===t.type[t.type.length-1]?n[1][0]-o/2:n[0][0]-o/2}).attr("y",function(t){return"s"===t.type[0]?n[1][1]-o/2:n[0][1]-o/2}).attr("width",function(t){return"n"===t.type||"s"===t.type?n[1][0]-n[0][0]+o:o}).attr("height",function(t){return"e"===t.type||"w"===t.type?n[1][1]-n[0][1]+o:o})):t.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function c(t,n){return t.__brush.emitter||new f(t,n)}function f(t,n){this.that=t,this.args=n,this.state=t.__brush,this.active=0}function s(){if(Vt.touches){if(Vt.changedTouches.length<Vt.touches.length)return ro()}else if(n)return;if(r.apply(this,arguments)){var e,i,o,u,f,s,l,h,d,p,g,y,v,b=this,_=Vt.target.__data__.type,m="selection"===(Vt.metaKey?_="overlay":_)?io:Vt.altKey?ao:uo,x=t===fo?null:go[_],w=t===co?null:yo[_],M=mo(b),A=M.extent,S=M.selection,T=A[0][0],k=A[0][1],N=A[1][0],E=A[1][1],C=x&&w&&Vt.shiftKey,z=hn(b),P=z,R=c(b,arguments).beforestart();"overlay"===_?M.selection=S=[[e=t===fo?T:z[0],o=t===co?k:z[1]],[f=t===fo?N:e,l=t===co?E:o]]:(e=S[0][0],o=S[0][1],f=S[1][0],l=S[1][1]),i=e,u=o,s=f,h=l;var L=on(b).attr("pointer-events","none"),U=L.selectAll(".overlay").attr("cursor",lo[_]);if(Vt.touches)L.on("touchmove.brush",q,!0).on("touchend.brush touchcancel.brush",O,!0);else{var D=on(Vt.view).on("keydown.brush",function(){switch(Vt.keyCode){case 16:C=x&&w;break;case 18:m===uo&&(x&&(f=s-d*x,e=i+d*x),w&&(l=h-p*w,o=u+p*w),m=ao,B());break;case 32:m!==uo&&m!==ao||(x<0?f=s-d:x>0&&(e=i-d),w<0?l=h-p:w>0&&(o=u-p),m=oo,U.attr("cursor",lo.selection),B());break;default:return}ro()},!0).on("keyup.brush",function(){switch(Vt.keyCode){case 16:C&&(y=v=C=!1,B());break;case 18:m===ao&&(x<0?f=s:x>0&&(e=i),w<0?l=h:w>0&&(o=u),m=uo,B());break;case 32:m===oo&&(Vt.altKey?(x&&(f=s-d*x,e=i+d*x),w&&(l=h-p*w,o=u+p*w),m=ao):(x<0?f=s:x>0&&(e=i),w<0?l=h:w>0&&(o=u),m=uo),U.attr("cursor",lo[_]),B());break;default:return}ro()},!0).on("mousemove.brush",q,!0).on("mouseup.brush",O,!0);bn(Vt.view)}eo(),ti(b),a.call(b),R.start()}function q(){var t=hn(b);!C||y||v||(Math.abs(t[0]-P[0])>Math.abs(t[1]-P[1])?v=!0:y=!0),P=t,g=!0,ro(),B()}function B(){var t;switch(d=P[0]-z[0],p=P[1]-z[1],m){case oo:case io:x&&(d=Math.max(T-e,Math.min(N-f,d)),i=e+d,s=f+d),w&&(p=Math.max(k-o,Math.min(E-l,p)),u=o+p,h=l+p);break;case uo:x<0?(d=Math.max(T-e,Math.min(N-e,d)),i=e+d,s=f):x>0&&(d=Math.max(T-f,Math.min(N-f,d)),i=e,s=f+d),w<0?(p=Math.max(k-o,Math.min(E-o,p)),u=o+p,h=l):w>0&&(p=Math.max(k-l,Math.min(E-l,p)),u=o,h=l+p);break;case ao:x&&(i=Math.max(T,Math.min(N,e-d*x)),s=Math.max(T,Math.min(N,f+d*x))),w&&(u=Math.max(k,Math.min(E,o-p*w)),h=Math.max(k,Math.min(E,l+p*w)))}s<i&&(x*=-1,t=e,e=f,f=t,t=i,i=s,s=t,_ in ho&&U.attr("cursor",lo[_=ho[_]])),h<u&&(w*=-1,t=o,o=l,l=t,t=u,u=h,h=t,_ in po&&U.attr("cursor",lo[_=po[_]])),M.selection&&(S=M.selection),y&&(i=S[0][0],s=S[1][0]),v&&(u=S[0][1],h=S[1][1]),S[0][0]===i&&S[0][1]===u&&S[1][0]===s&&S[1][1]===h||(M.selection=[[i,u],[s,h]],a.call(b),R.brush())}function O(){if(eo(),Vt.touches){if(Vt.touches.length)return;n&&clearTimeout(n),n=setTimeout(function(){n=null},500),L.on("touchmove.brush touchend.brush touchcancel.brush",null)}else _n(Vt.view,g),D.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);L.attr("pointer-events","all"),U.attr("cursor",lo.overlay),M.selection&&(S=M.selection),xo(S)&&(M.selection=null,a.call(b)),R.end()}}function l(){var n=this.__brush||{selection:null};return n.extent=e.apply(this,arguments),n.dim=t,n}return u.move=function(n,e){n.selection?n.on("start.brush",function(){c(this,arguments).beforestart().start()}).on("interrupt.brush end.brush",function(){c(this,arguments).end()}).tween("brush",function(){var n=this,r=n.__brush,i=c(n,arguments),o=r.selection,u=t.input("function"==typeof e?e.apply(this,arguments):e,r.extent),f=Qe(o,u);function s(t){r.selection=1===t&&xo(u)?null:f(t),a.call(n),i.brush()}return o&&u?s:s(1)}):n.each(function(){var n=arguments,r=this.__brush,i=t.input("function"==typeof e?e.apply(this,n):e,r.extent),o=c(this,n).beforestart();ti(this),r.selection=null==i||xo(i)?null:i,a.call(this),o.start().brush().end()})},f.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting&&(this.starting=!1,this.emit("start")),this},brush:function(){return this.emit("brush"),this},end:function(){return 0==--this.active&&(delete this.state.emitter,this.emit("end")),this},emit:function(n){Kt(new no(u,n,t.output(this.state.selection)),i.apply,i,[n,this.that,this.args])}},u.extent=function(t){return arguments.length?(e="function"==typeof t?t:to([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),u):e},u.filter=function(t){return arguments.length?(r="function"==typeof t?t:to(!!t),u):r},u.handleSize=function(t){return arguments.length?(o=+t,u):o},u.on=function(){var t=i.on.apply(i,arguments);return t===i?u:t},u}var ko=Math.cos,No=Math.sin,Eo=Math.PI,Co=Eo/2,zo=2*Eo,Po=Math.max;var Ro=function(){var t=0,n=null,e=null,r=null;function i(i){var o,u,a,c,f,s,l=i.length,h=[],d=w(l),p=[],g=[],y=g.groups=new Array(l),v=new Array(l*l);for(o=0,f=-1;++f<l;){for(u=0,s=-1;++s<l;)u+=i[f][s];h.push(u),p.push(w(l)),o+=u}for(n&&d.sort(function(t,e){return n(h[t],h[e])}),e&&p.forEach(function(t,n){t.sort(function(t,r){return e(i[n][t],i[n][r])})}),c=(o=Po(0,zo-t*l)/o)?t:zo/l,u=0,f=-1;++f<l;){for(a=u,s=-1;++s<l;){var b=d[f],_=p[b][s],m=i[b][_],x=u,M=u+=m*o;v[_*l+b]={index:b,subindex:_,startAngle:x,endAngle:M,value:m}}y[b]={index:b,startAngle:a,endAngle:u,value:h[b]},u+=c}for(f=-1;++f<l;)for(s=f-1;++s<l;){var A=v[s*l+f],S=v[f*l+s];(A.value||S.value)&&g.push(A.value<S.value?{source:S,target:A}:{source:A,target:S})}return r?g.sort(r):g}return i.padAngle=function(n){return arguments.length?(t=Po(0,n),i):t},i.sortGroups=function(t){return arguments.length?(n=t,i):n},i.sortSubgroups=function(t){return arguments.length?(e=t,i):e},i.sortChords=function(t){return arguments.length?(null==t?r=null:(n=t,r=function(t,e){return n(t.source.value+t.target.value,e.source.value+e.target.value)})._=t,i):r&&r._;var n},i},Lo=Array.prototype.slice,Uo=function(t){return function(){return t}},Do=Math.PI,qo=2*Do,Bo=qo-1e-6;function Oo(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function Yo(){return new Oo}Oo.prototype=Yo.prototype={constructor:Oo,moveTo:function(t,n){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,n){this._+="L"+(this._x1=+t)+","+(this._y1=+n)},quadraticCurveTo:function(t,n,e,r){this._+="Q"+ +t+","+ +n+","+(this._x1=+e)+","+(this._y1=+r)},bezierCurveTo:function(t,n,e,r,i,o){this._+="C"+ +t+","+ +n+","+ +e+","+ +r+","+(this._x1=+i)+","+(this._y1=+o)},arcTo:function(t,n,e,r,i){t=+t,n=+n,e=+e,r=+r,i=+i;var o=this._x1,u=this._y1,a=e-t,c=r-n,f=o-t,s=u-n,l=f*f+s*s;if(i<0)throw new Error("negative radius: "+i);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=n);else if(l>1e-6)if(Math.abs(s*a-c*f)>1e-6&&i){var h=e-o,d=r-u,p=a*a+c*c,g=h*h+d*d,y=Math.sqrt(p),v=Math.sqrt(l),b=i*Math.tan((Do-Math.acos((p+l-g)/(2*y*v)))/2),_=b/v,m=b/y;Math.abs(_-1)>1e-6&&(this._+="L"+(t+_*f)+","+(n+_*s)),this._+="A"+i+","+i+",0,0,"+ +(s*h>f*d)+","+(this._x1=t+m*a)+","+(this._y1=n+m*c)}else this._+="L"+(this._x1=t)+","+(this._y1=n);else;},arc:function(t,n,e,r,i,o){t=+t,n=+n;var u=(e=+e)*Math.cos(r),a=e*Math.sin(r),c=t+u,f=n+a,s=1^o,l=o?r-i:i-r;if(e<0)throw new Error("negative radius: "+e);null===this._x1?this._+="M"+c+","+f:(Math.abs(this._x1-c)>1e-6||Math.abs(this._y1-f)>1e-6)&&(this._+="L"+c+","+f),e&&(l<0&&(l=l%qo+qo),l>Bo?this._+="A"+e+","+e+",0,1,"+s+","+(t-u)+","+(n-a)+"A"+e+","+e+",0,1,"+s+","+(this._x1=c)+","+(this._y1=f):l>1e-6&&(this._+="A"+e+","+e+",0,"+ +(l>=Do)+","+s+","+(this._x1=t+e*Math.cos(i))+","+(this._y1=n+e*Math.sin(i))))},rect:function(t,n,e,r){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)+"h"+ +e+"v"+ +r+"h"+-e+"Z"},toString:function(){return this._}};var Io=Yo;function Fo(t){return t.source}function jo(t){return t.target}function Ho(t){return t.radius}function Go(t){return t.startAngle}function Xo(t){return t.endAngle}var Vo=function(){var t=Fo,n=jo,e=Ho,r=Go,i=Xo,o=null;function u(){var u,a=Lo.call(arguments),c=t.apply(this,a),f=n.apply(this,a),s=+e.apply(this,(a[0]=c,a)),l=r.apply(this,a)-Co,h=i.apply(this,a)-Co,d=s*ko(l),p=s*No(l),g=+e.apply(this,(a[0]=f,a)),y=r.apply(this,a)-Co,v=i.apply(this,a)-Co;if(o||(o=u=Io()),o.moveTo(d,p),o.arc(0,0,s,l,h),l===y&&h===v||(o.quadraticCurveTo(0,0,g*ko(y),g*No(y)),o.arc(0,0,g,y,v)),o.quadraticCurveTo(0,0,d,p),o.closePath(),u)return o=null,u+""||null}return u.radius=function(t){return arguments.length?(e="function"==typeof t?t:Uo(+t),u):e},u.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:Uo(+t),u):r},u.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:Uo(+t),u):i},u.source=function(n){return arguments.length?(t=n,u):t},u.target=function(t){return arguments.length?(n=t,u):n},u.context=function(t){return arguments.length?(o=null==t?null:t,u):o},u};function $o(){}function Wo(t,n){var e=new $o;if(t instanceof $o)t.each(function(t,n){e.set(n,t)});else if(Array.isArray(t)){var r,i=-1,o=t.length;if(null==n)for(;++i<o;)e.set(i,t[i]);else for(;++i<o;)e.set(n(r=t[i],i,t),r)}else if(t)for(var u in t)e.set(u,t[u]);return e}$o.prototype=Wo.prototype={constructor:$o,has:function(t){return"$"+t in this},get:function(t){return this["$"+t]},set:function(t,n){return this["$"+t]=n,this},remove:function(t){var n="$"+t;return n in this&&delete this[n]},clear:function(){for(var t in this)"$"===t[0]&&delete this[t]},keys:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)"$"===n[0]&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)"$"===n[0]&&++t;return t},empty:function(){for(var t in this)if("$"===t[0])return!1;return!0},each:function(t){for(var n in this)"$"===n[0]&&t(this[n],n.slice(1),this)}};var Zo=Wo,Qo=function(){var t,n,e,r=[],i=[];function o(e,i,u,a){if(i>=r.length)return null!=t&&e.sort(t),null!=n?n(e):e;for(var c,f,s,l=-1,h=e.length,d=r[i++],p=Zo(),g=u();++l<h;)(s=p.get(c=d(f=e[l])+""))?s.push(f):p.set(c,[f]);return p.each(function(t,n){a(g,n,o(t,i,u,a))}),g}return e={object:function(t){return o(t,0,Ko,Jo)},map:function(t){return o(t,0,tu,nu)},entries:function(t){return function t(e,o){if(++o>r.length)return e;var u,a=i[o-1];return null!=n&&o>=r.length?u=e.entries():(u=[],e.each(function(n,e){u.push({key:e,values:t(n,o)})})),null!=a?u.sort(function(t,n){return a(t.key,n.key)}):u}(o(t,0,tu,nu),0)},key:function(t){return r.push(t),e},sortKeys:function(t){return i[r.length-1]=t,e},sortValues:function(n){return t=n,e},rollup:function(t){return n=t,e}}};function Ko(){return{}}function Jo(t,n,e){t[n]=e}function tu(){return Zo()}function nu(t,n,e){t.set(n,e)}function eu(){}var ru=Zo.prototype;function iu(t,n){var e=new eu;if(t instanceof eu)t.each(function(t){e.add(t)});else if(t){var r=-1,i=t.length;if(null==n)for(;++r<i;)e.add(t[r]);else for(;++r<i;)e.add(n(t[r],r,t))}return e}eu.prototype=iu.prototype={constructor:eu,has:ru.has,add:function(t){return this["$"+(t+="")]=t,this},remove:ru.remove,clear:ru.clear,values:ru.keys,size:ru.size,empty:ru.empty,each:ru.each};var ou=iu,uu=function(t){var n=[];for(var e in t)n.push(e);return n},au=function(t){var n=[];for(var e in t)n.push(t[e]);return n},cu=function(t){var n=[];for(var e in t)n.push({key:e,value:t[e]});return n},fu=Array.prototype.slice,su=function(t,n){return t-n},lu=function(t){for(var n=0,e=t.length,r=t[e-1][1]*t[0][0]-t[e-1][0]*t[0][1];++n<e;)r+=t[n-1][1]*t[n][0]-t[n-1][0]*t[n][1];return r},hu=function(t){return function(){return t}},du=function(t,n){for(var e,r=-1,i=n.length;++r<i;)if(e=pu(t,n[r]))return e;return 0};function pu(t,n){for(var e=n[0],r=n[1],i=-1,o=0,u=t.length,a=u-1;o<u;a=o++){var c=t[o],f=c[0],s=c[1],l=t[a],h=l[0],d=l[1];if(gu(c,l,n))return 0;s>r!=d>r&&e<(h-f)*(r-s)/(d-s)+f&&(i=-i)}return i}function gu(t,n,e){var r,i,o,u;return function(t,n,e){return(n[0]-t[0])*(e[1]-t[1])==(e[0]-t[0])*(n[1]-t[1])}(t,n,e)&&(i=t[r=+(t[0]===n[0])],o=e[r],u=n[r],i<=o&&o<=u||u<=o&&o<=i)}var yu=function(){},vu=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]],bu=function(){var t=1,n=1,e=E,r=a;function i(t){var n=e(t);if(Array.isArray(n))n=n.slice().sort(su);else{var r=y(t),i=r[0],u=r[1];n=N(i,u,n),n=w(Math.floor(i/n)*n,Math.floor(u/n)*n,n)}return n.map(function(n){return o(t,n)})}function o(e,i){var o=[],a=[];return function(e,r,i){var o,a,c,f,s,l,h=new Array,d=new Array;o=a=-1,f=e[0]>=r,vu[f<<1].forEach(p);for(;++o<t-1;)c=f,f=e[o+1]>=r,vu[c|f<<1].forEach(p);vu[f<<0].forEach(p);for(;++a<n-1;){for(o=-1,f=e[a*t+t]>=r,s=e[a*t]>=r,vu[f<<1|s<<2].forEach(p);++o<t-1;)c=f,f=e[a*t+t+o+1]>=r,l=s,s=e[a*t+o+1]>=r,vu[c|f<<1|s<<2|l<<3].forEach(p);vu[f|s<<3].forEach(p)}o=-1,s=e[a*t]>=r,vu[s<<2].forEach(p);for(;++o<t-1;)l=s,s=e[a*t+o+1]>=r,vu[s<<2|l<<3].forEach(p);function p(t){var n,e,r=[t[0][0]+o,t[0][1]+a],c=[t[1][0]+o,t[1][1]+a],f=u(r),s=u(c);(n=d[f])?(e=h[s])?(delete d[n.end],delete h[e.start],n===e?(n.ring.push(c),i(n.ring)):h[n.start]=d[e.end]={start:n.start,end:e.end,ring:n.ring.concat(e.ring)}):(delete d[n.end],n.ring.push(c),d[n.end=s]=n):(n=h[s])?(e=d[f])?(delete h[n.start],delete d[e.end],n===e?(n.ring.push(c),i(n.ring)):h[e.start]=d[n.end]={start:e.start,end:n.end,ring:e.ring.concat(n.ring)}):(delete h[n.start],n.ring.unshift(r),h[n.start=f]=n):h[f]=d[s]={start:f,end:s,ring:[r,c]}}vu[s<<3].forEach(p)}(e,i,function(t){r(t,e,i),lu(t)>0?o.push([t]):a.push(t)}),a.forEach(function(t){for(var n,e=0,r=o.length;e<r;++e)if(-1!==du((n=o[e])[0],t))return void n.push(t)}),{type:"MultiPolygon",value:i,coordinates:o}}function u(n){return 2*n[0]+n[1]*(t+1)*4}function a(e,r,i){e.forEach(function(e){var o,u=e[0],a=e[1],c=0|u,f=0|a,s=r[f*t+c];u>0&&u<t&&c===u&&(o=r[f*t+c-1],e[0]=u+(i-o)/(s-o)-.5),a>0&&a<n&&f===a&&(o=r[(f-1)*t+c],e[1]=a+(i-o)/(s-o)-.5)})}return i.contour=o,i.size=function(e){if(!arguments.length)return[t,n];var r=Math.ceil(e[0]),o=Math.ceil(e[1]);if(!(r>0&&o>0))throw new Error("invalid size");return t=r,n=o,i},i.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Array.isArray(t)?hu(fu.call(t)):hu(t),i):e},i.smooth=function(t){return arguments.length?(r=t?a:yu,i):r===a},i};function _u(t,n,e){for(var r=t.width,i=t.height,o=1+(e<<1),u=0;u<i;++u)for(var a=0,c=0;a<r+e;++a)a<r&&(c+=t.data[a+u*r]),a>=e&&(a>=o&&(c-=t.data[a-o+u*r]),n.data[a-e+u*r]=c/Math.min(a+1,r-1+o-a,o))}function mu(t,n,e){for(var r=t.width,i=t.height,o=1+(e<<1),u=0;u<r;++u)for(var a=0,c=0;a<i+e;++a)a<i&&(c+=t.data[u+a*r]),a>=e&&(a>=o&&(c-=t.data[u+(a-o)*r]),n.data[u+(a-e)*r]=c/Math.min(a+1,i-1+o-a,o))}function xu(t){return t[0]}function wu(t){return t[1]}var Mu=function(){var t=xu,n=wu,e=960,r=500,i=20,o=2,u=3*i,a=e+2*u>>o,c=r+2*u>>o,f=hu(20);function s(e){var r=new Float32Array(a*c),s=new Float32Array(a*c);e.forEach(function(e,i,f){var s=t(e,i,f)+u>>o,l=n(e,i,f)+u>>o;s>=0&&s<a&&l>=0&&l<c&&++r[s+l*a]}),_u({width:a,height:c,data:r},{width:a,height:c,data:s},i>>o),mu({width:a,height:c,data:s},{width:a,height:c,data:r},i>>o),_u({width:a,height:c,data:r},{width:a,height:c,data:s},i>>o),mu({width:a,height:c,data:s},{width:a,height:c,data:r},i>>o),_u({width:a,height:c,data:r},{width:a,height:c,data:s},i>>o),mu({width:a,height:c,data:s},{width:a,height:c,data:r},i>>o);var h=f(r);if(!Array.isArray(h)){var d=L(r);h=N(0,d,h),(h=w(0,Math.floor(d/h)*h,h)).shift()}return bu().thresholds(h).size([a,c])(r).map(l)}function l(t){return t.value*=Math.pow(2,-2*o),t.coordinates.forEach(h),t}function h(t){t.forEach(d)}function d(t){t.forEach(p)}function p(t){t[0]=t[0]*Math.pow(2,o)-u,t[1]=t[1]*Math.pow(2,o)-u}function g(){return a=e+2*(u=3*i)>>o,c=r+2*u>>o,s}return s.x=function(n){return arguments.length?(t="function"==typeof n?n:hu(+n),s):t},s.y=function(t){return arguments.length?(n="function"==typeof t?t:hu(+t),s):n},s.size=function(t){if(!arguments.length)return[e,r];var n=Math.ceil(t[0]),i=Math.ceil(t[1]);if(!(n>=0||n>=0))throw new Error("invalid size");return e=n,r=i,g()},s.cellSize=function(t){if(!arguments.length)return 1<<o;if(!((t=+t)>=1))throw new Error("invalid cell size");return o=Math.floor(Math.log(t)/Math.LN2),g()},s.thresholds=function(t){return arguments.length?(f="function"==typeof t?t:Array.isArray(t)?hu(fu.call(t)):hu(t),s):f},s.bandwidth=function(t){if(!arguments.length)return Math.sqrt(i*(i+1));if(!((t=+t)>=0))throw new Error("invalid bandwidth");return i=Math.round((Math.sqrt(4*t*t+1)-1)/2),g()},s},Au={},Su={},Tu=34,ku=10,Nu=13;function Eu(t){return new Function("d","return {"+t.map(function(t,n){return JSON.stringify(t)+": d["+n+"]"}).join(",")+"}")}var Cu=function(t){var n=new RegExp('["'+t+"\n\r]"),e=t.charCodeAt(0);function r(t,n){var r,i=[],o=t.length,u=0,a=0,c=o<=0,f=!1;function s(){if(c)return Su;if(f)return f=!1,Au;var n,r,i=u;if(t.charCodeAt(i)===Tu){for(;u++<o&&t.charCodeAt(u)!==Tu||t.charCodeAt(++u)===Tu;);return(n=u)>=o?c=!0:(r=t.charCodeAt(u++))===ku?f=!0:r===Nu&&(f=!0,t.charCodeAt(u)===ku&&++u),t.slice(i+1,n-1).replace(/""/g,'"')}for(;u<o;){if((r=t.charCodeAt(n=u++))===ku)f=!0;else if(r===Nu)f=!0,t.charCodeAt(u)===ku&&++u;else if(r!==e)continue;return t.slice(i,n)}return c=!0,t.slice(i,o)}for(t.charCodeAt(o-1)===ku&&--o,t.charCodeAt(o-1)===Nu&&--o;(r=s())!==Su;){for(var l=[];r!==Au&&r!==Su;)l.push(r),r=s();n&&null==(l=n(l,a++))||i.push(l)}return i}function i(n){return n.map(o).join(t)}function o(t){return null==t?"":n.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}return{parse:function(t,n){var e,i,o=r(t,function(t,r){if(e)return e(t,r-1);i=t,e=n?function(t,n){var e=Eu(t);return function(r,i){return n(e(r),i,t)}}(t,n):Eu(t)});return o.columns=i||[],o},parseRows:r,format:function(n,e){return null==e&&(e=function(t){var n=Object.create(null),e=[];return t.forEach(function(t){for(var r in t)r in n||e.push(n[r]=r)}),e}(n)),[e.map(o).join(t)].concat(n.map(function(n){return e.map(function(t){return o(n[t])}).join(t)})).join("\n")},formatRows:function(t){return t.map(i).join("\n")}}},zu=Cu(","),Pu=zu.parse,Ru=zu.parseRows,Lu=zu.format,Uu=zu.formatRows,Du=Cu("\t"),qu=Du.parse,Bu=Du.parseRows,Ou=Du.format,Yu=Du.formatRows;function Iu(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.blob()}var Fu=function(t,n){return fetch(t,n).then(Iu)};function ju(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.arrayBuffer()}var Hu=function(t,n){return fetch(t,n).then(ju)};function Gu(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.text()}var Xu=function(t,n){return fetch(t,n).then(Gu)};function Vu(t){return function(n,e,r){return 2===arguments.length&&"function"==typeof e&&(r=e,e=void 0),Xu(n,e).then(function(n){return t(n,r)})}}function $u(t,n,e,r){3===arguments.length&&"function"==typeof e&&(r=e,e=void 0);var i=Cu(t);return Xu(n,e).then(function(t){return i.parse(t,r)})}var Wu=Vu(Pu),Zu=Vu(qu),Qu=function(t,n){return new Promise(function(e,r){var i=new Image;for(var o in n)i[o]=n[o];i.onerror=r,i.onload=function(){e(i)},i.src=t})};function Ku(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.json()}var Ju=function(t,n){return fetch(t,n).then(Ku)};function ta(t){return function(n,e){return Xu(n,e).then(function(n){return(new DOMParser).parseFromString(n,t)})}}var na=ta("application/xml"),ea=ta("text/html"),ra=ta("image/svg+xml"),ia=function(t,n){var e;function r(){var r,i,o=e.length,u=0,a=0;for(r=0;r<o;++r)u+=(i=e[r]).x,a+=i.y;for(u=u/o-t,a=a/o-n,r=0;r<o;++r)(i=e[r]).x-=u,i.y-=a}return null==t&&(t=0),null==n&&(n=0),r.initialize=function(t){e=t},r.x=function(n){return arguments.length?(t=+n,r):t},r.y=function(t){return arguments.length?(n=+t,r):n},r},oa=function(t){return function(){return t}},ua=function(){return 1e-6*(Math.random()-.5)};function aa(t,n,e,r){if(isNaN(n)||isNaN(e))return t;var i,o,u,a,c,f,s,l,h,d=t._root,p={data:r},g=t._x0,y=t._y0,v=t._x1,b=t._y1;if(!d)return t._root=p,t;for(;d.length;)if((f=n>=(o=(g+v)/2))?g=o:v=o,(s=e>=(u=(y+b)/2))?y=u:b=u,i=d,!(d=d[l=s<<1|f]))return i[l]=p,t;if(a=+t._x.call(null,d.data),c=+t._y.call(null,d.data),n===a&&e===c)return p.next=d,i?i[l]=p:t._root=p,t;do{i=i?i[l]=new Array(4):t._root=new Array(4),(f=n>=(o=(g+v)/2))?g=o:v=o,(s=e>=(u=(y+b)/2))?y=u:b=u}while((l=s<<1|f)==(h=(c>=u)<<1|a>=o));return i[h]=d,i[l]=p,t}var ca=function(t,n,e,r,i){this.node=t,this.x0=n,this.y0=e,this.x1=r,this.y1=i};function fa(t){return t[0]}function sa(t){return t[1]}function la(t,n,e){var r=new ha(null==n?fa:n,null==e?sa:e,NaN,NaN,NaN,NaN);return null==t?r:r.addAll(t)}function ha(t,n,e,r,i,o){this._x=t,this._y=n,this._x0=e,this._y0=r,this._x1=i,this._y1=o,this._root=void 0}function da(t){for(var n={data:t.data},e=n;t=t.next;)e=e.next={data:t.data};return n}var pa=la.prototype=ha.prototype;function ga(t){return t.x+t.vx}function ya(t){return t.y+t.vy}pa.copy=function(){var t,n,e=new ha(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return e;if(!r.length)return e._root=da(r),e;for(t=[{source:r,target:e._root=new Array(4)}];r=t.pop();)for(var i=0;i<4;++i)(n=r.source[i])&&(n.length?t.push({source:n,target:r.target[i]=new Array(4)}):r.target[i]=da(n));return e},pa.add=function(t){var n=+this._x.call(null,t),e=+this._y.call(null,t);return aa(this.cover(n,e),n,e,t)},pa.addAll=function(t){var n,e,r,i,o=t.length,u=new Array(o),a=new Array(o),c=1/0,f=1/0,s=-1/0,l=-1/0;for(e=0;e<o;++e)isNaN(r=+this._x.call(null,n=t[e]))||isNaN(i=+this._y.call(null,n))||(u[e]=r,a[e]=i,r<c&&(c=r),r>s&&(s=r),i<f&&(f=i),i>l&&(l=i));for(s<c&&(c=this._x0,s=this._x1),l<f&&(f=this._y0,l=this._y1),this.cover(c,f).cover(s,l),e=0;e<o;++e)aa(this,u[e],a[e],t[e]);return this},pa.cover=function(t,n){if(isNaN(t=+t)||isNaN(n=+n))return this;var e=this._x0,r=this._y0,i=this._x1,o=this._y1;if(isNaN(e))i=(e=Math.floor(t))+1,o=(r=Math.floor(n))+1;else{if(!(e>t||t>i||r>n||n>o))return this;var u,a,c=i-e,f=this._root;switch(a=(n<(r+o)/2)<<1|t<(e+i)/2){case 0:do{(u=new Array(4))[a]=f,f=u}while(o=r+(c*=2),t>(i=e+c)||n>o);break;case 1:do{(u=new Array(4))[a]=f,f=u}while(o=r+(c*=2),(e=i-c)>t||n>o);break;case 2:do{(u=new Array(4))[a]=f,f=u}while(r=o-(c*=2),t>(i=e+c)||r>n);break;case 3:do{(u=new Array(4))[a]=f,f=u}while(r=o-(c*=2),(e=i-c)>t||r>n)}this._root&&this._root.length&&(this._root=f)}return this._x0=e,this._y0=r,this._x1=i,this._y1=o,this},pa.data=function(){var t=[];return this.visit(function(n){if(!n.length)do{t.push(n.data)}while(n=n.next)}),t},pa.extent=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},pa.find=function(t,n,e){var r,i,o,u,a,c,f,s=this._x0,l=this._y0,h=this._x1,d=this._y1,p=[],g=this._root;for(g&&p.push(new ca(g,s,l,h,d)),null==e?e=1/0:(s=t-e,l=n-e,h=t+e,d=n+e,e*=e);c=p.pop();)if(!(!(g=c.node)||(i=c.x0)>h||(o=c.y0)>d||(u=c.x1)<s||(a=c.y1)<l))if(g.length){var y=(i+u)/2,v=(o+a)/2;p.push(new ca(g[3],y,v,u,a),new ca(g[2],i,v,y,a),new ca(g[1],y,o,u,v),new ca(g[0],i,o,y,v)),(f=(n>=v)<<1|t>=y)&&(c=p[p.length-1],p[p.length-1]=p[p.length-1-f],p[p.length-1-f]=c)}else{var b=t-+this._x.call(null,g.data),_=n-+this._y.call(null,g.data),m=b*b+_*_;if(m<e){var x=Math.sqrt(e=m);s=t-x,l=n-x,h=t+x,d=n+x,r=g.data}}return r},pa.remove=function(t){if(isNaN(o=+this._x.call(null,t))||isNaN(u=+this._y.call(null,t)))return this;var n,e,r,i,o,u,a,c,f,s,l,h,d=this._root,p=this._x0,g=this._y0,y=this._x1,v=this._y1;if(!d)return this;if(d.length)for(;;){if((f=o>=(a=(p+y)/2))?p=a:y=a,(s=u>=(c=(g+v)/2))?g=c:v=c,n=d,!(d=d[l=s<<1|f]))return this;if(!d.length)break;(n[l+1&3]||n[l+2&3]||n[l+3&3])&&(e=n,h=l)}for(;d.data!==t;)if(r=d,!(d=d.next))return this;return(i=d.next)&&delete d.next,r?(i?r.next=i:delete r.next,this):n?(i?n[l]=i:delete n[l],(d=n[0]||n[1]||n[2]||n[3])&&d===(n[3]||n[2]||n[1]||n[0])&&!d.length&&(e?e[h]=d:this._root=d),this):(this._root=i,this)},pa.removeAll=function(t){for(var n=0,e=t.length;n<e;++n)this.remove(t[n]);return this},pa.root=function(){return this._root},pa.size=function(){var t=0;return this.visit(function(n){if(!n.length)do{++t}while(n=n.next)}),t},pa.visit=function(t){var n,e,r,i,o,u,a=[],c=this._root;for(c&&a.push(new ca(c,this._x0,this._y0,this._x1,this._y1));n=a.pop();)if(!t(c=n.node,r=n.x0,i=n.y0,o=n.x1,u=n.y1)&&c.length){var f=(r+o)/2,s=(i+u)/2;(e=c[3])&&a.push(new ca(e,f,s,o,u)),(e=c[2])&&a.push(new ca(e,r,s,f,u)),(e=c[1])&&a.push(new ca(e,f,i,o,s)),(e=c[0])&&a.push(new ca(e,r,i,f,s))}return this},pa.visitAfter=function(t){var n,e=[],r=[];for(this._root&&e.push(new ca(this._root,this._x0,this._y0,this._x1,this._y1));n=e.pop();){var i=n.node;if(i.length){var o,u=n.x0,a=n.y0,c=n.x1,f=n.y1,s=(u+c)/2,l=(a+f)/2;(o=i[0])&&e.push(new ca(o,u,a,s,l)),(o=i[1])&&e.push(new ca(o,s,a,c,l)),(o=i[2])&&e.push(new ca(o,u,l,s,f)),(o=i[3])&&e.push(new ca(o,s,l,c,f))}r.push(n)}for(;n=r.pop();)t(n.node,n.x0,n.y0,n.x1,n.y1);return this},pa.x=function(t){return arguments.length?(this._x=t,this):this._x},pa.y=function(t){return arguments.length?(this._y=t,this):this._y};var va=function(t){var n,e,r=1,i=1;function o(){for(var t,o,a,c,f,s,l,h=n.length,d=0;d<i;++d)for(o=la(n,ga,ya).visitAfter(u),t=0;t<h;++t)a=n[t],s=e[a.index],l=s*s,c=a.x+a.vx,f=a.y+a.vy,o.visit(p);function p(t,n,e,i,o){var u=t.data,h=t.r,d=s+h;if(!u)return n>c+d||i<c-d||e>f+d||o<f-d;if(u.index>a.index){var p=c-u.x-u.vx,g=f-u.y-u.vy,y=p*p+g*g;y<d*d&&(0===p&&(y+=(p=ua())*p),0===g&&(y+=(g=ua())*g),y=(d-(y=Math.sqrt(y)))/y*r,a.vx+=(p*=y)*(d=(h*=h)/(l+h)),a.vy+=(g*=y)*d,u.vx-=p*(d=1-d),u.vy-=g*d)}}}function u(t){if(t.data)return t.r=e[t.data.index];for(var n=t.r=0;n<4;++n)t[n]&&t[n].r>t.r&&(t.r=t[n].r)}function a(){if(n){var r,i,o=n.length;for(e=new Array(o),r=0;r<o;++r)i=n[r],e[i.index]=+t(i,r,n)}}return"function"!=typeof t&&(t=oa(null==t?1:+t)),o.initialize=function(t){n=t,a()},o.iterations=function(t){return arguments.length?(i=+t,o):i},o.strength=function(t){return arguments.length?(r=+t,o):r},o.radius=function(n){return arguments.length?(t="function"==typeof n?n:oa(+n),a(),o):t},o};function ba(t){return t.index}function _a(t,n){var e=t.get(n);if(!e)throw new Error("missing: "+n);return e}var ma=function(t){var n,e,r,i,o,u=ba,a=function(t){return 1/Math.min(i[t.source.index],i[t.target.index])},c=oa(30),f=1;function s(r){for(var i=0,u=t.length;i<f;++i)for(var a,c,s,l,h,d,p,g=0;g<u;++g)c=(a=t[g]).source,l=(s=a.target).x+s.vx-c.x-c.vx||ua(),h=s.y+s.vy-c.y-c.vy||ua(),l*=d=((d=Math.sqrt(l*l+h*h))-e[g])/d*r*n[g],h*=d,s.vx-=l*(p=o[g]),s.vy-=h*p,c.vx+=l*(p=1-p),c.vy+=h*p}function l(){if(r){var a,c,f=r.length,s=t.length,l=Zo(r,u);for(a=0,i=new Array(f);a<s;++a)(c=t[a]).index=a,"object"!=typeof c.source&&(c.source=_a(l,c.source)),"object"!=typeof c.target&&(c.target=_a(l,c.target)),i[c.source.index]=(i[c.source.index]||0)+1,i[c.target.index]=(i[c.target.index]||0)+1;for(a=0,o=new Array(s);a<s;++a)c=t[a],o[a]=i[c.source.index]/(i[c.source.index]+i[c.target.index]);n=new Array(s),h(),e=new Array(s),d()}}function h(){if(r)for(var e=0,i=t.length;e<i;++e)n[e]=+a(t[e],e,t)}function d(){if(r)for(var n=0,i=t.length;n<i;++n)e[n]=+c(t[n],n,t)}return null==t&&(t=[]),s.initialize=function(t){r=t,l()},s.links=function(n){return arguments.length?(t=n,l(),s):t},s.id=function(t){return arguments.length?(u=t,s):u},s.iterations=function(t){return arguments.length?(f=+t,s):f},s.strength=function(t){return arguments.length?(a="function"==typeof t?t:oa(+t),h(),s):a},s.distance=function(t){return arguments.length?(c="function"==typeof t?t:oa(+t),d(),s):c},s};function xa(t){return t.x}function wa(t){return t.y}var Ma=10,Aa=Math.PI*(3-Math.sqrt(5)),Sa=function(t){var n,e=1,r=.001,i=1-Math.pow(r,1/300),o=0,u=.6,a=Zo(),c=Lr(s),f=ht("tick","end");function s(){l(),f.call("tick",n),e<r&&(c.stop(),f.call("end",n))}function l(){var n,r,c=t.length;for(e+=(o-e)*i,a.each(function(t){t(e)}),n=0;n<c;++n)null==(r=t[n]).fx?r.x+=r.vx*=u:(r.x=r.fx,r.vx=0),null==r.fy?r.y+=r.vy*=u:(r.y=r.fy,r.vy=0)}function h(){for(var n,e=0,r=t.length;e<r;++e){if((n=t[e]).index=e,isNaN(n.x)||isNaN(n.y)){var i=Ma*Math.sqrt(e),o=e*Aa;n.x=i*Math.cos(o),n.y=i*Math.sin(o)}(isNaN(n.vx)||isNaN(n.vy))&&(n.vx=n.vy=0)}}function d(n){return n.initialize&&n.initialize(t),n}return null==t&&(t=[]),h(),n={tick:l,restart:function(){return c.restart(s),n},stop:function(){return c.stop(),n},nodes:function(e){return arguments.length?(t=e,h(),a.each(d),n):t},alpha:function(t){return arguments.length?(e=+t,n):e},alphaMin:function(t){return arguments.length?(r=+t,n):r},alphaDecay:function(t){return arguments.length?(i=+t,n):+i},alphaTarget:function(t){return arguments.length?(o=+t,n):o},velocityDecay:function(t){return arguments.length?(u=1-t,n):1-u},force:function(t,e){return arguments.length>1?(null==e?a.remove(t):a.set(t,d(e)),n):a.get(t)},find:function(n,e,r){var i,o,u,a,c,f=0,s=t.length;for(null==r?r=1/0:r*=r,f=0;f<s;++f)(u=(i=n-(a=t[f]).x)*i+(o=e-a.y)*o)<r&&(c=a,r=u);return c},on:function(t,e){return arguments.length>1?(f.on(t,e),n):f.on(t)}}},Ta=function(){var t,n,e,r,i=oa(-30),o=1,u=1/0,a=.81;function c(r){var i,o=t.length,u=la(t,xa,wa).visitAfter(s);for(e=r,i=0;i<o;++i)n=t[i],u.visit(l)}function f(){if(t){var n,e,o=t.length;for(r=new Array(o),n=0;n<o;++n)e=t[n],r[e.index]=+i(e,n,t)}}function s(t){var n,e,i,o,u,a=0,c=0;if(t.length){for(i=o=u=0;u<4;++u)(n=t[u])&&(e=Math.abs(n.value))&&(a+=n.value,c+=e,i+=e*n.x,o+=e*n.y);t.x=i/c,t.y=o/c}else{(n=t).x=n.data.x,n.y=n.data.y;do{a+=r[n.data.index]}while(n=n.next)}t.value=a}function l(t,i,c,f){if(!t.value)return!0;var s=t.x-n.x,l=t.y-n.y,h=f-i,d=s*s+l*l;if(h*h/a<d)return d<u&&(0===s&&(d+=(s=ua())*s),0===l&&(d+=(l=ua())*l),d<o&&(d=Math.sqrt(o*d)),n.vx+=s*t.value*e/d,n.vy+=l*t.value*e/d),!0;if(!(t.length||d>=u)){(t.data!==n||t.next)&&(0===s&&(d+=(s=ua())*s),0===l&&(d+=(l=ua())*l),d<o&&(d=Math.sqrt(o*d)));do{t.data!==n&&(h=r[t.data.index]*e/d,n.vx+=s*h,n.vy+=l*h)}while(t=t.next)}}return c.initialize=function(n){t=n,f()},c.strength=function(t){return arguments.length?(i="function"==typeof t?t:oa(+t),f(),c):i},c.distanceMin=function(t){return arguments.length?(o=t*t,c):Math.sqrt(o)},c.distanceMax=function(t){return arguments.length?(u=t*t,c):Math.sqrt(u)},c.theta=function(t){return arguments.length?(a=t*t,c):Math.sqrt(a)},c},ka=function(t,n,e){var r,i,o,u=oa(.1);function a(t){for(var u=0,a=r.length;u<a;++u){var c=r[u],f=c.x-n||1e-6,s=c.y-e||1e-6,l=Math.sqrt(f*f+s*s),h=(o[u]-l)*i[u]*t/l;c.vx+=f*h,c.vy+=s*h}}function c(){if(r){var n,e=r.length;for(i=new Array(e),o=new Array(e),n=0;n<e;++n)o[n]=+t(r[n],n,r),i[n]=isNaN(o[n])?0:+u(r[n],n,r)}}return"function"!=typeof t&&(t=oa(+t)),null==n&&(n=0),null==e&&(e=0),a.initialize=function(t){r=t,c()},a.strength=function(t){return arguments.length?(u="function"==typeof t?t:oa(+t),c(),a):u},a.radius=function(n){return arguments.length?(t="function"==typeof n?n:oa(+n),c(),a):t},a.x=function(t){return arguments.length?(n=+t,a):n},a.y=function(t){return arguments.length?(e=+t,a):e},a},Na=function(t){var n,e,r,i=oa(.1);function o(t){for(var i,o=0,u=n.length;o<u;++o)(i=n[o]).vx+=(r[o]-i.x)*e[o]*t}function u(){if(n){var o,u=n.length;for(e=new Array(u),r=new Array(u),o=0;o<u;++o)e[o]=isNaN(r[o]=+t(n[o],o,n))?0:+i(n[o],o,n)}}return"function"!=typeof t&&(t=oa(null==t?0:+t)),o.initialize=function(t){n=t,u()},o.strength=function(t){return arguments.length?(i="function"==typeof t?t:oa(+t),u(),o):i},o.x=function(n){return arguments.length?(t="function"==typeof n?n:oa(+n),u(),o):t},o},Ea=function(t){var n,e,r,i=oa(.1);function o(t){for(var i,o=0,u=n.length;o<u;++o)(i=n[o]).vy+=(r[o]-i.y)*e[o]*t}function u(){if(n){var o,u=n.length;for(e=new Array(u),r=new Array(u),o=0;o<u;++o)e[o]=isNaN(r[o]=+t(n[o],o,n))?0:+i(n[o],o,n)}}return"function"!=typeof t&&(t=oa(null==t?0:+t)),o.initialize=function(t){n=t,u()},o.strength=function(t){return arguments.length?(i="function"==typeof t?t:oa(+t),u(),o):i},o.y=function(n){return arguments.length?(t="function"==typeof n?n:oa(+n),u(),o):t},o},Ca=function(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]},za=function(t){return(t=Ca(Math.abs(t)))?t[1]:NaN},Pa=/^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function Ra(t){return new La(t)}function La(t){if(!(n=Pa.exec(t)))throw new Error("invalid format: "+t);var n;this.fill=n[1]||" ",this.align=n[2]||">",this.sign=n[3]||"-",this.symbol=n[4]||"",this.zero=!!n[5],this.width=n[6]&&+n[6],this.comma=!!n[7],this.precision=n[8]&&+n[8].slice(1),this.trim=!!n[9],this.type=n[10]||""}Ra.prototype=La.prototype,La.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var Ua,Da,qa,Ba,Oa=function(t){t:for(var n,e=t.length,r=1,i=-1;r<e;++r)switch(t[r]){case".":i=n=r;break;case"0":0===i&&(i=r),n=r;break;default:if(i>0){if(!+t[r])break t;i=0}}return i>0?t.slice(0,i)+t.slice(n+1):t},Ya=function(t,n){var e=Ca(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")},Ia={"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return Ya(100*t,n)},r:Ya,s:function(t,n){var e=Ca(t,n);if(!e)return t+"";var r=e[0],i=e[1],o=i-(Ua=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,u=r.length;return o===u?r:o>u?r+new Array(o-u+1).join("0"):o>0?r.slice(0,o)+"."+r.slice(o):"0."+new Array(1-o).join("0")+Ca(t,Math.max(0,n+o-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},Fa=function(t){return t},ja=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"],Ha=function(t){var n,e,r=t.grouping&&t.thousands?(n=t.grouping,e=t.thousands,function(t,r){for(var i=t.length,o=[],u=0,a=n[0],c=0;i>0&&a>0&&(c+a+1>r&&(a=Math.max(1,r-c)),o.push(t.substring(i-=a,i+a)),!((c+=a+1)>r));)a=n[u=(u+1)%n.length];return o.reverse().join(e)}):Fa,i=t.currency,o=t.decimal,u=t.numerals?function(t){return function(n){return n.replace(/[0-9]/g,function(n){return t[+n]})}}(t.numerals):Fa,a=t.percent||"%";function c(t){var n=(t=Ra(t)).fill,e=t.align,c=t.sign,f=t.symbol,s=t.zero,l=t.width,h=t.comma,d=t.precision,p=t.trim,g=t.type;"n"===g?(h=!0,g="g"):Ia[g]||(null==d&&(d=12),p=!0,g="g"),(s||"0"===n&&"="===e)&&(s=!0,n="0",e="=");var y="$"===f?i[0]:"#"===f&&/[boxX]/.test(g)?"0"+g.toLowerCase():"",v="$"===f?i[1]:/[%p]/.test(g)?a:"",b=Ia[g],_=/[defgprs%]/.test(g);function m(t){var i,a,f,m=y,x=v;if("c"===g)x=b(t)+x,t="";else{var w=(t=+t)<0;if(t=b(Math.abs(t),d),p&&(t=Oa(t)),w&&0==+t&&(w=!1),m=(w?"("===c?c:"-":"-"===c||"("===c?"":c)+m,x=("s"===g?ja[8+Ua/3]:"")+x+(w&&"("===c?")":""),_)for(i=-1,a=t.length;++i<a;)if(48>(f=t.charCodeAt(i))||f>57){x=(46===f?o+t.slice(i+1):t.slice(i))+x,t=t.slice(0,i);break}}h&&!s&&(t=r(t,1/0));var M=m.length+t.length+x.length,A=M<l?new Array(l-M+1).join(n):"";switch(h&&s&&(t=r(A+t,A.length?l-x.length:1/0),A=""),e){case"<":t=m+t+x+A;break;case"=":t=m+A+t+x;break;case"^":t=A.slice(0,M=A.length>>1)+m+t+x+A.slice(M);break;default:t=A+m+t+x}return u(t)}return d=null==d?6:/[gprs]/.test(g)?Math.max(1,Math.min(21,d)):Math.max(0,Math.min(20,d)),m.toString=function(){return t+""},m}return{format:c,formatPrefix:function(t,n){var e=c(((t=Ra(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(za(n)/3))),i=Math.pow(10,-r),o=ja[8+r/3];return function(t){return e(i*t)+o}}}};function Ga(t){return Da=Ha(t),qa=Da.format,Ba=Da.formatPrefix,Da}Ga({decimal:".",thousands:",",grouping:[3],currency:["$",""]});var Xa=function(t){return Math.max(0,-za(Math.abs(t)))},Va=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(za(n)/3)))-za(Math.abs(t)))},$a=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,za(n)-za(t))+1},Wa=function(){return new Za};function Za(){this.reset()}Za.prototype={constructor:Za,reset:function(){this.s=this.t=0},add:function(t){Ka(Qa,t,this.t),Ka(this,Qa.s,this.s),this.s?this.t+=Qa.t:this.s=Qa.t},valueOf:function(){return this.s}};var Qa=new Za;function Ka(t,n,e){var r=t.s=n+e,i=r-n,o=r-i;t.t=n-o+(e-i)}var Ja=1e-6,tc=Math.PI,nc=tc/2,ec=tc/4,rc=2*tc,ic=180/tc,oc=tc/180,uc=Math.abs,ac=Math.atan,cc=Math.atan2,fc=Math.cos,sc=Math.ceil,lc=Math.exp,hc=(Math.floor,Math.log),dc=Math.pow,pc=Math.sin,gc=Math.sign||function(t){return t>0?1:t<0?-1:0},yc=Math.sqrt,vc=Math.tan;function bc(t){return t>1?0:t<-1?tc:Math.acos(t)}function _c(t){return t>1?nc:t<-1?-nc:Math.asin(t)}function mc(t){return(t=pc(t/2))*t}function xc(){}function wc(t,n){t&&Ac.hasOwnProperty(t.type)&&Ac[t.type](t,n)}var Mc={Feature:function(t,n){wc(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)wc(e[r].geometry,n)}},Ac={Sphere:function(t,n){n.sphere()},Point:function(t,n){t=t.coordinates,n.point(t[0],t[1],t[2])},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)t=e[r],n.point(t[0],t[1],t[2])},LineString:function(t,n){Sc(t.coordinates,n,0)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)Sc(e[r],n,0)},Polygon:function(t,n){Tc(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)Tc(e[r],n)},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)wc(e[r],n)}};function Sc(t,n,e){var r,i=-1,o=t.length-e;for(n.lineStart();++i<o;)r=t[i],n.point(r[0],r[1],r[2]);n.lineEnd()}function Tc(t,n){var e=-1,r=t.length;for(n.polygonStart();++e<r;)Sc(t[e],n,1);n.polygonEnd()}var kc,Nc,Ec,Cc,zc,Pc=function(t,n){t&&Mc.hasOwnProperty(t.type)?Mc[t.type](t,n):wc(t,n)},Rc=Wa(),Lc=Wa(),Uc={point:xc,lineStart:xc,lineEnd:xc,polygonStart:function(){Rc.reset(),Uc.lineStart=Dc,Uc.lineEnd=qc},polygonEnd:function(){var t=+Rc;Lc.add(t<0?rc+t:t),this.lineStart=this.lineEnd=this.point=xc},sphere:function(){Lc.add(rc)}};function Dc(){Uc.point=Bc}function qc(){Oc(kc,Nc)}function Bc(t,n){Uc.point=Oc,kc=t,Nc=n,Ec=t*=oc,Cc=fc(n=(n*=oc)/2+ec),zc=pc(n)}function Oc(t,n){n=(n*=oc)/2+ec;var e=(t*=oc)-Ec,r=e>=0?1:-1,i=r*e,o=fc(n),u=pc(n),a=zc*u,c=Cc*o+a*fc(i),f=a*r*pc(i);Rc.add(cc(f,c)),Ec=t,Cc=o,zc=u}var Yc=function(t){return Lc.reset(),Pc(t,Uc),2*Lc};function Ic(t){return[cc(t[1],t[0]),_c(t[2])]}function Fc(t){var n=t[0],e=t[1],r=fc(e);return[r*fc(n),r*pc(n),pc(e)]}function jc(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function Hc(t,n){return[t[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]]}function Gc(t,n){t[0]+=n[0],t[1]+=n[1],t[2]+=n[2]}function Xc(t,n){return[t[0]*n,t[1]*n,t[2]*n]}function Vc(t){var n=yc(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=n,t[1]/=n,t[2]/=n}var $c,Wc,Zc,Qc,Kc,Jc,tf,nf,ef,rf,of=Wa(),uf={point:af,lineStart:ff,lineEnd:sf,polygonStart:function(){uf.point=lf,uf.lineStart=hf,uf.lineEnd=df,of.reset(),Uc.polygonStart()},polygonEnd:function(){Uc.polygonEnd(),uf.point=af,uf.lineStart=ff,uf.lineEnd=sf,Rc<0?($c=-(Zc=180),Wc=-(Qc=90)):of>Ja?Qc=90:of<-Ja&&(Wc=-90),rf[0]=$c,rf[1]=Zc}};function af(t,n){ef.push(rf=[$c=t,Zc=t]),n<Wc&&(Wc=n),n>Qc&&(Qc=n)}function cf(t,n){var e=Fc([t*oc,n*oc]);if(nf){var r=Hc(nf,e),i=Hc([r[1],-r[0],0],r);Vc(i),i=Ic(i);var o,u=t-Kc,a=u>0?1:-1,c=i[0]*ic*a,f=uc(u)>180;f^(a*Kc<c&&c<a*t)?(o=i[1]*ic)>Qc&&(Qc=o):f^(a*Kc<(c=(c+360)%360-180)&&c<a*t)?(o=-i[1]*ic)<Wc&&(Wc=o):(n<Wc&&(Wc=n),n>Qc&&(Qc=n)),f?t<Kc?pf($c,t)>pf($c,Zc)&&(Zc=t):pf(t,Zc)>pf($c,Zc)&&($c=t):Zc>=$c?(t<$c&&($c=t),t>Zc&&(Zc=t)):t>Kc?pf($c,t)>pf($c,Zc)&&(Zc=t):pf(t,Zc)>pf($c,Zc)&&($c=t)}else ef.push(rf=[$c=t,Zc=t]);n<Wc&&(Wc=n),n>Qc&&(Qc=n),nf=e,Kc=t}function ff(){uf.point=cf}function sf(){rf[0]=$c,rf[1]=Zc,uf.point=af,nf=null}function lf(t,n){if(nf){var e=t-Kc;of.add(uc(e)>180?e+(e>0?360:-360):e)}else Jc=t,tf=n;Uc.point(t,n),cf(t,n)}function hf(){Uc.lineStart()}function df(){lf(Jc,tf),Uc.lineEnd(),uc(of)>Ja&&($c=-(Zc=180)),rf[0]=$c,rf[1]=Zc,nf=null}function pf(t,n){return(n-=t)<0?n+360:n}function gf(t,n){return t[0]-n[0]}function yf(t,n){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}var vf,bf,_f,mf,xf,wf,Mf,Af,Sf,Tf,kf,Nf,Ef,Cf,zf,Pf,Rf=function(t){var n,e,r,i,o,u,a;if(Qc=Zc=-($c=Wc=1/0),ef=[],Pc(t,uf),e=ef.length){for(ef.sort(gf),n=1,o=[r=ef[0]];n<e;++n)yf(r,(i=ef[n])[0])||yf(r,i[1])?(pf(r[0],i[1])>pf(r[0],r[1])&&(r[1]=i[1]),pf(i[0],r[1])>pf(r[0],r[1])&&(r[0]=i[0])):o.push(r=i);for(u=-1/0,n=0,r=o[e=o.length-1];n<=e;r=i,++n)i=o[n],(a=pf(r[1],i[0]))>u&&(u=a,$c=i[0],Zc=r[1])}return ef=rf=null,$c===1/0||Wc===1/0?[[NaN,NaN],[NaN,NaN]]:[[$c,Wc],[Zc,Qc]]},Lf={sphere:xc,point:Uf,lineStart:qf,lineEnd:Yf,polygonStart:function(){Lf.lineStart=If,Lf.lineEnd=Ff},polygonEnd:function(){Lf.lineStart=qf,Lf.lineEnd=Yf}};function Uf(t,n){t*=oc;var e=fc(n*=oc);Df(e*fc(t),e*pc(t),pc(n))}function Df(t,n,e){_f+=(t-_f)/++vf,mf+=(n-mf)/vf,xf+=(e-xf)/vf}function qf(){Lf.point=Bf}function Bf(t,n){t*=oc;var e=fc(n*=oc);Cf=e*fc(t),zf=e*pc(t),Pf=pc(n),Lf.point=Of,Df(Cf,zf,Pf)}function Of(t,n){t*=oc;var e=fc(n*=oc),r=e*fc(t),i=e*pc(t),o=pc(n),u=cc(yc((u=zf*o-Pf*i)*u+(u=Pf*r-Cf*o)*u+(u=Cf*i-zf*r)*u),Cf*r+zf*i+Pf*o);bf+=u,wf+=u*(Cf+(Cf=r)),Mf+=u*(zf+(zf=i)),Af+=u*(Pf+(Pf=o)),Df(Cf,zf,Pf)}function Yf(){Lf.point=Uf}function If(){Lf.point=jf}function Ff(){Hf(Nf,Ef),Lf.point=Uf}function jf(t,n){Nf=t,Ef=n,t*=oc,n*=oc,Lf.point=Hf;var e=fc(n);Cf=e*fc(t),zf=e*pc(t),Pf=pc(n),Df(Cf,zf,Pf)}function Hf(t,n){t*=oc;var e=fc(n*=oc),r=e*fc(t),i=e*pc(t),o=pc(n),u=zf*o-Pf*i,a=Pf*r-Cf*o,c=Cf*i-zf*r,f=yc(u*u+a*a+c*c),s=_c(f),l=f&&-s/f;Sf+=l*u,Tf+=l*a,kf+=l*c,bf+=s,wf+=s*(Cf+(Cf=r)),Mf+=s*(zf+(zf=i)),Af+=s*(Pf+(Pf=o)),Df(Cf,zf,Pf)}var Gf=function(t){vf=bf=_f=mf=xf=wf=Mf=Af=Sf=Tf=kf=0,Pc(t,Lf);var n=Sf,e=Tf,r=kf,i=n*n+e*e+r*r;return i<1e-12&&(n=wf,e=Mf,r=Af,bf<Ja&&(n=_f,e=mf,r=xf),(i=n*n+e*e+r*r)<1e-12)?[NaN,NaN]:[cc(e,n)*ic,_c(r/yc(i))*ic]},Xf=function(t){return function(){return t}},Vf=function(t,n){function e(e,r){return e=t(e,r),n(e[0],e[1])}return t.invert&&n.invert&&(e.invert=function(e,r){return(e=n.invert(e,r))&&t.invert(e[0],e[1])}),e};function $f(t,n){return[t>tc?t-rc:t<-tc?t+rc:t,n]}function Wf(t,n,e){return(t%=rc)?n||e?Vf(Qf(t),Kf(n,e)):Qf(t):n||e?Kf(n,e):$f}function Zf(t){return function(n,e){return[(n+=t)>tc?n-rc:n<-tc?n+rc:n,e]}}function Qf(t){var n=Zf(t);return n.invert=Zf(-t),n}function Kf(t,n){var e=fc(t),r=pc(t),i=fc(n),o=pc(n);function u(t,n){var u=fc(n),a=fc(t)*u,c=pc(t)*u,f=pc(n),s=f*e+a*r;return[cc(c*i-s*o,a*e-f*r),_c(s*i+c*o)]}return u.invert=function(t,n){var u=fc(n),a=fc(t)*u,c=pc(t)*u,f=pc(n),s=f*i-c*o;return[cc(c*i+f*o,a*e+s*r),_c(s*e-a*r)]},u}$f.invert=$f;var Jf=function(t){function n(n){return(n=t(n[0]*oc,n[1]*oc))[0]*=ic,n[1]*=ic,n}return t=Wf(t[0]*oc,t[1]*oc,t.length>2?t[2]*oc:0),n.invert=function(n){return(n=t.invert(n[0]*oc,n[1]*oc))[0]*=ic,n[1]*=ic,n},n};function ts(t,n,e,r,i,o){if(e){var u=fc(n),a=pc(n),c=r*e;null==i?(i=n+r*rc,o=n-c/2):(i=ns(u,i),o=ns(u,o),(r>0?i<o:i>o)&&(i+=r*rc));for(var f,s=i;r>0?s>o:s<o;s-=c)f=Ic([u,-a*fc(s),-a*pc(s)]),t.point(f[0],f[1])}}function ns(t,n){(n=Fc(n))[0]-=t,Vc(n);var e=bc(-n[1]);return((-n[2]<0?-e:e)+rc-Ja)%rc}var es=function(){var t,n,e=Xf([0,0]),r=Xf(90),i=Xf(6),o={point:function(e,r){t.push(e=n(e,r)),e[0]*=ic,e[1]*=ic}};function u(){var u=e.apply(this,arguments),a=r.apply(this,arguments)*oc,c=i.apply(this,arguments)*oc;return t=[],n=Wf(-u[0]*oc,-u[1]*oc,0).invert,ts(o,a,c,1),u={type:"Polygon",coordinates:[t]},t=n=null,u}return u.center=function(t){return arguments.length?(e="function"==typeof t?t:Xf([+t[0],+t[1]]),u):e},u.radius=function(t){return arguments.length?(r="function"==typeof t?t:Xf(+t),u):r},u.precision=function(t){return arguments.length?(i="function"==typeof t?t:Xf(+t),u):i},u},rs=function(){var t,n=[];return{point:function(n,e){t.push([n,e])},lineStart:function(){n.push(t=[])},lineEnd:xc,rejoin:function(){n.length>1&&n.push(n.pop().concat(n.shift()))},result:function(){var e=n;return n=[],t=null,e}}},is=function(t,n){return uc(t[0]-n[0])<Ja&&uc(t[1]-n[1])<Ja};function os(t,n,e,r){this.x=t,this.z=n,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}var us=function(t,n,e,r,i){var o,u,a=[],c=[];if(t.forEach(function(t){if(!((n=t.length-1)<=0)){var n,e,r=t[0],u=t[n];if(is(r,u)){for(i.lineStart(),o=0;o<n;++o)i.point((r=t[o])[0],r[1]);i.lineEnd()}else a.push(e=new os(r,t,null,!0)),c.push(e.o=new os(r,null,e,!1)),a.push(e=new os(u,t,null,!1)),c.push(e.o=new os(u,null,e,!0))}}),a.length){for(c.sort(n),as(a),as(c),o=0,u=c.length;o<u;++o)c[o].e=e=!e;for(var f,s,l=a[0];;){for(var h=l,d=!0;h.v;)if((h=h.n)===l)return;f=h.z,i.lineStart();do{if(h.v=h.o.v=!0,h.e){if(d)for(o=0,u=f.length;o<u;++o)i.point((s=f[o])[0],s[1]);else r(h.x,h.n.x,1,i);h=h.n}else{if(d)for(f=h.p.z,o=f.length-1;o>=0;--o)i.point((s=f[o])[0],s[1]);else r(h.x,h.p.x,-1,i);h=h.p}f=(h=h.o).z,d=!d}while(!h.v);i.lineEnd()}}};function as(t){if(n=t.length){for(var n,e,r=0,i=t[0];++r<n;)i.n=e=t[r],e.p=i,i=e;i.n=e=t[0],e.p=i}}var cs=Wa(),fs=function(t,n){var e=n[0],r=n[1],i=pc(r),o=[pc(e),-fc(e),0],u=0,a=0;cs.reset(),1===i?r=nc+Ja:-1===i&&(r=-nc-Ja);for(var c=0,f=t.length;c<f;++c)if(l=(s=t[c]).length)for(var s,l,h=s[l-1],d=h[0],p=h[1]/2+ec,g=pc(p),y=fc(p),v=0;v<l;++v,d=_,g=x,y=w,h=b){var b=s[v],_=b[0],m=b[1]/2+ec,x=pc(m),w=fc(m),M=_-d,A=M>=0?1:-1,S=A*M,T=S>tc,k=g*x;if(cs.add(cc(k*A*pc(S),y*w+k*fc(S))),u+=T?M+A*rc:M,T^d>=e^_>=e){var N=Hc(Fc(h),Fc(b));Vc(N);var E=Hc(o,N);Vc(E);var C=(T^M>=0?-1:1)*_c(E[2]);(r>C||r===C&&(N[0]||N[1]))&&(a+=T^M>=0?1:-1)}}return(u<-Ja||u<Ja&&cs<-Ja)^1&a},ss=function(t,n,e,r){return function(i){var o,u,a,c=n(i),f=rs(),s=n(f),l=!1,h={point:d,lineStart:g,lineEnd:y,polygonStart:function(){h.point=v,h.lineStart=b,h.lineEnd=_,u=[],o=[]},polygonEnd:function(){h.point=d,h.lineStart=g,h.lineEnd=y,u=q(u);var t=fs(o,r);u.length?(l||(i.polygonStart(),l=!0),us(u,hs,t,e,i)):t&&(l||(i.polygonStart(),l=!0),i.lineStart(),e(null,null,1,i),i.lineEnd()),l&&(i.polygonEnd(),l=!1),u=o=null},sphere:function(){i.polygonStart(),i.lineStart(),e(null,null,1,i),i.lineEnd(),i.polygonEnd()}};function d(n,e){t(n,e)&&i.point(n,e)}function p(t,n){c.point(t,n)}function g(){h.point=p,c.lineStart()}function y(){h.point=d,c.lineEnd()}function v(t,n){a.push([t,n]),s.point(t,n)}function b(){s.lineStart(),a=[]}function _(){v(a[0][0],a[0][1]),s.lineEnd();var t,n,e,r,c=s.clean(),h=f.result(),d=h.length;if(a.pop(),o.push(a),a=null,d)if(1&c){if((n=(e=h[0]).length-1)>0){for(l||(i.polygonStart(),l=!0),i.lineStart(),t=0;t<n;++t)i.point((r=e[t])[0],r[1]);i.lineEnd()}}else d>1&&2&c&&h.push(h.pop().concat(h.shift())),u.push(h.filter(ls))}return h}};function ls(t){return t.length>1}function hs(t,n){return((t=t.x)[0]<0?t[1]-nc-Ja:nc-t[1])-((n=n.x)[0]<0?n[1]-nc-Ja:nc-n[1])}var ds=ss(function(){return!0},function(t){var n,e=NaN,r=NaN,i=NaN;return{lineStart:function(){t.lineStart(),n=1},point:function(o,u){var a=o>0?tc:-tc,c=uc(o-e);uc(c-tc)<Ja?(t.point(e,r=(r+u)/2>0?nc:-nc),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),t.point(o,r),n=0):i!==a&&c>=tc&&(uc(e-i)<Ja&&(e-=i*Ja),uc(o-a)<Ja&&(o-=a*Ja),r=function(t,n,e,r){var i,o,u=pc(t-e);return uc(u)>Ja?ac((pc(n)*(o=fc(r))*pc(e)-pc(r)*(i=fc(n))*pc(t))/(i*o*u)):(n+r)/2}(e,r,o,u),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),n=0),t.point(e=o,r=u),i=a},lineEnd:function(){t.lineEnd(),e=r=NaN},clean:function(){return 2-n}}},function(t,n,e,r){var i;if(null==t)i=e*nc,r.point(-tc,i),r.point(0,i),r.point(tc,i),r.point(tc,0),r.point(tc,-i),r.point(0,-i),r.point(-tc,-i),r.point(-tc,0),r.point(-tc,i);else if(uc(t[0]-n[0])>Ja){var o=t[0]<n[0]?tc:-tc;i=e*o/2,r.point(-o,i),r.point(0,i),r.point(o,i)}else r.point(n[0],n[1])},[-tc,-nc]);var ps=function(t){var n=fc(t),e=6*oc,r=n>0,i=uc(n)>Ja;function o(t,e){return fc(t)*fc(e)>n}function u(t,e,r){var i=[1,0,0],o=Hc(Fc(t),Fc(e)),u=jc(o,o),a=o[0],c=u-a*a;if(!c)return!r&&t;var f=n*u/c,s=-n*a/c,l=Hc(i,o),h=Xc(i,f);Gc(h,Xc(o,s));var d=l,p=jc(h,d),g=jc(d,d),y=p*p-g*(jc(h,h)-1);if(!(y<0)){var v=yc(y),b=Xc(d,(-p-v)/g);if(Gc(b,h),b=Ic(b),!r)return b;var _,m=t[0],x=e[0],w=t[1],M=e[1];x<m&&(_=m,m=x,x=_);var A=x-m,S=uc(A-tc)<Ja;if(!S&&M<w&&(_=w,w=M,M=_),S||A<Ja?S?w+M>0^b[1]<(uc(b[0]-m)<Ja?w:M):w<=b[1]&&b[1]<=M:A>tc^(m<=b[0]&&b[0]<=x)){var T=Xc(d,(-p+v)/g);return Gc(T,h),[b,Ic(T)]}}}function a(n,e){var i=r?t:tc-t,o=0;return n<-i?o|=1:n>i&&(o|=2),e<-i?o|=4:e>i&&(o|=8),o}return ss(o,function(t){var n,e,c,f,s;return{lineStart:function(){f=c=!1,s=1},point:function(l,h){var d,p=[l,h],g=o(l,h),y=r?g?0:a(l,h):g?a(l+(l<0?tc:-tc),h):0;if(!n&&(f=c=g)&&t.lineStart(),g!==c&&(!(d=u(n,p))||is(n,d)||is(p,d))&&(p[0]+=Ja,p[1]+=Ja,g=o(p[0],p[1])),g!==c)s=0,g?(t.lineStart(),d=u(p,n),t.point(d[0],d[1])):(d=u(n,p),t.point(d[0],d[1]),t.lineEnd()),n=d;else if(i&&n&&r^g){var v;y&e||!(v=u(p,n,!0))||(s=0,r?(t.lineStart(),t.point(v[0][0],v[0][1]),t.point(v[1][0],v[1][1]),t.lineEnd()):(t.point(v[1][0],v[1][1]),t.lineEnd(),t.lineStart(),t.point(v[0][0],v[0][1])))}!g||n&&is(n,p)||t.point(p[0],p[1]),n=p,c=g,e=y},lineEnd:function(){c&&t.lineEnd(),n=null},clean:function(){return s|(f&&c)<<1}}},function(n,r,i,o){ts(o,t,e,i,n,r)},r?[0,-t]:[-tc,t-tc])},gs=function(t,n,e,r,i,o){var u,a=t[0],c=t[1],f=0,s=1,l=n[0]-a,h=n[1]-c;if(u=e-a,l||!(u>0)){if(u/=l,l<0){if(u<f)return;u<s&&(s=u)}else if(l>0){if(u>s)return;u>f&&(f=u)}if(u=i-a,l||!(u<0)){if(u/=l,l<0){if(u>s)return;u>f&&(f=u)}else if(l>0){if(u<f)return;u<s&&(s=u)}if(u=r-c,h||!(u>0)){if(u/=h,h<0){if(u<f)return;u<s&&(s=u)}else if(h>0){if(u>s)return;u>f&&(f=u)}if(u=o-c,h||!(u<0)){if(u/=h,h<0){if(u>s)return;u>f&&(f=u)}else if(h>0){if(u<f)return;u<s&&(s=u)}return f>0&&(t[0]=a+f*l,t[1]=c+f*h),s<1&&(n[0]=a+s*l,n[1]=c+s*h),!0}}}}},ys=1e9,vs=-ys;function bs(t,n,e,r){function i(i,o){return t<=i&&i<=e&&n<=o&&o<=r}function o(i,o,a,f){var s=0,l=0;if(null==i||(s=u(i,a))!==(l=u(o,a))||c(i,o)<0^a>0)do{f.point(0===s||3===s?t:e,s>1?r:n)}while((s=(s+a+4)%4)!==l);else f.point(o[0],o[1])}function u(r,i){return uc(r[0]-t)<Ja?i>0?0:3:uc(r[0]-e)<Ja?i>0?2:1:uc(r[1]-n)<Ja?i>0?1:0:i>0?3:2}function a(t,n){return c(t.x,n.x)}function c(t,n){var e=u(t,1),r=u(n,1);return e!==r?e-r:0===e?n[1]-t[1]:1===e?t[0]-n[0]:2===e?t[1]-n[1]:n[0]-t[0]}return function(u){var c,f,s,l,h,d,p,g,y,v,b,_=u,m=rs(),x={point:w,lineStart:function(){x.point=M,f&&f.push(s=[]);v=!0,y=!1,p=g=NaN},lineEnd:function(){c&&(M(l,h),d&&y&&m.rejoin(),c.push(m.result()));x.point=w,y&&_.lineEnd()},polygonStart:function(){_=m,c=[],f=[],b=!0},polygonEnd:function(){var n=function(){for(var n=0,e=0,i=f.length;e<i;++e)for(var o,u,a=f[e],c=1,s=a.length,l=a[0],h=l[0],d=l[1];c<s;++c)o=h,u=d,l=a[c],h=l[0],d=l[1],u<=r?d>r&&(h-o)*(r-u)>(d-u)*(t-o)&&++n:d<=r&&(h-o)*(r-u)<(d-u)*(t-o)&&--n;return n}(),e=b&&n,i=(c=q(c)).length;(e||i)&&(u.polygonStart(),e&&(u.lineStart(),o(null,null,1,u),u.lineEnd()),i&&us(c,a,n,o,u),u.polygonEnd());_=u,c=f=s=null}};function w(t,n){i(t,n)&&_.point(t,n)}function M(o,u){var a=i(o,u);if(f&&s.push([o,u]),v)l=o,h=u,d=a,v=!1,a&&(_.lineStart(),_.point(o,u));else if(a&&y)_.point(o,u);else{var c=[p=Math.max(vs,Math.min(ys,p)),g=Math.max(vs,Math.min(ys,g))],m=[o=Math.max(vs,Math.min(ys,o)),u=Math.max(vs,Math.min(ys,u))];gs(c,m,t,n,e,r)?(y||(_.lineStart(),_.point(c[0],c[1])),_.point(m[0],m[1]),a||_.lineEnd(),b=!1):a&&(_.lineStart(),_.point(o,u),b=!1)}p=o,g=u,y=a}return x}}var _s,ms,xs,ws=function(){var t,n,e,r=0,i=0,o=960,u=500;return e={stream:function(e){return t&&n===e?t:t=bs(r,i,o,u)(n=e)},extent:function(a){return arguments.length?(r=+a[0][0],i=+a[0][1],o=+a[1][0],u=+a[1][1],t=n=null,e):[[r,i],[o,u]]}}},Ms=Wa(),As={sphere:xc,point:xc,lineStart:function(){As.point=Ts,As.lineEnd=Ss},lineEnd:xc,polygonStart:xc,polygonEnd:xc};function Ss(){As.point=As.lineEnd=xc}function Ts(t,n){_s=t*=oc,ms=pc(n*=oc),xs=fc(n),As.point=ks}function ks(t,n){t*=oc;var e=pc(n*=oc),r=fc(n),i=uc(t-_s),o=fc(i),u=r*pc(i),a=xs*e-ms*r*o,c=ms*e+xs*r*o;Ms.add(cc(yc(u*u+a*a),c)),_s=t,ms=e,xs=r}var Ns=function(t){return Ms.reset(),Pc(t,As),+Ms},Es=[null,null],Cs={type:"LineString",coordinates:Es},zs=function(t,n){return Es[0]=t,Es[1]=n,Ns(Cs)},Ps={Feature:function(t,n){return Ls(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)if(Ls(e[r].geometry,n))return!0;return!1}},Rs={Sphere:function(){return!0},Point:function(t,n){return Us(t.coordinates,n)},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Us(e[r],n))return!0;return!1},LineString:function(t,n){return Ds(t.coordinates,n)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Ds(e[r],n))return!0;return!1},Polygon:function(t,n){return qs(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(qs(e[r],n))return!0;return!1},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)if(Ls(e[r],n))return!0;return!1}};function Ls(t,n){return!(!t||!Rs.hasOwnProperty(t.type))&&Rs[t.type](t,n)}function Us(t,n){return 0===zs(t,n)}function Ds(t,n){var e=zs(t[0],t[1]);return zs(t[0],n)+zs(n,t[1])<=e+Ja}function qs(t,n){return!!fs(t.map(Bs),Os(n))}function Bs(t){return(t=t.map(Os)).pop(),t}function Os(t){return[t[0]*oc,t[1]*oc]}var Ys=function(t,n){return(t&&Ps.hasOwnProperty(t.type)?Ps[t.type]:Ls)(t,n)};function Is(t,n,e){var r=w(t,n-Ja,e).concat(n);return function(t){return r.map(function(n){return[t,n]})}}function Fs(t,n,e){var r=w(t,n-Ja,e).concat(n);return function(t){return r.map(function(n){return[n,t]})}}function js(){var t,n,e,r,i,o,u,a,c,f,s,l,h=10,d=h,p=90,g=360,y=2.5;function v(){return{type:"MultiLineString",coordinates:b()}}function b(){return w(sc(r/p)*p,e,p).map(s).concat(w(sc(a/g)*g,u,g).map(l)).concat(w(sc(n/h)*h,t,h).filter(function(t){return uc(t%p)>Ja}).map(c)).concat(w(sc(o/d)*d,i,d).filter(function(t){return uc(t%g)>Ja}).map(f))}return v.lines=function(){return b().map(function(t){return{type:"LineString",coordinates:t}})},v.outline=function(){return{type:"Polygon",coordinates:[s(r).concat(l(u).slice(1),s(e).reverse().slice(1),l(a).reverse().slice(1))]}},v.extent=function(t){return arguments.length?v.extentMajor(t).extentMinor(t):v.extentMinor()},v.extentMajor=function(t){return arguments.length?(r=+t[0][0],e=+t[1][0],a=+t[0][1],u=+t[1][1],r>e&&(t=r,r=e,e=t),a>u&&(t=a,a=u,u=t),v.precision(y)):[[r,a],[e,u]]},v.extentMinor=function(e){return arguments.length?(n=+e[0][0],t=+e[1][0],o=+e[0][1],i=+e[1][1],n>t&&(e=n,n=t,t=e),o>i&&(e=o,o=i,i=e),v.precision(y)):[[n,o],[t,i]]},v.step=function(t){return arguments.length?v.stepMajor(t).stepMinor(t):v.stepMinor()},v.stepMajor=function(t){return arguments.length?(p=+t[0],g=+t[1],v):[p,g]},v.stepMinor=function(t){return arguments.length?(h=+t[0],d=+t[1],v):[h,d]},v.precision=function(h){return arguments.length?(y=+h,c=Is(o,i,90),f=Fs(n,t,y),s=Is(a,u,90),l=Fs(r,e,y),v):y},v.extentMajor([[-180,-90+Ja],[180,90-Ja]]).extentMinor([[-180,-80-Ja],[180,80+Ja]])}function Hs(){return js()()}var Gs,Xs,Vs,$s,Ws=function(t,n){var e=t[0]*oc,r=t[1]*oc,i=n[0]*oc,o=n[1]*oc,u=fc(r),a=pc(r),c=fc(o),f=pc(o),s=u*fc(e),l=u*pc(e),h=c*fc(i),d=c*pc(i),p=2*_c(yc(mc(o-r)+u*c*mc(i-e))),g=pc(p),y=p?function(t){var n=pc(t*=p)/g,e=pc(p-t)/g,r=e*s+n*h,i=e*l+n*d,o=e*a+n*f;return[cc(i,r)*ic,cc(o,yc(r*r+i*i))*ic]}:function(){return[e*ic,r*ic]};return y.distance=p,y},Zs=function(t){return t},Qs=Wa(),Ks=Wa(),Js={point:xc,lineStart:xc,lineEnd:xc,polygonStart:function(){Js.lineStart=tl,Js.lineEnd=rl},polygonEnd:function(){Js.lineStart=Js.lineEnd=Js.point=xc,Qs.add(uc(Ks)),Ks.reset()},result:function(){var t=Qs/2;return Qs.reset(),t}};function tl(){Js.point=nl}function nl(t,n){Js.point=el,Gs=Vs=t,Xs=$s=n}function el(t,n){Ks.add($s*t-Vs*n),Vs=t,$s=n}function rl(){el(Gs,Xs)}var il=Js,ol=1/0,ul=ol,al=-ol,cl=al;var fl,sl,ll,hl,dl={point:function(t,n){t<ol&&(ol=t);t>al&&(al=t);n<ul&&(ul=n);n>cl&&(cl=n)},lineStart:xc,lineEnd:xc,polygonStart:xc,polygonEnd:xc,result:function(){var t=[[ol,ul],[al,cl]];return al=cl=-(ul=ol=1/0),t}},pl=0,gl=0,yl=0,vl=0,bl=0,_l=0,ml=0,xl=0,wl=0,Ml={point:Al,lineStart:Sl,lineEnd:Nl,polygonStart:function(){Ml.lineStart=El,Ml.lineEnd=Cl},polygonEnd:function(){Ml.point=Al,Ml.lineStart=Sl,Ml.lineEnd=Nl},result:function(){var t=wl?[ml/wl,xl/wl]:_l?[vl/_l,bl/_l]:yl?[pl/yl,gl/yl]:[NaN,NaN];return pl=gl=yl=vl=bl=_l=ml=xl=wl=0,t}};function Al(t,n){pl+=t,gl+=n,++yl}function Sl(){Ml.point=Tl}function Tl(t,n){Ml.point=kl,Al(ll=t,hl=n)}function kl(t,n){var e=t-ll,r=n-hl,i=yc(e*e+r*r);vl+=i*(ll+t)/2,bl+=i*(hl+n)/2,_l+=i,Al(ll=t,hl=n)}function Nl(){Ml.point=Al}function El(){Ml.point=zl}function Cl(){Pl(fl,sl)}function zl(t,n){Ml.point=Pl,Al(fl=ll=t,sl=hl=n)}function Pl(t,n){var e=t-ll,r=n-hl,i=yc(e*e+r*r);vl+=i*(ll+t)/2,bl+=i*(hl+n)/2,_l+=i,ml+=(i=hl*t-ll*n)*(ll+t),xl+=i*(hl+n),wl+=3*i,Al(ll=t,hl=n)}var Rl=Ml;function Ll(t){this._context=t}Ll.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._context.moveTo(t,n),this._point=1;break;case 1:this._context.lineTo(t,n);break;default:this._context.moveTo(t+this._radius,n),this._context.arc(t,n,this._radius,0,rc)}},result:xc};var Ul,Dl,ql,Bl,Ol,Yl=Wa(),Il={point:xc,lineStart:function(){Il.point=Fl},lineEnd:function(){Ul&&jl(Dl,ql),Il.point=xc},polygonStart:function(){Ul=!0},polygonEnd:function(){Ul=null},result:function(){var t=+Yl;return Yl.reset(),t}};function Fl(t,n){Il.point=jl,Dl=Bl=t,ql=Ol=n}function jl(t,n){Bl-=t,Ol-=n,Yl.add(yc(Bl*Bl+Ol*Ol)),Bl=t,Ol=n}var Hl=Il;function Gl(){this._string=[]}function Xl(t){return"m0,"+t+"a"+t+","+t+" 0 1,1 0,"+-2*t+"a"+t+","+t+" 0 1,1 0,"+2*t+"z"}Gl.prototype={_radius:4.5,_circle:Xl(4.5),pointRadius:function(t){return(t=+t)!==this._radius&&(this._radius=t,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._string.push("M",t,",",n),this._point=1;break;case 1:this._string.push("L",t,",",n);break;default:null==this._circle&&(this._circle=Xl(this._radius)),this._string.push("M",t,",",n,this._circle)}},result:function(){if(this._string.length){var t=this._string.join("");return this._string=[],t}return null}};var Vl=function(t,n){var e,r,i=4.5;function o(t){return t&&("function"==typeof i&&r.pointRadius(+i.apply(this,arguments)),Pc(t,e(r))),r.result()}return o.area=function(t){return Pc(t,e(il)),il.result()},o.measure=function(t){return Pc(t,e(Hl)),Hl.result()},o.bounds=function(t){return Pc(t,e(dl)),dl.result()},o.centroid=function(t){return Pc(t,e(Rl)),Rl.result()},o.projection=function(n){return arguments.length?(e=null==n?(t=null,Zs):(t=n).stream,o):t},o.context=function(t){return arguments.length?(r=null==t?(n=null,new Gl):new Ll(n=t),"function"!=typeof i&&r.pointRadius(i),o):n},o.pointRadius=function(t){return arguments.length?(i="function"==typeof t?t:(r.pointRadius(+t),+t),o):i},o.projection(t).context(n)},$l=function(t){return{stream:Wl(t)}};function Wl(t){return function(n){var e=new Zl;for(var r in t)e[r]=t[r];return e.stream=n,e}}function Zl(){}function Ql(t,n,e){var r=t.clipExtent&&t.clipExtent();return t.scale(150).translate([0,0]),null!=r&&t.clipExtent(null),Pc(e,t.stream(dl)),n(dl.result()),null!=r&&t.clipExtent(r),t}function Kl(t,n,e){return Ql(t,function(e){var r=n[1][0]-n[0][0],i=n[1][1]-n[0][1],o=Math.min(r/(e[1][0]-e[0][0]),i/(e[1][1]-e[0][1])),u=+n[0][0]+(r-o*(e[1][0]+e[0][0]))/2,a=+n[0][1]+(i-o*(e[1][1]+e[0][1]))/2;t.scale(150*o).translate([u,a])},e)}function Jl(t,n,e){return Kl(t,[[0,0],n],e)}function th(t,n,e){return Ql(t,function(e){var r=+n,i=r/(e[1][0]-e[0][0]),o=(r-i*(e[1][0]+e[0][0]))/2,u=-i*e[0][1];t.scale(150*i).translate([o,u])},e)}function nh(t,n,e){return Ql(t,function(e){var r=+n,i=r/(e[1][1]-e[0][1]),o=-i*e[0][0],u=(r-i*(e[1][1]+e[0][1]))/2;t.scale(150*i).translate([o,u])},e)}Zl.prototype={constructor:Zl,point:function(t,n){this.stream.point(t,n)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var eh=16,rh=fc(30*oc),ih=function(t,n){return+n?function(t,n){function e(r,i,o,u,a,c,f,s,l,h,d,p,g,y){var v=f-r,b=s-i,_=v*v+b*b;if(_>4*n&&g--){var m=u+h,x=a+d,w=c+p,M=yc(m*m+x*x+w*w),A=_c(w/=M),S=uc(uc(w)-1)<Ja||uc(o-l)<Ja?(o+l)/2:cc(x,m),T=t(S,A),k=T[0],N=T[1],E=k-r,C=N-i,z=b*E-v*C;(z*z/_>n||uc((v*E+b*C)/_-.5)>.3||u*h+a*d+c*p<rh)&&(e(r,i,o,u,a,c,k,N,S,m/=M,x/=M,w,g,y),y.point(k,N),e(k,N,S,m,x,w,f,s,l,h,d,p,g,y))}}return function(n){var r,i,o,u,a,c,f,s,l,h,d,p,g={point:y,lineStart:v,lineEnd:_,polygonStart:function(){n.polygonStart(),g.lineStart=m},polygonEnd:function(){n.polygonEnd(),g.lineStart=v}};function y(e,r){e=t(e,r),n.point(e[0],e[1])}function v(){s=NaN,g.point=b,n.lineStart()}function b(r,i){var o=Fc([r,i]),u=t(r,i);e(s,l,f,h,d,p,s=u[0],l=u[1],f=r,h=o[0],d=o[1],p=o[2],eh,n),n.point(s,l)}function _(){g.point=y,n.lineEnd()}function m(){v(),g.point=x,g.lineEnd=w}function x(t,n){b(r=t,n),i=s,o=l,u=h,a=d,c=p,g.point=b}function w(){e(s,l,f,h,d,p,i,o,r,u,a,c,eh,n),g.lineEnd=_,_()}return g}}(t,n):function(t){return Wl({point:function(n,e){n=t(n,e),this.stream.point(n[0],n[1])}})}(t)};var oh=Wl({point:function(t,n){this.stream.point(t*oc,n*oc)}});function uh(t,n,e,r){var i=fc(r),o=pc(r),u=i*t,a=o*t,c=i/t,f=o/t,s=(o*e-i*n)/t,l=(o*n+i*e)/t;function h(t,r){return[u*t-a*r+n,e-a*t-u*r]}return h.invert=function(t,n){return[c*t-f*n+s,l-f*t-c*n]},h}function ah(t){return ch(function(){return t})()}function ch(t){var n,e,r,i,o,u,a,c,f,s,l=150,h=480,d=250,p=0,g=0,y=0,v=0,b=0,_=0,m=null,x=ds,w=null,M=Zs,A=.5;function S(t){return c(t[0]*oc,t[1]*oc)}function T(t){return(t=c.invert(t[0],t[1]))&&[t[0]*ic,t[1]*ic]}function k(){var t=uh(l,0,0,_).apply(null,n(p,g)),r=(_?uh:function(t,n,e){function r(r,i){return[n+t*r,e-t*i]}return r.invert=function(r,i){return[(r-n)/t,(e-i)/t]},r})(l,h-t[0],d-t[1],_);return e=Wf(y,v,b),a=Vf(n,r),c=Vf(e,a),u=ih(a,A),N()}function N(){return f=s=null,S}return S.stream=function(t){return f&&s===t?f:f=oh(function(t){return Wl({point:function(n,e){var r=t(n,e);return this.stream.point(r[0],r[1])}})}(e)(x(u(M(s=t)))))},S.preclip=function(t){return arguments.length?(x=t,m=void 0,N()):x},S.postclip=function(t){return arguments.length?(M=t,w=r=i=o=null,N()):M},S.clipAngle=function(t){return arguments.length?(x=+t?ps(m=t*oc):(m=null,ds),N()):m*ic},S.clipExtent=function(t){return arguments.length?(M=null==t?(w=r=i=o=null,Zs):bs(w=+t[0][0],r=+t[0][1],i=+t[1][0],o=+t[1][1]),N()):null==w?null:[[w,r],[i,o]]},S.scale=function(t){return arguments.length?(l=+t,k()):l},S.translate=function(t){return arguments.length?(h=+t[0],d=+t[1],k()):[h,d]},S.center=function(t){return arguments.length?(p=t[0]%360*oc,g=t[1]%360*oc,k()):[p*ic,g*ic]},S.rotate=function(t){return arguments.length?(y=t[0]%360*oc,v=t[1]%360*oc,b=t.length>2?t[2]%360*oc:0,k()):[y*ic,v*ic,b*ic]},S.angle=function(t){return arguments.length?(_=t%360*oc,k()):_*ic},S.precision=function(t){return arguments.length?(u=ih(a,A=t*t),N()):yc(A)},S.fitExtent=function(t,n){return Kl(S,t,n)},S.fitSize=function(t,n){return Jl(S,t,n)},S.fitWidth=function(t,n){return th(S,t,n)},S.fitHeight=function(t,n){return nh(S,t,n)},function(){return n=t.apply(this,arguments),S.invert=n.invert&&T,k()}}function fh(t){var n=0,e=tc/3,r=ch(t),i=r(n,e);return i.parallels=function(t){return arguments.length?r(n=t[0]*oc,e=t[1]*oc):[n*ic,e*ic]},i}function sh(t,n){var e=pc(t),r=(e+pc(n))/2;if(uc(r)<Ja)return function(t){var n=fc(t);function e(t,e){return[t*n,pc(e)/n]}return e.invert=function(t,e){return[t/n,_c(e*n)]},e}(t);var i=1+e*(2*r-e),o=yc(i)/r;function u(t,n){var e=yc(i-2*r*pc(n))/r;return[e*pc(t*=r),o-e*fc(t)]}return u.invert=function(t,n){var e=o-n;return[cc(t,uc(e))/r*gc(e),_c((i-(t*t+e*e)*r*r)/(2*r))]},u}var lh=function(){return fh(sh).scale(155.424).center([0,33.6442])},hh=function(){return lh().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])};var dh=function(){var t,n,e,r,i,o,u=hh(),a=lh().rotate([154,0]).center([-2,58.5]).parallels([55,65]),c=lh().rotate([157,0]).center([-3,19.9]).parallels([8,18]),f={point:function(t,n){o=[t,n]}};function s(t){var n=t[0],u=t[1];return o=null,e.point(n,u),o||(r.point(n,u),o)||(i.point(n,u),o)}function l(){return t=n=null,s}return s.invert=function(t){var n=u.scale(),e=u.translate(),r=(t[0]-e[0])/n,i=(t[1]-e[1])/n;return(i>=.12&&i<.234&&r>=-.425&&r<-.214?a:i>=.166&&i<.234&&r>=-.214&&r<-.115?c:u).invert(t)},s.stream=function(e){return t&&n===e?t:(r=[u.stream(n=e),a.stream(e),c.stream(e)],i=r.length,t={point:function(t,n){for(var e=-1;++e<i;)r[e].point(t,n)},sphere:function(){for(var t=-1;++t<i;)r[t].sphere()},lineStart:function(){for(var t=-1;++t<i;)r[t].lineStart()},lineEnd:function(){for(var t=-1;++t<i;)r[t].lineEnd()},polygonStart:function(){for(var t=-1;++t<i;)r[t].polygonStart()},polygonEnd:function(){for(var t=-1;++t<i;)r[t].polygonEnd()}});var r,i},s.precision=function(t){return arguments.length?(u.precision(t),a.precision(t),c.precision(t),l()):u.precision()},s.scale=function(t){return arguments.length?(u.scale(t),a.scale(.35*t),c.scale(t),s.translate(u.translate())):u.scale()},s.translate=function(t){if(!arguments.length)return u.translate();var n=u.scale(),o=+t[0],s=+t[1];return e=u.translate(t).clipExtent([[o-.455*n,s-.238*n],[o+.455*n,s+.238*n]]).stream(f),r=a.translate([o-.307*n,s+.201*n]).clipExtent([[o-.425*n+Ja,s+.12*n+Ja],[o-.214*n-Ja,s+.234*n-Ja]]).stream(f),i=c.translate([o-.205*n,s+.212*n]).clipExtent([[o-.214*n+Ja,s+.166*n+Ja],[o-.115*n-Ja,s+.234*n-Ja]]).stream(f),l()},s.fitExtent=function(t,n){return Kl(s,t,n)},s.fitSize=function(t,n){return Jl(s,t,n)},s.fitWidth=function(t,n){return th(s,t,n)},s.fitHeight=function(t,n){return nh(s,t,n)},s.scale(1070)};function ph(t){return function(n,e){var r=fc(n),i=fc(e),o=t(r*i);return[o*i*pc(n),o*pc(e)]}}function gh(t){return function(n,e){var r=yc(n*n+e*e),i=t(r),o=pc(i),u=fc(i);return[cc(n*o,r*u),_c(r&&e*o/r)]}}var yh=ph(function(t){return yc(2/(1+t))});yh.invert=gh(function(t){return 2*_c(t/2)});var vh=function(){return ah(yh).scale(124.75).clipAngle(179.999)},bh=ph(function(t){return(t=bc(t))&&t/pc(t)});bh.invert=gh(function(t){return t});var _h=function(){return ah(bh).scale(79.4188).clipAngle(179.999)};function mh(t,n){return[t,hc(vc((nc+n)/2))]}mh.invert=function(t,n){return[t,2*ac(lc(n))-nc]};var xh=function(){return wh(mh).scale(961/rc)};function wh(t){var n,e,r,i=ah(t),o=i.center,u=i.scale,a=i.translate,c=i.clipExtent,f=null;function s(){var o=tc*u(),a=i(Jf(i.rotate()).invert([0,0]));return c(null==f?[[a[0]-o,a[1]-o],[a[0]+o,a[1]+o]]:t===mh?[[Math.max(a[0]-o,f),n],[Math.min(a[0]+o,e),r]]:[[f,Math.max(a[1]-o,n)],[e,Math.min(a[1]+o,r)]])}return i.scale=function(t){return arguments.length?(u(t),s()):u()},i.translate=function(t){return arguments.length?(a(t),s()):a()},i.center=function(t){return arguments.length?(o(t),s()):o()},i.clipExtent=function(t){return arguments.length?(null==t?f=n=e=r=null:(f=+t[0][0],n=+t[0][1],e=+t[1][0],r=+t[1][1]),s()):null==f?null:[[f,n],[e,r]]},s()}function Mh(t){return vc((nc+t)/2)}function Ah(t,n){var e=fc(t),r=t===n?pc(t):hc(e/fc(n))/hc(Mh(n)/Mh(t)),i=e*dc(Mh(t),r)/r;if(!r)return mh;function o(t,n){i>0?n<-nc+Ja&&(n=-nc+Ja):n>nc-Ja&&(n=nc-Ja);var e=i/dc(Mh(n),r);return[e*pc(r*t),i-e*fc(r*t)]}return o.invert=function(t,n){var e=i-n,o=gc(r)*yc(t*t+e*e);return[cc(t,uc(e))/r*gc(e),2*ac(dc(i/o,1/r))-nc]},o}var Sh=function(){return fh(Ah).scale(109.5).parallels([30,30])};function Th(t,n){return[t,n]}Th.invert=Th;var kh=function(){return ah(Th).scale(152.63)};function Nh(t,n){var e=fc(t),r=t===n?pc(t):(e-fc(n))/(n-t),i=e/r+t;if(uc(r)<Ja)return Th;function o(t,n){var e=i-n,o=r*t;return[e*pc(o),i-e*fc(o)]}return o.invert=function(t,n){var e=i-n;return[cc(t,uc(e))/r*gc(e),i-gc(r)*yc(t*t+e*e)]},o}var Eh=function(){return fh(Nh).scale(131.154).center([0,13.9389])};function Ch(t,n){var e=fc(n),r=fc(t)*e;return[e*pc(t)/r,pc(n)/r]}Ch.invert=gh(ac);var zh=function(){return ah(Ch).scale(144.049).clipAngle(60)};function Ph(t,n,e,r){return 1===t&&1===n&&0===e&&0===r?Zs:Wl({point:function(i,o){this.stream.point(i*t+e,o*n+r)}})}var Rh=function(){var t,n,e,r,i,o,u=1,a=0,c=0,f=1,s=1,l=Zs,h=null,d=Zs;function p(){return r=i=null,o}return o={stream:function(t){return r&&i===t?r:r=l(d(i=t))},postclip:function(r){return arguments.length?(d=r,h=t=n=e=null,p()):d},clipExtent:function(r){return arguments.length?(d=null==r?(h=t=n=e=null,Zs):bs(h=+r[0][0],t=+r[0][1],n=+r[1][0],e=+r[1][1]),p()):null==h?null:[[h,t],[n,e]]},scale:function(t){return arguments.length?(l=Ph((u=+t)*f,u*s,a,c),p()):u},translate:function(t){return arguments.length?(l=Ph(u*f,u*s,a=+t[0],c=+t[1]),p()):[a,c]},reflectX:function(t){return arguments.length?(l=Ph(u*(f=t?-1:1),u*s,a,c),p()):f<0},reflectY:function(t){return arguments.length?(l=Ph(u*f,u*(s=t?-1:1),a,c),p()):s<0},fitExtent:function(t,n){return Kl(o,t,n)},fitSize:function(t,n){return Jl(o,t,n)},fitWidth:function(t,n){return th(o,t,n)},fitHeight:function(t,n){return nh(o,t,n)}}};function Lh(t,n){var e=n*n,r=e*e;return[t*(.8707-.131979*e+r*(r*(.003971*e-.001529*r)-.013791)),n*(1.007226+e*(.015085+r*(.028874*e-.044475-.005916*r)))]}Lh.invert=function(t,n){var e,r=n,i=25;do{var o=r*r,u=o*o;r-=e=(r*(1.007226+o*(.015085+u*(.028874*o-.044475-.005916*u)))-n)/(1.007226+o*(.045255+u*(.259866*o-.311325-.005916*11*u)))}while(uc(e)>Ja&&--i>0);return[t/(.8707+(o=r*r)*(o*(o*o*o*(.003971-.001529*o)-.013791)-.131979)),r]};var Uh=function(){return ah(Lh).scale(175.295)};function Dh(t,n){return[fc(n)*pc(t),pc(n)]}Dh.invert=gh(_c);var qh=function(){return ah(Dh).scale(249.5).clipAngle(90+Ja)};function Bh(t,n){var e=fc(n),r=1+fc(t)*e;return[e*pc(t)/r,pc(n)/r]}Bh.invert=gh(function(t){return 2*ac(t)});var Oh=function(){return ah(Bh).scale(250).clipAngle(142)};function Yh(t,n){return[hc(vc((nc+n)/2)),-t]}Yh.invert=function(t,n){return[-n,2*ac(lc(t))-nc]};var Ih=function(){var t=wh(Yh),n=t.center,e=t.rotate;return t.center=function(t){return arguments.length?n([-t[1],t[0]]):[(t=n())[1],-t[0]]},t.rotate=function(t){return arguments.length?e([t[0],t[1],t.length>2?t[2]+90:90]):[(t=e())[0],t[1],t[2]-90]},e([0,0,90]).scale(159.155)};function Fh(t,n){return t.parent===n.parent?1:2}function jh(t,n){return t+n.x}function Hh(t,n){return Math.max(t,n.y)}var Gh=function(){var t=Fh,n=1,e=1,r=!1;function i(i){var o,u=0;i.eachAfter(function(n){var e=n.children;e?(n.x=function(t){return t.reduce(jh,0)/t.length}(e),n.y=function(t){return 1+t.reduce(Hh,0)}(e)):(n.x=o?u+=t(n,o):0,n.y=0,o=n)});var a=function(t){for(var n;n=t.children;)t=n[0];return t}(i),c=function(t){for(var n;n=t.children;)t=n[n.length-1];return t}(i),f=a.x-t(a,c)/2,s=c.x+t(c,a)/2;return i.eachAfter(r?function(t){t.x=(t.x-i.x)*n,t.y=(i.y-t.y)*e}:function(t){t.x=(t.x-f)/(s-f)*n,t.y=(1-(i.y?t.y/i.y:1))*e})}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i};function Xh(t){var n=0,e=t.children,r=e&&e.length;if(r)for(;--r>=0;)n+=e[r].value;else n=1;t.value=n}function Vh(t,n){var e,r,i,o,u,a=new Qh(t),c=+t.value&&(a.value=t.value),f=[a];for(null==n&&(n=$h);e=f.pop();)if(c&&(e.value=+e.data.value),(i=n(e.data))&&(u=i.length))for(e.children=new Array(u),o=u-1;o>=0;--o)f.push(r=e.children[o]=new Qh(i[o])),r.parent=e,r.depth=e.depth+1;return a.eachBefore(Zh)}function $h(t){return t.children}function Wh(t){t.data=t.data.data}function Zh(t){var n=0;do{t.height=n}while((t=t.parent)&&t.height<++n)}function Qh(t){this.data=t,this.depth=this.height=0,this.parent=null}Qh.prototype=Vh.prototype={constructor:Qh,count:function(){return this.eachAfter(Xh)},each:function(t){var n,e,r,i,o=this,u=[o];do{for(n=u.reverse(),u=[];o=n.pop();)if(t(o),e=o.children)for(r=0,i=e.length;r<i;++r)u.push(e[r])}while(u.length);return this},eachAfter:function(t){for(var n,e,r,i=this,o=[i],u=[];i=o.pop();)if(u.push(i),n=i.children)for(e=0,r=n.length;e<r;++e)o.push(n[e]);for(;i=u.pop();)t(i);return this},eachBefore:function(t){for(var n,e,r=this,i=[r];r=i.pop();)if(t(r),n=r.children)for(e=n.length-1;e>=0;--e)i.push(n[e]);return this},sum:function(t){return this.eachAfter(function(n){for(var e=+t(n.data)||0,r=n.children,i=r&&r.length;--i>=0;)e+=r[i].value;n.value=e})},sort:function(t){return this.eachBefore(function(n){n.children&&n.children.sort(t)})},path:function(t){for(var n=this,e=function(t,n){if(t===n)return t;var e=t.ancestors(),r=n.ancestors(),i=null;for(t=e.pop(),n=r.pop();t===n;)i=t,t=e.pop(),n=r.pop();return i}(n,t),r=[n];n!==e;)n=n.parent,r.push(n);for(var i=r.length;t!==e;)r.splice(i,0,t),t=t.parent;return r},ancestors:function(){for(var t=this,n=[t];t=t.parent;)n.push(t);return n},descendants:function(){var t=[];return this.each(function(n){t.push(n)}),t},leaves:function(){var t=[];return this.eachBefore(function(n){n.children||t.push(n)}),t},links:function(){var t=this,n=[];return t.each(function(e){e!==t&&n.push({source:e.parent,target:e})}),n},copy:function(){return Vh(this).eachBefore(Wh)}};var Kh=Array.prototype.slice;var Jh=function(t){for(var n,e,r=0,i=(t=function(t){for(var n,e,r=t.length;r;)e=Math.random()*r--|0,n=t[r],t[r]=t[e],t[e]=n;return t}(Kh.call(t))).length,o=[];r<i;)n=t[r],e&&ed(e,n)?++r:(e=id(o=td(o,n)),r=0);return e};function td(t,n){var e,r;if(rd(n,t))return[n];for(e=0;e<t.length;++e)if(nd(n,t[e])&&rd(od(t[e],n),t))return[t[e],n];for(e=0;e<t.length-1;++e)for(r=e+1;r<t.length;++r)if(nd(od(t[e],t[r]),n)&&nd(od(t[e],n),t[r])&&nd(od(t[r],n),t[e])&&rd(ud(t[e],t[r],n),t))return[t[e],t[r],n];throw new Error}function nd(t,n){var e=t.r-n.r,r=n.x-t.x,i=n.y-t.y;return e<0||e*e<r*r+i*i}function ed(t,n){var e=t.r-n.r+1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function rd(t,n){for(var e=0;e<n.length;++e)if(!ed(t,n[e]))return!1;return!0}function id(t){switch(t.length){case 1:return{x:(n=t[0]).x,y:n.y,r:n.r};case 2:return od(t[0],t[1]);case 3:return ud(t[0],t[1],t[2])}var n}function od(t,n){var e=t.x,r=t.y,i=t.r,o=n.x,u=n.y,a=n.r,c=o-e,f=u-r,s=a-i,l=Math.sqrt(c*c+f*f);return{x:(e+o+c/l*s)/2,y:(r+u+f/l*s)/2,r:(l+i+a)/2}}function ud(t,n,e){var r=t.x,i=t.y,o=t.r,u=n.x,a=n.y,c=n.r,f=e.x,s=e.y,l=e.r,h=r-u,d=r-f,p=i-a,g=i-s,y=c-o,v=l-o,b=r*r+i*i-o*o,_=b-u*u-a*a+c*c,m=b-f*f-s*s+l*l,x=d*p-h*g,w=(p*m-g*_)/(2*x)-r,M=(g*y-p*v)/x,A=(d*_-h*m)/(2*x)-i,S=(h*v-d*y)/x,T=M*M+S*S-1,k=2*(o+w*M+A*S),N=w*w+A*A-o*o,E=-(T?(k+Math.sqrt(k*k-4*T*N))/(2*T):N/k);return{x:r+w+M*E,y:i+A+S*E,r:E}}function ad(t,n,e){var r,i,o,u,a=t.x-n.x,c=t.y-n.y,f=a*a+c*c;f?(i=n.r+e.r,i*=i,u=t.r+e.r,i>(u*=u)?(r=(f+u-i)/(2*f),o=Math.sqrt(Math.max(0,u/f-r*r)),e.x=t.x-r*a-o*c,e.y=t.y-r*c+o*a):(r=(f+i-u)/(2*f),o=Math.sqrt(Math.max(0,i/f-r*r)),e.x=n.x+r*a-o*c,e.y=n.y+r*c+o*a)):(e.x=n.x+e.r,e.y=n.y)}function cd(t,n){var e=t.r+n.r-1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function fd(t){var n=t._,e=t.next._,r=n.r+e.r,i=(n.x*e.r+e.x*n.r)/r,o=(n.y*e.r+e.y*n.r)/r;return i*i+o*o}function sd(t){this._=t,this.next=null,this.previous=null}function ld(t){if(!(i=t.length))return 0;var n,e,r,i,o,u,a,c,f,s,l;if((n=t[0]).x=0,n.y=0,!(i>1))return n.r;if(e=t[1],n.x=-e.r,e.x=n.r,e.y=0,!(i>2))return n.r+e.r;ad(e,n,r=t[2]),n=new sd(n),e=new sd(e),r=new sd(r),n.next=r.previous=e,e.next=n.previous=r,r.next=e.previous=n;t:for(a=3;a<i;++a){ad(n._,e._,r=t[a]),r=new sd(r),c=e.next,f=n.previous,s=e._.r,l=n._.r;do{if(s<=l){if(cd(c._,r._)){e=c,n.next=e,e.previous=n,--a;continue t}s+=c._.r,c=c.next}else{if(cd(f._,r._)){(n=f).next=e,e.previous=n,--a;continue t}l+=f._.r,f=f.previous}}while(c!==f.next);for(r.previous=n,r.next=e,n.next=e.previous=e=r,o=fd(n);(r=r.next)!==e;)(u=fd(r))<o&&(n=r,o=u);e=n.next}for(n=[e._],r=e;(r=r.next)!==e;)n.push(r._);for(r=Jh(n),a=0;a<i;++a)(n=t[a]).x-=r.x,n.y-=r.y;return r.r}var hd=function(t){return ld(t),t};function dd(t){if("function"!=typeof t)throw new Error;return t}function pd(){return 0}var gd=function(t){return function(){return t}};function yd(t){return Math.sqrt(t.value)}var vd=function(){var t=null,n=1,e=1,r=pd;function i(i){return i.x=n/2,i.y=e/2,t?i.eachBefore(bd(t)).eachAfter(_d(r,.5)).eachBefore(md(1)):i.eachBefore(bd(yd)).eachAfter(_d(pd,1)).eachAfter(_d(r,i.r/Math.min(n,e))).eachBefore(md(Math.min(n,e)/(2*i.r))),i}return i.radius=function(n){return arguments.length?(t=null==(e=n)?null:dd(e),i):t;var e},i.size=function(t){return arguments.length?(n=+t[0],e=+t[1],i):[n,e]},i.padding=function(t){return arguments.length?(r="function"==typeof t?t:gd(+t),i):r},i};function bd(t){return function(n){n.children||(n.r=Math.max(0,+t(n)||0))}}function _d(t,n){return function(e){if(r=e.children){var r,i,o,u=r.length,a=t(e)*n||0;if(a)for(i=0;i<u;++i)r[i].r+=a;if(o=ld(r),a)for(i=0;i<u;++i)r[i].r-=a;e.r=o+a}}}function md(t){return function(n){var e=n.parent;n.r*=t,e&&(n.x=e.x+t*n.x,n.y=e.y+t*n.y)}}var xd=function(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)},wd=function(t,n,e,r,i){for(var o,u=t.children,a=-1,c=u.length,f=t.value&&(r-n)/t.value;++a<c;)(o=u[a]).y0=e,o.y1=i,o.x0=n,o.x1=n+=o.value*f},Md=function(){var t=1,n=1,e=0,r=!1;function i(i){var o=i.height+1;return i.x0=i.y0=e,i.x1=t,i.y1=n/o,i.eachBefore(function(t,n){return function(r){r.children&&wd(r,r.x0,t*(r.depth+1)/n,r.x1,t*(r.depth+2)/n);var i=r.x0,o=r.y0,u=r.x1-e,a=r.y1-e;u<i&&(i=u=(i+u)/2),a<o&&(o=a=(o+a)/2),r.x0=i,r.y0=o,r.x1=u,r.y1=a}}(n,o)),r&&i.eachBefore(xd),i}return i.round=function(t){return arguments.length?(r=!!t,i):r},i.size=function(e){return arguments.length?(t=+e[0],n=+e[1],i):[t,n]},i.padding=function(t){return arguments.length?(e=+t,i):e},i},Ad="$",Sd={depth:-1},Td={};function kd(t){return t.id}function Nd(t){return t.parentId}var Ed=function(){var t=kd,n=Nd;function e(e){var r,i,o,u,a,c,f,s=e.length,l=new Array(s),h={};for(i=0;i<s;++i)r=e[i],a=l[i]=new Qh(r),null!=(c=t(r,i,e))&&(c+="")&&(h[f=Ad+(a.id=c)]=f in h?Td:a);for(i=0;i<s;++i)if(a=l[i],null!=(c=n(e[i],i,e))&&(c+="")){if(!(u=h[Ad+c]))throw new Error("missing: "+c);if(u===Td)throw new Error("ambiguous: "+c);u.children?u.children.push(a):u.children=[a],a.parent=u}else{if(o)throw new Error("multiple roots");o=a}if(!o)throw new Error("no root");if(o.parent=Sd,o.eachBefore(function(t){t.depth=t.parent.depth+1,--s}).eachBefore(Zh),o.parent=null,s>0)throw new Error("cycle");return o}return e.id=function(n){return arguments.length?(t=dd(n),e):t},e.parentId=function(t){return arguments.length?(n=dd(t),e):n},e};function Cd(t,n){return t.parent===n.parent?1:2}function zd(t){var n=t.children;return n?n[0]:t.t}function Pd(t){var n=t.children;return n?n[n.length-1]:t.t}function Rd(t,n,e){var r=e/(n.i-t.i);n.c-=r,n.s+=e,t.c+=r,n.z+=e,n.m+=e}function Ld(t,n,e){return t.a.parent===n.parent?t.a:e}function Ud(t,n){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=n}Ud.prototype=Object.create(Qh.prototype);var Dd=function(){var t=Cd,n=1,e=1,r=null;function i(i){var c=function(t){for(var n,e,r,i,o,u=new Ud(t,0),a=[u];n=a.pop();)if(r=n._.children)for(n.children=new Array(o=r.length),i=o-1;i>=0;--i)a.push(e=n.children[i]=new Ud(r[i],i)),e.parent=n;return(u.parent=new Ud(null,0)).children=[u],u}(i);if(c.eachAfter(o),c.parent.m=-c.z,c.eachBefore(u),r)i.eachBefore(a);else{var f=i,s=i,l=i;i.eachBefore(function(t){t.x<f.x&&(f=t),t.x>s.x&&(s=t),t.depth>l.depth&&(l=t)});var h=f===s?1:t(f,s)/2,d=h-f.x,p=n/(s.x+h+d),g=e/(l.depth||1);i.eachBefore(function(t){t.x=(t.x+d)*p,t.y=t.depth*g})}return i}function o(n){var e=n.children,r=n.parent.children,i=n.i?r[n.i-1]:null;if(e){!function(t){for(var n,e=0,r=0,i=t.children,o=i.length;--o>=0;)(n=i[o]).z+=e,n.m+=e,e+=n.s+(r+=n.c)}(n);var o=(e[0].z+e[e.length-1].z)/2;i?(n.z=i.z+t(n._,i._),n.m=n.z-o):n.z=o}else i&&(n.z=i.z+t(n._,i._));n.parent.A=function(n,e,r){if(e){for(var i,o=n,u=n,a=e,c=o.parent.children[0],f=o.m,s=u.m,l=a.m,h=c.m;a=Pd(a),o=zd(o),a&&o;)c=zd(c),(u=Pd(u)).a=n,(i=a.z+l-o.z-f+t(a._,o._))>0&&(Rd(Ld(a,n,r),n,i),f+=i,s+=i),l+=a.m,f+=o.m,h+=c.m,s+=u.m;a&&!Pd(u)&&(u.t=a,u.m+=l-s),o&&!zd(c)&&(c.t=o,c.m+=f-h,r=n)}return r}(n,i,n.parent.A||r[0])}function u(t){t._.x=t.z+t.parent.m,t.m+=t.parent.m}function a(t){t.x*=n,t.y=t.depth*e}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i},qd=function(t,n,e,r,i){for(var o,u=t.children,a=-1,c=u.length,f=t.value&&(i-e)/t.value;++a<c;)(o=u[a]).x0=n,o.x1=r,o.y0=e,o.y1=e+=o.value*f},Bd=(1+Math.sqrt(5))/2;function Od(t,n,e,r,i,o){for(var u,a,c,f,s,l,h,d,p,g,y,v=[],b=n.children,_=0,m=0,x=b.length,w=n.value;_<x;){c=i-e,f=o-r;do{s=b[m++].value}while(!s&&m<x);for(l=h=s,y=s*s*(g=Math.max(f/c,c/f)/(w*t)),p=Math.max(h/y,y/l);m<x;++m){if(s+=a=b[m].value,a<l&&(l=a),a>h&&(h=a),y=s*s*g,(d=Math.max(h/y,y/l))>p){s-=a;break}p=d}v.push(u={value:s,dice:c<f,children:b.slice(_,m)}),u.dice?wd(u,e,r,i,w?r+=f*s/w:o):qd(u,e,r,w?e+=c*s/w:i,o),w-=s,_=m}return v}var Yd=function t(n){function e(t,e,r,i,o){Od(n,t,e,r,i,o)}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(Bd),Id=function(){var t=Yd,n=!1,e=1,r=1,i=[0],o=pd,u=pd,a=pd,c=pd,f=pd;function s(t){return t.x0=t.y0=0,t.x1=e,t.y1=r,t.eachBefore(l),i=[0],n&&t.eachBefore(xd),t}function l(n){var e=i[n.depth],r=n.x0+e,s=n.y0+e,l=n.x1-e,h=n.y1-e;l<r&&(r=l=(r+l)/2),h<s&&(s=h=(s+h)/2),n.x0=r,n.y0=s,n.x1=l,n.y1=h,n.children&&(e=i[n.depth+1]=o(n)/2,r+=f(n)-e,s+=u(n)-e,l-=a(n)-e,h-=c(n)-e,l<r&&(r=l=(r+l)/2),h<s&&(s=h=(s+h)/2),t(n,r,s,l,h))}return s.round=function(t){return arguments.length?(n=!!t,s):n},s.size=function(t){return arguments.length?(e=+t[0],r=+t[1],s):[e,r]},s.tile=function(n){return arguments.length?(t=dd(n),s):t},s.padding=function(t){return arguments.length?s.paddingInner(t).paddingOuter(t):s.paddingInner()},s.paddingInner=function(t){return arguments.length?(o="function"==typeof t?t:gd(+t),s):o},s.paddingOuter=function(t){return arguments.length?s.paddingTop(t).paddingRight(t).paddingBottom(t).paddingLeft(t):s.paddingTop()},s.paddingTop=function(t){return arguments.length?(u="function"==typeof t?t:gd(+t),s):u},s.paddingRight=function(t){return arguments.length?(a="function"==typeof t?t:gd(+t),s):a},s.paddingBottom=function(t){return arguments.length?(c="function"==typeof t?t:gd(+t),s):c},s.paddingLeft=function(t){return arguments.length?(f="function"==typeof t?t:gd(+t),s):f},s},Fd=function(t,n,e,r,i){var o,u,a=t.children,c=a.length,f=new Array(c+1);for(f[0]=u=o=0;o<c;++o)f[o+1]=u+=a[o].value;!function t(n,e,r,i,o,u,c){if(n>=e-1){var s=a[n];return s.x0=i,s.y0=o,s.x1=u,void(s.y1=c)}var l=f[n],h=r/2+l,d=n+1,p=e-1;for(;d<p;){var g=d+p>>>1;f[g]<h?d=g+1:p=g}h-f[d-1]<f[d]-h&&n+1<d&&--d;var y=f[d]-l,v=r-y;if(u-i>c-o){var b=(i*v+u*y)/r;t(n,d,y,i,o,b,c),t(d,e,v,b,o,u,c)}else{var _=(o*v+c*y)/r;t(n,d,y,i,o,u,_),t(d,e,v,i,_,u,c)}}(0,c,t.value,n,e,r,i)},jd=function(t,n,e,r,i){(1&t.depth?qd:wd)(t,n,e,r,i)},Hd=function t(n){function e(t,e,r,i,o){if((u=t._squarify)&&u.ratio===n)for(var u,a,c,f,s,l=-1,h=u.length,d=t.value;++l<h;){for(c=(a=u[l]).children,f=a.value=0,s=c.length;f<s;++f)a.value+=c[f].value;a.dice?wd(a,e,r,i,r+=(o-r)*a.value/d):qd(a,e,r,e+=(i-e)*a.value/d,o),d-=a.value}else t._squarify=u=Od(n,t,e,r,i,o),u.ratio=n}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(Bd),Gd=function(t){for(var n,e=-1,r=t.length,i=t[r-1],o=0;++e<r;)n=i,i=t[e],o+=n[1]*i[0]-n[0]*i[1];return o/2},Xd=function(t){for(var n,e,r=-1,i=t.length,o=0,u=0,a=t[i-1],c=0;++r<i;)n=a,a=t[r],c+=e=n[0]*a[1]-a[0]*n[1],o+=(n[0]+a[0])*e,u+=(n[1]+a[1])*e;return[o/(c*=3),u/c]},Vd=function(t,n,e){return(n[0]-t[0])*(e[1]-t[1])-(n[1]-t[1])*(e[0]-t[0])};function $d(t,n){return t[0]-n[0]||t[1]-n[1]}function Wd(t){for(var n=t.length,e=[0,1],r=2,i=2;i<n;++i){for(;r>1&&Vd(t[e[r-2]],t[e[r-1]],t[i])<=0;)--r;e[r++]=i}return e.slice(0,r)}var Zd=function(t){if((e=t.length)<3)return null;var n,e,r=new Array(e),i=new Array(e);for(n=0;n<e;++n)r[n]=[+t[n][0],+t[n][1],n];for(r.sort($d),n=0;n<e;++n)i[n]=[r[n][0],-r[n][1]];var o=Wd(r),u=Wd(i),a=u[0]===o[0],c=u[u.length-1]===o[o.length-1],f=[];for(n=o.length-1;n>=0;--n)f.push(t[r[o[n]][2]]);for(n=+a;n<u.length-c;++n)f.push(t[r[u[n]][2]]);return f},Qd=function(t,n){for(var e,r,i=t.length,o=t[i-1],u=n[0],a=n[1],c=o[0],f=o[1],s=!1,l=0;l<i;++l)e=(o=t[l])[0],(r=o[1])>a!=f>a&&u<(c-e)*(a-r)/(f-r)+e&&(s=!s),c=e,f=r;return s},Kd=function(t){for(var n,e,r=-1,i=t.length,o=t[i-1],u=o[0],a=o[1],c=0;++r<i;)n=u,e=a,n-=u=(o=t[r])[0],e-=a=o[1],c+=Math.sqrt(n*n+e*e);return c},Jd=function(){return Math.random()},tp=function t(n){function e(t,e){return t=null==t?0:+t,e=null==e?1:+e,1===arguments.length?(e=t,t=0):e-=t,function(){return n()*e+t}}return e.source=t,e}(Jd),np=function t(n){function e(t,e){var r,i;return t=null==t?0:+t,e=null==e?1:+e,function(){var o;if(null!=r)o=r,r=null;else do{r=2*n()-1,o=2*n()-1,i=r*r+o*o}while(!i||i>1);return t+e*o*Math.sqrt(-2*Math.log(i)/i)}}return e.source=t,e}(Jd),ep=function t(n){function e(){var t=np.source(n).apply(this,arguments);return function(){return Math.exp(t())}}return e.source=t,e}(Jd),rp=function t(n){function e(t){return function(){for(var e=0,r=0;r<t;++r)e+=n();return e}}return e.source=t,e}(Jd),ip=function t(n){function e(t){var e=rp.source(n)(t);return function(){return e()/t}}return e.source=t,e}(Jd),op=function t(n){function e(t){return function(){return-Math.log(1-n())/t}}return e.source=t,e}(Jd),up=Array.prototype,ap=up.map,cp=up.slice,fp={name:"implicit"};function sp(t){var n=Zo(),e=[],r=fp;function i(i){var o=i+"",u=n.get(o);if(!u){if(r!==fp)return r;n.set(o,u=e.push(i))}return t[(u-1)%t.length]}return t=null==t?[]:cp.call(t),i.domain=function(t){if(!arguments.length)return e.slice();e=[],n=Zo();for(var r,o,u=-1,a=t.length;++u<a;)n.has(o=(r=t[u])+"")||n.set(o,e.push(r));return i},i.range=function(n){return arguments.length?(t=cp.call(n),i):t.slice()},i.unknown=function(t){return arguments.length?(r=t,i):r},i.copy=function(){return sp().domain(e).range(t).unknown(r)},i}function lp(){var t,n,e=sp().unknown(void 0),r=e.domain,i=e.range,o=[0,1],u=!1,a=0,c=0,f=.5;function s(){var e=r().length,s=o[1]<o[0],l=o[s-0],h=o[1-s];t=(h-l)/Math.max(1,e-a+2*c),u&&(t=Math.floor(t)),l+=(h-l-t*(e-a))*f,n=t*(1-a),u&&(l=Math.round(l),n=Math.round(n));var d=w(e).map(function(n){return l+t*n});return i(s?d.reverse():d)}return delete e.unknown,e.domain=function(t){return arguments.length?(r(t),s()):r()},e.range=function(t){return arguments.length?(o=[+t[0],+t[1]],s()):o.slice()},e.rangeRound=function(t){return o=[+t[0],+t[1]],u=!0,s()},e.bandwidth=function(){return n},e.step=function(){return t},e.round=function(t){return arguments.length?(u=!!t,s()):u},e.padding=function(t){return arguments.length?(a=c=Math.max(0,Math.min(1,t)),s()):a},e.paddingInner=function(t){return arguments.length?(a=Math.max(0,Math.min(1,t)),s()):a},e.paddingOuter=function(t){return arguments.length?(c=Math.max(0,Math.min(1,t)),s()):c},e.align=function(t){return arguments.length?(f=Math.max(0,Math.min(1,t)),s()):f},e.copy=function(){return lp().domain(r()).range(o).round(u).paddingInner(a).paddingOuter(c).align(f)},s()}function hp(){return function t(n){var e=n.copy;return n.padding=n.paddingOuter,delete n.paddingInner,delete n.paddingOuter,n.copy=function(){return t(e())},n}(lp().paddingInner(1))}var dp=function(t){return function(){return t}},pp=function(t){return+t},gp=[0,1];function yp(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:dp(n)}function vp(t,n,e,r){var i=t[0],o=t[1],u=n[0],a=n[1];return o<i?(i=e(o,i),u=r(a,u)):(i=e(i,o),u=r(u,a)),function(t){return u(i(t))}}function bp(t,n,e,r){var i=Math.min(t.length,n.length)-1,o=new Array(i),u=new Array(i),a=-1;for(t[i]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++a<i;)o[a]=e(t[a],t[a+1]),u[a]=r(n[a],n[a+1]);return function(n){var e=c(t,n,1,i)-1;return u[e](o[e](n))}}function _p(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp())}function mp(t,n){var e,r,i,o=gp,u=gp,a=Qe,c=!1;function f(){return e=Math.min(o.length,u.length)>2?bp:vp,r=i=null,s}function s(n){return(r||(r=e(o,u,c?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=n?0:t>=e?1:r(t)}}}(t):t,a)))(+n)}return s.invert=function(t){return(i||(i=e(u,o,yp,c?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=0?n:t>=1?e:r(t)}}}(n):n)))(+t)},s.domain=function(t){return arguments.length?(o=ap.call(t,pp),f()):o.slice()},s.range=function(t){return arguments.length?(u=cp.call(t),f()):u.slice()},s.rangeRound=function(t){return u=cp.call(t),a=Ke,f()},s.clamp=function(t){return arguments.length?(c=!!t,f()):c},s.interpolate=function(t){return arguments.length?(a=t,f()):a},f()}var xp=function(t,n,e){var r,i=t[0],o=t[t.length-1],u=N(i,o,null==n?10:n);switch((e=Ra(null==e?",f":e)).type){case"s":var a=Math.max(Math.abs(i),Math.abs(o));return null!=e.precision||isNaN(r=Va(u,a))||(e.precision=r),Ba(e,a);case"":case"e":case"g":case"p":case"r":null!=e.precision||isNaN(r=$a(u,Math.max(Math.abs(i),Math.abs(o))))||(e.precision=r-("e"===e.type));break;case"f":case"%":null!=e.precision||isNaN(r=Xa(u))||(e.precision=r-2*("%"===e.type))}return qa(e)};function wp(t){var n=t.domain;return t.ticks=function(t){var e=n();return T(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){return xp(n(),t,e)},t.nice=function(e){null==e&&(e=10);var r,i=n(),o=0,u=i.length-1,a=i[o],c=i[u];return c<a&&(r=a,a=c,c=r,r=o,o=u,u=r),(r=k(a,c,e))>0?r=k(a=Math.floor(a/r)*r,c=Math.ceil(c/r)*r,e):r<0&&(r=k(a=Math.ceil(a*r)/r,c=Math.floor(c*r)/r,e)),r>0?(i[o]=Math.floor(a/r)*r,i[u]=Math.ceil(c/r)*r,n(i)):r<0&&(i[o]=Math.ceil(a*r)/r,i[u]=Math.floor(c*r)/r,n(i)),t},t}function Mp(){var t=mp(yp,Fe);return t.copy=function(){return _p(t,Mp())},wp(t)}function Ap(){var t=[0,1];function n(t){return+t}return n.invert=n,n.domain=n.range=function(e){return arguments.length?(t=ap.call(e,pp),n):t.slice()},n.copy=function(){return Ap().domain(t)},wp(n)}var Sp=function(t,n){var e,r=0,i=(t=t.slice()).length-1,o=t[r],u=t[i];return u<o&&(e=r,r=i,i=e,e=o,o=u,u=e),t[r]=n.floor(o),t[i]=n.ceil(u),t};function Tp(t,n){return(n=Math.log(n/t))?function(e){return Math.log(e/t)/n}:dp(n)}function kp(t,n){return t<0?function(e){return-Math.pow(-n,e)*Math.pow(-t,1-e)}:function(e){return Math.pow(n,e)*Math.pow(t,1-e)}}function Np(t){return isFinite(t)?+("1e"+t):t<0?0:t}function Ep(t){return 10===t?Np:t===Math.E?Math.exp:function(n){return Math.pow(t,n)}}function Cp(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),function(n){return Math.log(n)/t})}function zp(t){return function(n){return-t(-n)}}function Pp(){var t=mp(Tp,kp).domain([1,10]),n=t.domain,e=10,r=Cp(10),i=Ep(10);function o(){return r=Cp(e),i=Ep(e),n()[0]<0&&(r=zp(r),i=zp(i)),t}return t.base=function(t){return arguments.length?(e=+t,o()):e},t.domain=function(t){return arguments.length?(n(t),o()):n()},t.ticks=function(t){var o,u=n(),a=u[0],c=u[u.length-1];(o=c<a)&&(h=a,a=c,c=h);var f,s,l,h=r(a),d=r(c),p=null==t?10:+t,g=[];if(!(e%1)&&d-h<p){if(h=Math.round(h)-1,d=Math.round(d)+1,a>0){for(;h<d;++h)for(s=1,f=i(h);s<e;++s)if(!((l=f*s)<a)){if(l>c)break;g.push(l)}}else for(;h<d;++h)for(s=e-1,f=i(h);s>=1;--s)if(!((l=f*s)<a)){if(l>c)break;g.push(l)}}else g=T(h,d,Math.min(d-h,p)).map(i);return o?g.reverse():g},t.tickFormat=function(n,o){if(null==o&&(o=10===e?".0e":","),"function"!=typeof o&&(o=qa(o)),n===1/0)return o;null==n&&(n=10);var u=Math.max(1,e*n/t.ticks().length);return function(t){var n=t/i(Math.round(r(t)));return n*e<e-.5&&(n*=e),n<=u?o(t):""}},t.nice=function(){return n(Sp(n(),{floor:function(t){return i(Math.floor(r(t)))},ceil:function(t){return i(Math.ceil(r(t)))}}))},t.copy=function(){return _p(t,Pp().base(e))},t}function Rp(t,n){return t<0?-Math.pow(-t,n):Math.pow(t,n)}function Lp(){var t=1,n=mp(function(n,e){return(e=Rp(e,t)-(n=Rp(n,t)))?function(r){return(Rp(r,t)-n)/e}:dp(e)},function(n,e){return e=Rp(e,t)-(n=Rp(n,t)),function(r){return Rp(n+e*r,1/t)}}),e=n.domain;return n.exponent=function(n){return arguments.length?(t=+n,e(e())):t},n.copy=function(){return _p(n,Lp().exponent(t))},wp(n)}function Up(){return Lp().exponent(.5)}function Dp(){var t=[],n=[],e=[];function i(){var r=0,i=Math.max(1,n.length);for(e=new Array(i-1);++r<i;)e[r-1]=z(t,r/i);return o}function o(t){if(!isNaN(t=+t))return n[c(e,t)]}return o.invertExtent=function(r){var i=n.indexOf(r);return i<0?[NaN,NaN]:[i>0?e[i-1]:t[0],i<e.length?e[i]:t[t.length-1]]},o.domain=function(n){if(!arguments.length)return t.slice();t=[];for(var e,o=0,u=n.length;o<u;++o)null==(e=n[o])||isNaN(e=+e)||t.push(e);return t.sort(r),i()},o.range=function(t){return arguments.length?(n=cp.call(t),i()):n.slice()},o.quantiles=function(){return e.slice()},o.copy=function(){return Dp().domain(t).range(n)},o}function qp(){var t=0,n=1,e=1,r=[.5],i=[0,1];function o(t){if(t<=t)return i[c(r,t,0,e)]}function u(){var i=-1;for(r=new Array(e);++i<e;)r[i]=((i+1)*n-(i-e)*t)/(e+1);return o}return o.domain=function(e){return arguments.length?(t=+e[0],n=+e[1],u()):[t,n]},o.range=function(t){return arguments.length?(e=(i=cp.call(t)).length-1,u()):i.slice()},o.invertExtent=function(o){var u=i.indexOf(o);return u<0?[NaN,NaN]:u<1?[t,r[0]]:u>=e?[r[e-1],n]:[r[u-1],r[u]]},o.copy=function(){return qp().domain([t,n]).range(i)},wp(o)}function Bp(){var t=[.5],n=[0,1],e=1;function r(r){if(r<=r)return n[c(t,r,0,e)]}return r.domain=function(i){return arguments.length?(t=cp.call(i),e=Math.min(t.length,n.length-1),r):t.slice()},r.range=function(i){return arguments.length?(n=cp.call(i),e=Math.min(t.length,n.length-1),r):n.slice()},r.invertExtent=function(e){var r=n.indexOf(e);return[t[r-1],t[r]]},r.copy=function(){return Bp().domain(t).range(n)},r}var Op=new Date,Yp=new Date;function Ip(t,n,e,r){function i(n){return t(n=new Date(+n)),n}return i.floor=i,i.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},i.round=function(t){var n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},i.range=function(e,r,o){var u,a=[];if(e=i.ceil(e),o=null==o?1:Math.floor(o),!(e<r&&o>0))return a;do{a.push(u=new Date(+e)),n(e,o),t(e)}while(u<e&&e<r);return a},i.filter=function(e){return Ip(function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)},function(t,r){if(t>=t)if(r<0)for(;++r<=0;)for(;n(t,-1),!e(t););else for(;--r>=0;)for(;n(t,1),!e(t););})},e&&(i.count=function(n,r){return Op.setTime(+n),Yp.setTime(+r),t(Op),t(Yp),Math.floor(e(Op,Yp))},i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?function(n){return r(n)%t==0}:function(n){return i.count(0,n)%t==0}):i:null}),i}var Fp=Ip(function(){},function(t,n){t.setTime(+t+n)},function(t,n){return n-t});Fp.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?Ip(function(n){n.setTime(Math.floor(n/t)*t)},function(n,e){n.setTime(+n+e*t)},function(n,e){return(e-n)/t}):Fp:null};var jp=Fp,Hp=Fp.range,Gp=6e4,Xp=6048e5,Vp=Ip(function(t){t.setTime(1e3*Math.floor(t/1e3))},function(t,n){t.setTime(+t+1e3*n)},function(t,n){return(n-t)/1e3},function(t){return t.getUTCSeconds()}),$p=Vp,Wp=Vp.range,Zp=Ip(function(t){t.setTime(Math.floor(t/Gp)*Gp)},function(t,n){t.setTime(+t+n*Gp)},function(t,n){return(n-t)/Gp},function(t){return t.getMinutes()}),Qp=Zp,Kp=Zp.range,Jp=Ip(function(t){var n=t.getTimezoneOffset()*Gp%36e5;n<0&&(n+=36e5),t.setTime(36e5*Math.floor((+t-n)/36e5)+n)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getHours()}),tg=Jp,ng=Jp.range,eg=Ip(function(t){t.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*Gp)/864e5},function(t){return t.getDate()-1}),rg=eg,ig=eg.range;function og(t){return Ip(function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+7*n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*Gp)/Xp})}var ug=og(0),ag=og(1),cg=og(2),fg=og(3),sg=og(4),lg=og(5),hg=og(6),dg=ug.range,pg=ag.range,gg=cg.range,yg=fg.range,vg=sg.range,bg=lg.range,_g=hg.range,mg=Ip(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,n){t.setMonth(t.getMonth()+n)},function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())},function(t){return t.getMonth()}),xg=mg,wg=mg.range,Mg=Ip(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n)},function(t,n){return n.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()});Mg.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Ip(function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,e){n.setFullYear(n.getFullYear()+e*t)}):null};var Ag=Mg,Sg=Mg.range,Tg=Ip(function(t){t.setUTCSeconds(0,0)},function(t,n){t.setTime(+t+n*Gp)},function(t,n){return(n-t)/Gp},function(t){return t.getUTCMinutes()}),kg=Tg,Ng=Tg.range,Eg=Ip(function(t){t.setUTCMinutes(0,0,0)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getUTCHours()}),Cg=Eg,zg=Eg.range,Pg=Ip(function(t){t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+n)},function(t,n){return(n-t)/864e5},function(t){return t.getUTCDate()-1}),Rg=Pg,Lg=Pg.range;function Ug(t){return Ip(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+7*n)},function(t,n){return(n-t)/Xp})}var Dg=Ug(0),qg=Ug(1),Bg=Ug(2),Og=Ug(3),Yg=Ug(4),Ig=Ug(5),Fg=Ug(6),jg=Dg.range,Hg=qg.range,Gg=Bg.range,Xg=Og.range,Vg=Yg.range,$g=Ig.range,Wg=Fg.range,Zg=Ip(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCMonth(t.getUTCMonth()+n)},function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()}),Qg=Zg,Kg=Zg.range,Jg=Ip(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)},function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()});Jg.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Ip(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)}):null};var ty=Jg,ny=Jg.range;function ey(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function ry(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function iy(t){return{y:t,m:0,d:1,H:0,M:0,S:0,L:0}}function oy(t){var n=t.dateTime,e=t.date,r=t.time,i=t.periods,o=t.days,u=t.shortDays,a=t.months,c=t.shortMonths,f=vy(i),s=by(i),l=vy(o),h=by(o),d=vy(u),p=by(u),g=vy(a),y=by(a),v=vy(c),b=by(c),_={a:function(t){return u[t.getDay()]},A:function(t){return o[t.getDay()]},b:function(t){return c[t.getMonth()]},B:function(t){return a[t.getMonth()]},c:null,d:By,e:By,f:jy,H:Oy,I:Yy,j:Iy,L:Fy,m:Hy,M:Gy,p:function(t){return i[+(t.getHours()>=12)]},Q:_v,s:mv,S:Xy,u:Vy,U:$y,V:Wy,w:Zy,W:Qy,x:null,X:null,y:Ky,Y:Jy,Z:tv,"%":bv},m={a:function(t){return u[t.getUTCDay()]},A:function(t){return o[t.getUTCDay()]},b:function(t){return c[t.getUTCMonth()]},B:function(t){return a[t.getUTCMonth()]},c:null,d:nv,e:nv,f:uv,H:ev,I:rv,j:iv,L:ov,m:av,M:cv,p:function(t){return i[+(t.getUTCHours()>=12)]},Q:_v,s:mv,S:fv,u:sv,U:lv,V:hv,w:dv,W:pv,x:null,X:null,y:gv,Y:yv,Z:vv,"%":bv},x={a:function(t,n,e){var r=d.exec(n.slice(e));return r?(t.w=p[r[0].toLowerCase()],e+r[0].length):-1},A:function(t,n,e){var r=l.exec(n.slice(e));return r?(t.w=h[r[0].toLowerCase()],e+r[0].length):-1},b:function(t,n,e){var r=v.exec(n.slice(e));return r?(t.m=b[r[0].toLowerCase()],e+r[0].length):-1},B:function(t,n,e){var r=g.exec(n.slice(e));return r?(t.m=y[r[0].toLowerCase()],e+r[0].length):-1},c:function(t,e,r){return A(t,n,e,r)},d:Ny,e:Ny,f:Ly,H:Cy,I:Cy,j:Ey,L:Ry,m:ky,M:zy,p:function(t,n,e){var r=f.exec(n.slice(e));return r?(t.p=s[r[0].toLowerCase()],e+r[0].length):-1},Q:Dy,s:qy,S:Py,u:my,U:xy,V:wy,w:_y,W:My,x:function(t,n,r){return A(t,e,n,r)},X:function(t,n,e){return A(t,r,n,e)},y:Sy,Y:Ay,Z:Ty,"%":Uy};function w(t,n){return function(e){var r,i,o,u=[],a=-1,c=0,f=t.length;for(e instanceof Date||(e=new Date(+e));++a<f;)37===t.charCodeAt(a)&&(u.push(t.slice(c,a)),null!=(i=ly[r=t.charAt(++a)])?r=t.charAt(++a):i="e"===r?" ":"0",(o=n[r])&&(r=o(e,i)),u.push(r),c=a+1);return u.push(t.slice(c,a)),u.join("")}}function M(t,n){return function(e){var r,i,o=iy(1900);if(A(o,t,e+="",0)!=e.length)return null;if("Q"in o)return new Date(o.Q);if("p"in o&&(o.H=o.H%12+12*o.p),"V"in o){if(o.V<1||o.V>53)return null;"w"in o||(o.w=1),"Z"in o?(r=(i=(r=ry(iy(o.y))).getUTCDay())>4||0===i?qg.ceil(r):qg(r),r=Rg.offset(r,7*(o.V-1)),o.y=r.getUTCFullYear(),o.m=r.getUTCMonth(),o.d=r.getUTCDate()+(o.w+6)%7):(r=(i=(r=n(iy(o.y))).getDay())>4||0===i?ag.ceil(r):ag(r),r=rg.offset(r,7*(o.V-1)),o.y=r.getFullYear(),o.m=r.getMonth(),o.d=r.getDate()+(o.w+6)%7)}else("W"in o||"U"in o)&&("w"in o||(o.w="u"in o?o.u%7:"W"in o?1:0),i="Z"in o?ry(iy(o.y)).getUTCDay():n(iy(o.y)).getDay(),o.m=0,o.d="W"in o?(o.w+6)%7+7*o.W-(i+5)%7:o.w+7*o.U-(i+6)%7);return"Z"in o?(o.H+=o.Z/100|0,o.M+=o.Z%100,ry(o)):n(o)}}function A(t,n,e,r){for(var i,o,u=0,a=n.length,c=e.length;u<a;){if(r>=c)return-1;if(37===(i=n.charCodeAt(u++))){if(i=n.charAt(u++),!(o=x[i in ly?n.charAt(u++):i])||(r=o(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return _.x=w(e,_),_.X=w(r,_),_.c=w(n,_),m.x=w(e,m),m.X=w(r,m),m.c=w(n,m),{format:function(t){var n=w(t+="",_);return n.toString=function(){return t},n},parse:function(t){var n=M(t+="",ey);return n.toString=function(){return t},n},utcFormat:function(t){var n=w(t+="",m);return n.toString=function(){return t},n},utcParse:function(t){var n=M(t,ry);return n.toString=function(){return t},n}}}var uy,ay,cy,fy,sy,ly={"-":"",_:" ",0:"0"},hy=/^\s*\d+/,dy=/^%/,py=/[\\^$*+?|[\]().{}]/g;function gy(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",o=i.length;return r+(o<e?new Array(e-o+1).join(n)+i:i)}function yy(t){return t.replace(py,"\\$&")}function vy(t){return new RegExp("^(?:"+t.map(yy).join("|")+")","i")}function by(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function _y(t,n,e){var r=hy.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function my(t,n,e){var r=hy.exec(n.slice(e,e+1));return r?(t.u=+r[0],e+r[0].length):-1}function xy(t,n,e){var r=hy.exec(n.slice(e,e+2));return r?(t.U=+r[0],e+r[0].length):-1}function wy(t,n,e){var r=hy.exec(n.slice(e,e+2));return r?(t.V=+r[0],e+r[0].length):-1}function My(t,n,e){var r=hy.exec(n.slice(e,e+2));return r?(t.W=+r[0],e+r[0].length):-1}function Ay(t,n,e){var r=hy.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function Sy(t,n,e){var r=hy.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function Ty(t,n,e){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function ky(t,n,e){var r=hy.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function Ny(t,n,e){var r=hy.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function Ey(t,n,e){var r=hy.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function Cy(t,n,e){var r=hy.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function zy(t,n,e){var r=hy.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function Py(t,n,e){var r=hy.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function Ry(t,n,e){var r=hy.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function Ly(t,n,e){var r=hy.exec(n.slice(e,e+6));return r?(t.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function Uy(t,n,e){var r=dy.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function Dy(t,n,e){var r=hy.exec(n.slice(e));return r?(t.Q=+r[0],e+r[0].length):-1}function qy(t,n,e){var r=hy.exec(n.slice(e));return r?(t.Q=1e3*+r[0],e+r[0].length):-1}function By(t,n){return gy(t.getDate(),n,2)}function Oy(t,n){return gy(t.getHours(),n,2)}function Yy(t,n){return gy(t.getHours()%12||12,n,2)}function Iy(t,n){return gy(1+rg.count(Ag(t),t),n,3)}function Fy(t,n){return gy(t.getMilliseconds(),n,3)}function jy(t,n){return Fy(t,n)+"000"}function Hy(t,n){return gy(t.getMonth()+1,n,2)}function Gy(t,n){return gy(t.getMinutes(),n,2)}function Xy(t,n){return gy(t.getSeconds(),n,2)}function Vy(t){var n=t.getDay();return 0===n?7:n}function $y(t,n){return gy(ug.count(Ag(t),t),n,2)}function Wy(t,n){var e=t.getDay();return t=e>=4||0===e?sg(t):sg.ceil(t),gy(sg.count(Ag(t),t)+(4===Ag(t).getDay()),n,2)}function Zy(t){return t.getDay()}function Qy(t,n){return gy(ag.count(Ag(t),t),n,2)}function Ky(t,n){return gy(t.getFullYear()%100,n,2)}function Jy(t,n){return gy(t.getFullYear()%1e4,n,4)}function tv(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+gy(n/60|0,"0",2)+gy(n%60,"0",2)}function nv(t,n){return gy(t.getUTCDate(),n,2)}function ev(t,n){return gy(t.getUTCHours(),n,2)}function rv(t,n){return gy(t.getUTCHours()%12||12,n,2)}function iv(t,n){return gy(1+Rg.count(ty(t),t),n,3)}function ov(t,n){return gy(t.getUTCMilliseconds(),n,3)}function uv(t,n){return ov(t,n)+"000"}function av(t,n){return gy(t.getUTCMonth()+1,n,2)}function cv(t,n){return gy(t.getUTCMinutes(),n,2)}function fv(t,n){return gy(t.getUTCSeconds(),n,2)}function sv(t){var n=t.getUTCDay();return 0===n?7:n}function lv(t,n){return gy(Dg.count(ty(t),t),n,2)}function hv(t,n){var e=t.getUTCDay();return t=e>=4||0===e?Yg(t):Yg.ceil(t),gy(Yg.count(ty(t),t)+(4===ty(t).getUTCDay()),n,2)}function dv(t){return t.getUTCDay()}function pv(t,n){return gy(qg.count(ty(t),t),n,2)}function gv(t,n){return gy(t.getUTCFullYear()%100,n,2)}function yv(t,n){return gy(t.getUTCFullYear()%1e4,n,4)}function vv(){return"+0000"}function bv(){return"%"}function _v(t){return+t}function mv(t){return Math.floor(+t/1e3)}function xv(t){return uy=oy(t),ay=uy.format,cy=uy.parse,fy=uy.utcFormat,sy=uy.utcParse,uy}xv({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});var wv=Date.prototype.toISOString?function(t){return t.toISOString()}:fy("%Y-%m-%dT%H:%M:%S.%LZ");var Mv=+new Date("2000-01-01T00:00:00.000Z")?function(t){var n=new Date(t);return isNaN(n)?null:n}:sy("%Y-%m-%dT%H:%M:%S.%LZ"),Av=1e3,Sv=60*Av,Tv=60*Sv,kv=24*Tv,Nv=7*kv,Ev=30*kv,Cv=365*kv;function zv(t){return new Date(t)}function Pv(t){return t instanceof Date?+t:+new Date(+t)}function Rv(t,n,e,r,o,u,a,c,f){var s=mp(yp,Fe),l=s.invert,h=s.domain,d=f(".%L"),p=f(":%S"),g=f("%I:%M"),y=f("%I %p"),v=f("%a %d"),b=f("%b %d"),_=f("%B"),m=f("%Y"),x=[[a,1,Av],[a,5,5*Av],[a,15,15*Av],[a,30,30*Av],[u,1,Sv],[u,5,5*Sv],[u,15,15*Sv],[u,30,30*Sv],[o,1,Tv],[o,3,3*Tv],[o,6,6*Tv],[o,12,12*Tv],[r,1,kv],[r,2,2*kv],[e,1,Nv],[n,1,Ev],[n,3,3*Ev],[t,1,Cv]];function w(i){return(a(i)<i?d:u(i)<i?p:o(i)<i?g:r(i)<i?y:n(i)<i?e(i)<i?v:b:t(i)<i?_:m)(i)}function M(n,e,r,o){if(null==n&&(n=10),"number"==typeof n){var u=Math.abs(r-e)/n,a=i(function(t){return t[2]}).right(x,u);a===x.length?(o=N(e/Cv,r/Cv,n),n=t):a?(o=(a=x[u/x[a-1][2]<x[a][2]/u?a-1:a])[1],n=a[0]):(o=Math.max(N(e,r,n),1),n=c)}return null==o?n:n.every(o)}return s.invert=function(t){return new Date(l(t))},s.domain=function(t){return arguments.length?h(ap.call(t,Pv)):h().map(zv)},s.ticks=function(t,n){var e,r=h(),i=r[0],o=r[r.length-1],u=o<i;return u&&(e=i,i=o,o=e),e=(e=M(t,i,o,n))?e.range(i,o+1):[],u?e.reverse():e},s.tickFormat=function(t,n){return null==n?w:f(n)},s.nice=function(t,n){var e=h();return(t=M(t,e[0],e[e.length-1],n))?h(Sp(e,t)):s},s.copy=function(){return _p(s,Rv(t,n,e,r,o,u,a,c,f))},s}var Lv=function(){return Rv(Ag,xg,ug,rg,tg,Qp,$p,jp,ay).domain([new Date(2e3,0,1),new Date(2e3,0,2)])},Uv=function(){return Rv(ty,Qg,Dg,Rg,Cg,kg,$p,jp,fy).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)])};function Dv(t){var n=0,e=1,r=!1;function i(i){var o=(i-n)/(e-n);return t(r?Math.max(0,Math.min(1,o)):o)}return i.domain=function(t){return arguments.length?(n=+t[0],e=+t[1],i):[n,e]},i.clamp=function(t){return arguments.length?(r=!!t,i):r},i.interpolator=function(n){return arguments.length?(t=n,i):t},i.copy=function(){return Dv(t).domain([n,e]).clamp(r)},wp(i)}var qv=function(t){for(var n=t.length/6|0,e=new Array(n),r=0;r<n;)e[r]="#"+t.slice(6*r,6*++r);return e},Bv=qv("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),Ov=qv("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),Yv=qv("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),Iv=qv("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"),Fv=qv("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),jv=qv("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),Hv=qv("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),Gv=qv("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),Xv=qv("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"),Vv=function(t){return Be(t[t.length-1])},$v=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(qv),Wv=Vv($v),Zv=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(qv),Qv=Vv(Zv),Kv=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(qv),Jv=Vv(Kv),tb=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(qv),nb=Vv(tb),eb=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(qv),rb=Vv(eb),ib=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(qv),ob=Vv(ib),ub=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(qv),ab=Vv(ub),cb=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(qv),fb=Vv(cb),sb=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(qv),lb=Vv(sb),hb=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(qv),db=Vv(hb),pb=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(qv),gb=Vv(pb),yb=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(qv),vb=Vv(yb),bb=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(qv),_b=Vv(bb),mb=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(qv),xb=Vv(mb),wb=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(qv),Mb=Vv(wb),Ab=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(qv),Sb=Vv(Ab),Tb=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(qv),kb=Vv(Tb),Nb=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(qv),Eb=Vv(Nb),Cb=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(qv),zb=Vv(Cb),Pb=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(qv),Rb=Vv(Pb),Lb=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(qv),Ub=Vv(Lb),Db=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(qv),qb=Vv(Db),Bb=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(qv),Ob=Vv(Bb),Yb=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(qv),Ib=Vv(Yb),Fb=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(qv),jb=Vv(Fb),Hb=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(qv),Gb=Vv(Hb),Xb=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(qv),Vb=Vv(Xb),$b=vr(Te(300,.5,0),Te(-240,.5,1)),Wb=vr(Te(-100,.75,.35),Te(80,1.5,.8)),Zb=vr(Te(260,.75,.35),Te(80,1.5,.8)),Qb=Te(),Kb=function(t){(t<0||t>1)&&(t-=Math.floor(t));var n=Math.abs(t-.5);return Qb.h=360*t-100,Qb.s=1.5-1.5*n,Qb.l=.8-.9*n,Qb+""},Jb=Xn(),t_=Math.PI/3,n_=2*Math.PI/3,e_=function(t){var n;return t=(.5-t)*Math.PI,Jb.r=255*(n=Math.sin(t))*n,Jb.g=255*(n=Math.sin(t+t_))*n,Jb.b=255*(n=Math.sin(t+n_))*n,Jb+""};function r_(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}}var i_=r_(qv("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),o_=r_(qv("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),u_=r_(qv("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),a_=r_(qv("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921")),c_=function(t){return function(){return t}},f_=Math.abs,s_=Math.atan2,l_=Math.cos,h_=Math.max,d_=Math.min,p_=Math.sin,g_=Math.sqrt,y_=1e-12,v_=Math.PI,b_=v_/2,__=2*v_;function m_(t){return t>=1?b_:t<=-1?-b_:Math.asin(t)}function x_(t){return t.innerRadius}function w_(t){return t.outerRadius}function M_(t){return t.startAngle}function A_(t){return t.endAngle}function S_(t){return t&&t.padAngle}function T_(t,n,e,r,i,o,u){var a=t-e,c=n-r,f=(u?o:-o)/g_(a*a+c*c),s=f*c,l=-f*a,h=t+s,d=n+l,p=e+s,g=r+l,y=(h+p)/2,v=(d+g)/2,b=p-h,_=g-d,m=b*b+_*_,x=i-o,w=h*g-p*d,M=(_<0?-1:1)*g_(h_(0,x*x*m-w*w)),A=(w*_-b*M)/m,S=(-w*b-_*M)/m,T=(w*_+b*M)/m,k=(-w*b+_*M)/m,N=A-y,E=S-v,C=T-y,z=k-v;return N*N+E*E>C*C+z*z&&(A=T,S=k),{cx:A,cy:S,x01:-s,y01:-l,x11:A*(i/x-1),y11:S*(i/x-1)}}var k_=function(){var t=x_,n=w_,e=c_(0),r=null,i=M_,o=A_,u=S_,a=null;function c(){var c,f,s,l=+t.apply(this,arguments),h=+n.apply(this,arguments),d=i.apply(this,arguments)-b_,p=o.apply(this,arguments)-b_,g=f_(p-d),y=p>d;if(a||(a=c=Io()),h<l&&(f=h,h=l,l=f),h>y_)if(g>__-y_)a.moveTo(h*l_(d),h*p_(d)),a.arc(0,0,h,d,p,!y),l>y_&&(a.moveTo(l*l_(p),l*p_(p)),a.arc(0,0,l,p,d,y));else{var v,b,_=d,m=p,x=d,w=p,M=g,A=g,S=u.apply(this,arguments)/2,T=S>y_&&(r?+r.apply(this,arguments):g_(l*l+h*h)),k=d_(f_(h-l)/2,+e.apply(this,arguments)),N=k,E=k;if(T>y_){var C=m_(T/l*p_(S)),z=m_(T/h*p_(S));(M-=2*C)>y_?(x+=C*=y?1:-1,w-=C):(M=0,x=w=(d+p)/2),(A-=2*z)>y_?(_+=z*=y?1:-1,m-=z):(A=0,_=m=(d+p)/2)}var P=h*l_(_),R=h*p_(_),L=l*l_(w),U=l*p_(w);if(k>y_){var D=h*l_(m),q=h*p_(m),B=l*l_(x),O=l*p_(x);if(g<v_){var Y=M>y_?function(t,n,e,r,i,o,u,a){var c=e-t,f=r-n,s=u-i,l=a-o,h=(s*(n-o)-l*(t-i))/(l*c-s*f);return[t+h*c,n+h*f]}(P,R,B,O,D,q,L,U):[L,U],I=P-Y[0],F=R-Y[1],j=D-Y[0],H=q-Y[1],G=1/p_(((s=(I*j+F*H)/(g_(I*I+F*F)*g_(j*j+H*H)))>1?0:s<-1?v_:Math.acos(s))/2),X=g_(Y[0]*Y[0]+Y[1]*Y[1]);N=d_(k,(l-X)/(G-1)),E=d_(k,(h-X)/(G+1))}}A>y_?E>y_?(v=T_(B,O,P,R,h,E,y),b=T_(D,q,L,U,h,E,y),a.moveTo(v.cx+v.x01,v.cy+v.y01),E<k?a.arc(v.cx,v.cy,E,s_(v.y01,v.x01),s_(b.y01,b.x01),!y):(a.arc(v.cx,v.cy,E,s_(v.y01,v.x01),s_(v.y11,v.x11),!y),a.arc(0,0,h,s_(v.cy+v.y11,v.cx+v.x11),s_(b.cy+b.y11,b.cx+b.x11),!y),a.arc(b.cx,b.cy,E,s_(b.y11,b.x11),s_(b.y01,b.x01),!y))):(a.moveTo(P,R),a.arc(0,0,h,_,m,!y)):a.moveTo(P,R),l>y_&&M>y_?N>y_?(v=T_(L,U,D,q,l,-N,y),b=T_(P,R,B,O,l,-N,y),a.lineTo(v.cx+v.x01,v.cy+v.y01),N<k?a.arc(v.cx,v.cy,N,s_(v.y01,v.x01),s_(b.y01,b.x01),!y):(a.arc(v.cx,v.cy,N,s_(v.y01,v.x01),s_(v.y11,v.x11),!y),a.arc(0,0,l,s_(v.cy+v.y11,v.cx+v.x11),s_(b.cy+b.y11,b.cx+b.x11),y),a.arc(b.cx,b.cy,N,s_(b.y11,b.x11),s_(b.y01,b.x01),!y))):a.arc(0,0,l,w,x,y):a.lineTo(L,U)}else a.moveTo(0,0);if(a.closePath(),c)return a=null,c+""||null}return c.centroid=function(){var e=(+t.apply(this,arguments)+ +n.apply(this,arguments))/2,r=(+i.apply(this,arguments)+ +o.apply(this,arguments))/2-v_/2;return[l_(r)*e,p_(r)*e]},c.innerRadius=function(n){return arguments.length?(t="function"==typeof n?n:c_(+n),c):t},c.outerRadius=function(t){return arguments.length?(n="function"==typeof t?t:c_(+t),c):n},c.cornerRadius=function(t){return arguments.length?(e="function"==typeof t?t:c_(+t),c):e},c.padRadius=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:c_(+t),c):r},c.startAngle=function(t){return arguments.length?(i="function"==typeof t?t:c_(+t),c):i},c.endAngle=function(t){return arguments.length?(o="function"==typeof t?t:c_(+t),c):o},c.padAngle=function(t){return arguments.length?(u="function"==typeof t?t:c_(+t),c):u},c.context=function(t){return arguments.length?(a=null==t?null:t,c):a},c};function N_(t){this._context=t}N_.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:this._context.lineTo(t,n)}}};var E_=function(t){return new N_(t)};function C_(t){return t[0]}function z_(t){return t[1]}var P_=function(){var t=C_,n=z_,e=c_(!0),r=null,i=E_,o=null;function u(u){var a,c,f,s=u.length,l=!1;for(null==r&&(o=i(f=Io())),a=0;a<=s;++a)!(a<s&&e(c=u[a],a,u))===l&&((l=!l)?o.lineStart():o.lineEnd()),l&&o.point(+t(c,a,u),+n(c,a,u));if(f)return o=null,f+""||null}return u.x=function(n){return arguments.length?(t="function"==typeof n?n:c_(+n),u):t},u.y=function(t){return arguments.length?(n="function"==typeof t?t:c_(+t),u):n},u.defined=function(t){return arguments.length?(e="function"==typeof t?t:c_(!!t),u):e},u.curve=function(t){return arguments.length?(i=t,null!=r&&(o=i(r)),u):i},u.context=function(t){return arguments.length?(null==t?r=o=null:o=i(r=t),u):r},u},R_=function(){var t=C_,n=null,e=c_(0),r=z_,i=c_(!0),o=null,u=E_,a=null;function c(c){var f,s,l,h,d,p=c.length,g=!1,y=new Array(p),v=new Array(p);for(null==o&&(a=u(d=Io())),f=0;f<=p;++f){if(!(f<p&&i(h=c[f],f,c))===g)if(g=!g)s=f,a.areaStart(),a.lineStart();else{for(a.lineEnd(),a.lineStart(),l=f-1;l>=s;--l)a.point(y[l],v[l]);a.lineEnd(),a.areaEnd()}g&&(y[f]=+t(h,f,c),v[f]=+e(h,f,c),a.point(n?+n(h,f,c):y[f],r?+r(h,f,c):v[f]))}if(d)return a=null,d+""||null}function f(){return P_().defined(i).curve(u).context(o)}return c.x=function(e){return arguments.length?(t="function"==typeof e?e:c_(+e),n=null,c):t},c.x0=function(n){return arguments.length?(t="function"==typeof n?n:c_(+n),c):t},c.x1=function(t){return arguments.length?(n=null==t?null:"function"==typeof t?t:c_(+t),c):n},c.y=function(t){return arguments.length?(e="function"==typeof t?t:c_(+t),r=null,c):e},c.y0=function(t){return arguments.length?(e="function"==typeof t?t:c_(+t),c):e},c.y1=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:c_(+t),c):r},c.lineX0=c.lineY0=function(){return f().x(t).y(e)},c.lineY1=function(){return f().x(t).y(r)},c.lineX1=function(){return f().x(n).y(e)},c.defined=function(t){return arguments.length?(i="function"==typeof t?t:c_(!!t),c):i},c.curve=function(t){return arguments.length?(u=t,null!=o&&(a=u(o)),c):u},c.context=function(t){return arguments.length?(null==t?o=a=null:a=u(o=t),c):o},c},L_=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},U_=function(t){return t},D_=function(){var t=U_,n=L_,e=null,r=c_(0),i=c_(__),o=c_(0);function u(u){var a,c,f,s,l,h=u.length,d=0,p=new Array(h),g=new Array(h),y=+r.apply(this,arguments),v=Math.min(__,Math.max(-__,i.apply(this,arguments)-y)),b=Math.min(Math.abs(v)/h,o.apply(this,arguments)),_=b*(v<0?-1:1);for(a=0;a<h;++a)(l=g[p[a]=a]=+t(u[a],a,u))>0&&(d+=l);for(null!=n?p.sort(function(t,e){return n(g[t],g[e])}):null!=e&&p.sort(function(t,n){return e(u[t],u[n])}),a=0,f=d?(v-h*_)/d:0;a<h;++a,y=s)c=p[a],s=y+((l=g[c])>0?l*f:0)+_,g[c]={data:u[c],index:a,value:l,startAngle:y,endAngle:s,padAngle:b};return g}return u.value=function(n){return arguments.length?(t="function"==typeof n?n:c_(+n),u):t},u.sortValues=function(t){return arguments.length?(n=t,e=null,u):n},u.sort=function(t){return arguments.length?(e=t,n=null,u):e},u.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:c_(+t),u):r},u.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:c_(+t),u):i},u.padAngle=function(t){return arguments.length?(o="function"==typeof t?t:c_(+t),u):o},u},q_=O_(E_);function B_(t){this._curve=t}function O_(t){function n(n){return new B_(t(n))}return n._curve=t,n}function Y_(t){var n=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(t){return arguments.length?n(O_(t)):n()._curve},t}B_.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,n){this._curve.point(n*Math.sin(t),n*-Math.cos(t))}};var I_=function(){return Y_(P_().curve(q_))},F_=function(){var t=R_().curve(q_),n=t.curve,e=t.lineX0,r=t.lineX1,i=t.lineY0,o=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return Y_(e())},delete t.lineX0,t.lineEndAngle=function(){return Y_(r())},delete t.lineX1,t.lineInnerRadius=function(){return Y_(i())},delete t.lineY0,t.lineOuterRadius=function(){return Y_(o())},delete t.lineY1,t.curve=function(t){return arguments.length?n(O_(t)):n()._curve},t},j_=function(t,n){return[(n=+n)*Math.cos(t-=Math.PI/2),n*Math.sin(t)]},H_=Array.prototype.slice;function G_(t){return t.source}function X_(t){return t.target}function V_(t){var n=G_,e=X_,r=C_,i=z_,o=null;function u(){var u,a=H_.call(arguments),c=n.apply(this,a),f=e.apply(this,a);if(o||(o=u=Io()),t(o,+r.apply(this,(a[0]=c,a)),+i.apply(this,a),+r.apply(this,(a[0]=f,a)),+i.apply(this,a)),u)return o=null,u+""||null}return u.source=function(t){return arguments.length?(n=t,u):n},u.target=function(t){return arguments.length?(e=t,u):e},u.x=function(t){return arguments.length?(r="function"==typeof t?t:c_(+t),u):r},u.y=function(t){return arguments.length?(i="function"==typeof t?t:c_(+t),u):i},u.context=function(t){return arguments.length?(o=null==t?null:t,u):o},u}function $_(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n=(n+r)/2,e,n,i,r,i)}function W_(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n,e=(e+i)/2,r,e,r,i)}function Z_(t,n,e,r,i){var o=j_(n,e),u=j_(n,e=(e+i)/2),a=j_(r,e),c=j_(r,i);t.moveTo(o[0],o[1]),t.bezierCurveTo(u[0],u[1],a[0],a[1],c[0],c[1])}function Q_(){return V_($_)}function K_(){return V_(W_)}function J_(){var t=V_(Z_);return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t}var tm={draw:function(t,n){var e=Math.sqrt(n/v_);t.moveTo(e,0),t.arc(0,0,e,0,__)}},nm={draw:function(t,n){var e=Math.sqrt(n/5)/2;t.moveTo(-3*e,-e),t.lineTo(-e,-e),t.lineTo(-e,-3*e),t.lineTo(e,-3*e),t.lineTo(e,-e),t.lineTo(3*e,-e),t.lineTo(3*e,e),t.lineTo(e,e),t.lineTo(e,3*e),t.lineTo(-e,3*e),t.lineTo(-e,e),t.lineTo(-3*e,e),t.closePath()}},em=Math.sqrt(1/3),rm=2*em,im={draw:function(t,n){var e=Math.sqrt(n/rm),r=e*em;t.moveTo(0,-e),t.lineTo(r,0),t.lineTo(0,e),t.lineTo(-r,0),t.closePath()}},om=Math.sin(v_/10)/Math.sin(7*v_/10),um=Math.sin(__/10)*om,am=-Math.cos(__/10)*om,cm={draw:function(t,n){var e=Math.sqrt(.8908130915292852*n),r=um*e,i=am*e;t.moveTo(0,-e),t.lineTo(r,i);for(var o=1;o<5;++o){var u=__*o/5,a=Math.cos(u),c=Math.sin(u);t.lineTo(c*e,-a*e),t.lineTo(a*r-c*i,c*r+a*i)}t.closePath()}},fm={draw:function(t,n){var e=Math.sqrt(n),r=-e/2;t.rect(r,r,e,e)}},sm=Math.sqrt(3),lm={draw:function(t,n){var e=-Math.sqrt(n/(3*sm));t.moveTo(0,2*e),t.lineTo(-sm*e,-e),t.lineTo(sm*e,-e),t.closePath()}},hm=Math.sqrt(3)/2,dm=1/Math.sqrt(12),pm=3*(dm/2+1),gm={draw:function(t,n){var e=Math.sqrt(n/pm),r=e/2,i=e*dm,o=r,u=e*dm+e,a=-o,c=u;t.moveTo(r,i),t.lineTo(o,u),t.lineTo(a,c),t.lineTo(-.5*r-hm*i,hm*r+-.5*i),t.lineTo(-.5*o-hm*u,hm*o+-.5*u),t.lineTo(-.5*a-hm*c,hm*a+-.5*c),t.lineTo(-.5*r+hm*i,-.5*i-hm*r),t.lineTo(-.5*o+hm*u,-.5*u-hm*o),t.lineTo(-.5*a+hm*c,-.5*c-hm*a),t.closePath()}},ym=[tm,nm,im,fm,cm,lm,gm],vm=function(){var t=c_(tm),n=c_(64),e=null;function r(){var r;if(e||(e=r=Io()),t.apply(this,arguments).draw(e,+n.apply(this,arguments)),r)return e=null,r+""||null}return r.type=function(n){return arguments.length?(t="function"==typeof n?n:c_(n),r):t},r.size=function(t){return arguments.length?(n="function"==typeof t?t:c_(+t),r):n},r.context=function(t){return arguments.length?(e=null==t?null:t,r):e},r},bm=function(){};function _m(t,n,e){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+n)/6,(t._y0+4*t._y1+e)/6)}function mm(t){this._context=t}mm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:_m(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:_m(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var xm=function(t){return new mm(t)};function wm(t){this._context=t}wm.prototype={areaStart:bm,areaEnd:bm,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x2=t,this._y2=n;break;case 1:this._point=2,this._x3=t,this._y3=n;break;case 2:this._point=3,this._x4=t,this._y4=n,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+n)/6);break;default:_m(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var Mm=function(t){return new wm(t)};function Am(t){this._context=t}Am.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var e=(this._x0+4*this._x1+t)/6,r=(this._y0+4*this._y1+n)/6;this._line?this._context.lineTo(e,r):this._context.moveTo(e,r);break;case 3:this._point=4;default:_m(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var Sm=function(t){return new Am(t)};function Tm(t,n){this._basis=new mm(t),this._beta=n}Tm.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,n=this._y,e=t.length-1;if(e>0)for(var r,i=t[0],o=n[0],u=t[e]-i,a=n[e]-o,c=-1;++c<=e;)r=c/e,this._basis.point(this._beta*t[c]+(1-this._beta)*(i+r*u),this._beta*n[c]+(1-this._beta)*(o+r*a));this._x=this._y=null,this._basis.lineEnd()},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var km=function t(n){function e(t){return 1===n?new mm(t):new Tm(t,n)}return e.beta=function(n){return t(+n)},e}(.85);function Nm(t,n,e){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-n),t._y2+t._k*(t._y1-e),t._x2,t._y2)}function Em(t,n){this._context=t,this._k=(1-n)/6}Em.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:Nm(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2,this._x1=t,this._y1=n;break;case 2:this._point=3;default:Nm(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Cm=function t(n){function e(t){return new Em(t,n)}return e.tension=function(n){return t(+n)},e}(0);function zm(t,n){this._context=t,this._k=(1-n)/6}zm.prototype={areaStart:bm,areaEnd:bm,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Nm(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Pm=function t(n){function e(t){return new zm(t,n)}return e.tension=function(n){return t(+n)},e}(0);function Rm(t,n){this._context=t,this._k=(1-n)/6}Rm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Nm(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Lm=function t(n){function e(t){return new Rm(t,n)}return e.tension=function(n){return t(+n)},e}(0);function Um(t,n,e){var r=t._x1,i=t._y1,o=t._x2,u=t._y2;if(t._l01_a>y_){var a=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,c=3*t._l01_a*(t._l01_a+t._l12_a);r=(r*a-t._x0*t._l12_2a+t._x2*t._l01_2a)/c,i=(i*a-t._y0*t._l12_2a+t._y2*t._l01_2a)/c}if(t._l23_a>y_){var f=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,s=3*t._l23_a*(t._l23_a+t._l12_a);o=(o*f+t._x1*t._l23_2a-n*t._l12_2a)/s,u=(u*f+t._y1*t._l23_2a-e*t._l12_2a)/s}t._context.bezierCurveTo(r,i,o,u,t._x2,t._y2)}function Dm(t,n){this._context=t,this._alpha=n}Dm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3;default:Um(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var qm=function t(n){function e(t){return n?new Dm(t,n):new Em(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function Bm(t,n){this._context=t,this._alpha=n}Bm.prototype={areaStart:bm,areaEnd:bm,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Um(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Om=function t(n){function e(t){return n?new Bm(t,n):new zm(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function Ym(t,n){this._context=t,this._alpha=n}Ym.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Um(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Im=function t(n){function e(t){return n?new Ym(t,n):new Rm(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function Fm(t){this._context=t}Fm.prototype={areaStart:bm,areaEnd:bm,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,n){t=+t,n=+n,this._point?this._context.lineTo(t,n):(this._point=1,this._context.moveTo(t,n))}};var jm=function(t){return new Fm(t)};function Hm(t){return t<0?-1:1}function Gm(t,n,e){var r=t._x1-t._x0,i=n-t._x1,o=(t._y1-t._y0)/(r||i<0&&-0),u=(e-t._y1)/(i||r<0&&-0),a=(o*i+u*r)/(r+i);return(Hm(o)+Hm(u))*Math.min(Math.abs(o),Math.abs(u),.5*Math.abs(a))||0}function Xm(t,n){var e=t._x1-t._x0;return e?(3*(t._y1-t._y0)/e-n)/2:n}function Vm(t,n,e){var r=t._x0,i=t._y0,o=t._x1,u=t._y1,a=(o-r)/3;t._context.bezierCurveTo(r+a,i+a*n,o-a,u-a*e,o,u)}function $m(t){this._context=t}function Wm(t){this._context=new Zm(t)}function Zm(t){this._context=t}function Qm(t){return new $m(t)}function Km(t){return new Wm(t)}function Jm(t){this._context=t}function tx(t){var n,e,r=t.length-1,i=new Array(r),o=new Array(r),u=new Array(r);for(i[0]=0,o[0]=2,u[0]=t[0]+2*t[1],n=1;n<r-1;++n)i[n]=1,o[n]=4,u[n]=4*t[n]+2*t[n+1];for(i[r-1]=2,o[r-1]=7,u[r-1]=8*t[r-1]+t[r],n=1;n<r;++n)e=i[n]/o[n-1],o[n]-=e,u[n]-=e*u[n-1];for(i[r-1]=u[r-1]/o[r-1],n=r-2;n>=0;--n)i[n]=(u[n]-i[n+1])/o[n];for(o[r-1]=(t[r]+i[r-1])/2,n=0;n<r-1;++n)o[n]=2*t[n+1]-i[n+1];return[i,o]}$m.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:Vm(this,this._t0,Xm(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){var e=NaN;if(n=+n,(t=+t)!==this._x1||n!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,Vm(this,Xm(this,e=Gm(this,t,n)),e);break;default:Vm(this,this._t0,e=Gm(this,t,n))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n,this._t0=e}}},(Wm.prototype=Object.create($m.prototype)).point=function(t,n){$m.prototype.point.call(this,n,t)},Zm.prototype={moveTo:function(t,n){this._context.moveTo(n,t)},closePath:function(){this._context.closePath()},lineTo:function(t,n){this._context.lineTo(n,t)},bezierCurveTo:function(t,n,e,r,i,o){this._context.bezierCurveTo(n,t,r,e,o,i)}},Jm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,n=this._y,e=t.length;if(e)if(this._line?this._context.lineTo(t[0],n[0]):this._context.moveTo(t[0],n[0]),2===e)this._context.lineTo(t[1],n[1]);else for(var r=tx(t),i=tx(n),o=0,u=1;u<e;++o,++u)this._context.bezierCurveTo(r[0][o],i[0][o],r[1][o],i[1][o],t[u],n[u]);(this._line||0!==this._line&&1===e)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var nx=function(t){return new Jm(t)};function ex(t,n){this._context=t,this._t=n}ex.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,n),this._context.lineTo(t,n);else{var e=this._x*(1-this._t)+t*this._t;this._context.lineTo(e,this._y),this._context.lineTo(e,n)}}this._x=t,this._y=n}};var rx=function(t){return new ex(t,.5)};function ix(t){return new ex(t,0)}function ox(t){return new ex(t,1)}var ux=function(t,n){if((i=t.length)>1)for(var e,r,i,o=1,u=t[n[0]],a=u.length;o<i;++o)for(r=u,u=t[n[o]],e=0;e<a;++e)u[e][1]+=u[e][0]=isNaN(r[e][1])?r[e][0]:r[e][1]},ax=function(t){for(var n=t.length,e=new Array(n);--n>=0;)e[n]=n;return e};function cx(t,n){return t[n]}var fx=function(){var t=c_([]),n=ax,e=ux,r=cx;function i(i){var o,u,a=t.apply(this,arguments),c=i.length,f=a.length,s=new Array(f);for(o=0;o<f;++o){for(var l,h=a[o],d=s[o]=new Array(c),p=0;p<c;++p)d[p]=l=[0,+r(i[p],h,p,i)],l.data=i[p];d.key=h}for(o=0,u=n(s);o<f;++o)s[u[o]].index=o;return e(s,u),s}return i.keys=function(n){return arguments.length?(t="function"==typeof n?n:c_(H_.call(n)),i):t},i.value=function(t){return arguments.length?(r="function"==typeof t?t:c_(+t),i):r},i.order=function(t){return arguments.length?(n=null==t?ax:"function"==typeof t?t:c_(H_.call(t)),i):n},i.offset=function(t){return arguments.length?(e=null==t?ux:t,i):e},i},sx=function(t,n){if((r=t.length)>0){for(var e,r,i,o=0,u=t[0].length;o<u;++o){for(i=e=0;e<r;++e)i+=t[e][o][1]||0;if(i)for(e=0;e<r;++e)t[e][o][1]/=i}ux(t,n)}},lx=function(t,n){if((a=t.length)>1)for(var e,r,i,o,u,a,c=0,f=t[n[0]].length;c<f;++c)for(o=u=0,e=0;e<a;++e)(i=(r=t[n[e]][c])[1]-r[0])>=0?(r[0]=o,r[1]=o+=i):i<0?(r[1]=u,r[0]=u+=i):r[0]=o},hx=function(t,n){if((e=t.length)>0){for(var e,r=0,i=t[n[0]],o=i.length;r<o;++r){for(var u=0,a=0;u<e;++u)a+=t[u][r][1]||0;i[r][1]+=i[r][0]=-a/2}ux(t,n)}},dx=function(t,n){if((i=t.length)>0&&(r=(e=t[n[0]]).length)>0){for(var e,r,i,o=0,u=1;u<r;++u){for(var a=0,c=0,f=0;a<i;++a){for(var s=t[n[a]],l=s[u][1]||0,h=(l-(s[u-1][1]||0))/2,d=0;d<a;++d){var p=t[n[d]];h+=(p[u][1]||0)-(p[u-1][1]||0)}c+=l,f+=h*l}e[u-1][1]+=e[u-1][0]=o,c&&(o-=f/c)}e[u-1][1]+=e[u-1][0]=o,ux(t,n)}},px=function(t){var n=t.map(gx);return ax(t).sort(function(t,e){return n[t]-n[e]})};function gx(t){for(var n,e=0,r=-1,i=t.length;++r<i;)(n=+t[r][1])&&(e+=n);return e}var yx=function(t){return px(t).reverse()},vx=function(t){var n,e,r=t.length,i=t.map(gx),o=ax(t).sort(function(t,n){return i[n]-i[t]}),u=0,a=0,c=[],f=[];for(n=0;n<r;++n)e=o[n],u<a?(u+=i[e],c.push(e)):(a+=i[e],f.push(e));return f.reverse().concat(c)},bx=function(t){return ax(t).reverse()},_x=function(t){return function(){return t}};function mx(t){return t[0]}function xx(t){return t[1]}function wx(){this._=null}function Mx(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function Ax(t,n){var e=n,r=n.R,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function Sx(t,n){var e=n,r=n.L,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function Tx(t){for(;t.L;)t=t.L;return t}wx.prototype={constructor:wx,insert:function(t,n){var e,r,i;if(t){if(n.P=t,n.N=t.N,t.N&&(t.N.P=n),t.N=n,t.R){for(t=t.R;t.L;)t=t.L;t.L=n}else t.R=n;e=t}else this._?(t=Tx(this._),n.P=null,n.N=t,t.P=t.L=n,e=t):(n.P=n.N=null,this._=n,e=null);for(n.L=n.R=null,n.U=e,n.C=!0,t=n;e&&e.C;)e===(r=e.U).L?(i=r.R)&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.R&&(Ax(this,e),e=(t=e).U),e.C=!1,r.C=!0,Sx(this,r)):(i=r.L)&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.L&&(Sx(this,e),e=(t=e).U),e.C=!1,r.C=!0,Ax(this,r)),e=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var n,e,r,i=t.U,o=t.L,u=t.R;if(e=o?u?Tx(u):o:u,i?i.L===t?i.L=e:i.R=e:this._=e,o&&u?(r=e.C,e.C=t.C,e.L=o,o.U=e,e!==u?(i=e.U,e.U=t.U,t=e.R,i.L=t,e.R=u,u.U=e):(e.U=i,i=e,t=e.R)):(r=t.C,t=e),t&&(t.U=i),!r)if(t&&t.C)t.C=!1;else{do{if(t===this._)break;if(t===i.L){if((n=i.R).C&&(n.C=!1,i.C=!0,Ax(this,i),n=i.R),n.L&&n.L.C||n.R&&n.R.C){n.R&&n.R.C||(n.L.C=!1,n.C=!0,Sx(this,n),n=i.R),n.C=i.C,i.C=n.R.C=!1,Ax(this,i),t=this._;break}}else if((n=i.L).C&&(n.C=!1,i.C=!0,Sx(this,i),n=i.L),n.L&&n.L.C||n.R&&n.R.C){n.L&&n.L.C||(n.R.C=!1,n.C=!0,Ax(this,n),n=i.L),n.C=i.C,i.C=n.L.C=!1,Sx(this,i),t=this._;break}n.C=!0,t=i,i=i.U}while(!t.C);t&&(t.C=!1)}}};var kx=wx;function Nx(t,n,e,r){var i=[null,null],o=Zx.push(i)-1;return i.left=t,i.right=n,e&&Cx(i,t,n,e),r&&Cx(i,n,t,r),$x[t.index].halfedges.push(o),$x[n.index].halfedges.push(o),i}function Ex(t,n,e){var r=[n,e];return r.left=t,r}function Cx(t,n,e,r){t[0]||t[1]?t.left===e?t[1]=r:t[0]=r:(t[0]=r,t.left=n,t.right=e)}function zx(t,n,e,r,i){var o,u=t[0],a=t[1],c=u[0],f=u[1],s=0,l=1,h=a[0]-c,d=a[1]-f;if(o=n-c,h||!(o>0)){if(o/=h,h<0){if(o<s)return;o<l&&(l=o)}else if(h>0){if(o>l)return;o>s&&(s=o)}if(o=r-c,h||!(o<0)){if(o/=h,h<0){if(o>l)return;o>s&&(s=o)}else if(h>0){if(o<s)return;o<l&&(l=o)}if(o=e-f,d||!(o>0)){if(o/=d,d<0){if(o<s)return;o<l&&(l=o)}else if(d>0){if(o>l)return;o>s&&(s=o)}if(o=i-f,d||!(o<0)){if(o/=d,d<0){if(o>l)return;o>s&&(s=o)}else if(d>0){if(o<s)return;o<l&&(l=o)}return!(s>0||l<1)||(s>0&&(t[0]=[c+s*h,f+s*d]),l<1&&(t[1]=[c+l*h,f+l*d]),!0)}}}}}function Px(t,n,e,r,i){var o=t[1];if(o)return!0;var u,a,c=t[0],f=t.left,s=t.right,l=f[0],h=f[1],d=s[0],p=s[1],g=(l+d)/2,y=(h+p)/2;if(p===h){if(g<n||g>=r)return;if(l>d){if(c){if(c[1]>=i)return}else c=[g,e];o=[g,i]}else{if(c){if(c[1]<e)return}else c=[g,i];o=[g,e]}}else if(a=y-(u=(l-d)/(p-h))*g,u<-1||u>1)if(l>d){if(c){if(c[1]>=i)return}else c=[(e-a)/u,e];o=[(i-a)/u,i]}else{if(c){if(c[1]<e)return}else c=[(i-a)/u,i];o=[(e-a)/u,e]}else if(h<p){if(c){if(c[0]>=r)return}else c=[n,u*n+a];o=[r,u*r+a]}else{if(c){if(c[0]<n)return}else c=[r,u*r+a];o=[n,u*n+a]}return t[0]=c,t[1]=o,!0}function Rx(t,n){var e=t.site,r=n.left,i=n.right;return e===i&&(i=r,r=e),i?Math.atan2(i[1]-r[1],i[0]-r[0]):(e===r?(r=n[1],i=n[0]):(r=n[0],i=n[1]),Math.atan2(r[0]-i[0],i[1]-r[1]))}function Lx(t,n){return n[+(n.left!==t.site)]}function Ux(t,n){return n[+(n.left===t.site)]}var Dx,qx=[];function Bx(t){var n=t.P,e=t.N;if(n&&e){var r=n.site,i=t.site,o=e.site;if(r!==o){var u=i[0],a=i[1],c=r[0]-u,f=r[1]-a,s=o[0]-u,l=o[1]-a,h=2*(c*l-f*s);if(!(h>=-Kx)){var d=c*c+f*f,p=s*s+l*l,g=(l*d-f*p)/h,y=(c*p-s*d)/h,v=qx.pop()||new function(){Mx(this),this.x=this.y=this.arc=this.site=this.cy=null};v.arc=t,v.site=i,v.x=g+u,v.y=(v.cy=y+a)+Math.sqrt(g*g+y*y),t.circle=v;for(var b=null,_=Wx._;_;)if(v.y<_.y||v.y===_.y&&v.x<=_.x){if(!_.L){b=_.P;break}_=_.L}else{if(!_.R){b=_;break}_=_.R}Wx.insert(b,v),b||(Dx=v)}}}}function Ox(t){var n=t.circle;n&&(n.P||(Dx=n.N),Wx.remove(n),qx.push(n),Mx(n),t.circle=null)}var Yx=[];function Ix(t){var n=Yx.pop()||new function(){Mx(this),this.edge=this.site=this.circle=null};return n.site=t,n}function Fx(t){Ox(t),Vx.remove(t),Yx.push(t),Mx(t)}function jx(t){var n=t.circle,e=n.x,r=n.cy,i=[e,r],o=t.P,u=t.N,a=[t];Fx(t);for(var c=o;c.circle&&Math.abs(e-c.circle.x)<Qx&&Math.abs(r-c.circle.cy)<Qx;)o=c.P,a.unshift(c),Fx(c),c=o;a.unshift(c),Ox(c);for(var f=u;f.circle&&Math.abs(e-f.circle.x)<Qx&&Math.abs(r-f.circle.cy)<Qx;)u=f.N,a.push(f),Fx(f),f=u;a.push(f),Ox(f);var s,l=a.length;for(s=1;s<l;++s)f=a[s],c=a[s-1],Cx(f.edge,c.site,f.site,i);c=a[0],(f=a[l-1]).edge=Nx(c.site,f.site,null,i),Bx(c),Bx(f)}function Hx(t){for(var n,e,r,i,o=t[0],u=t[1],a=Vx._;a;)if((r=Gx(a,u)-o)>Qx)a=a.L;else{if(!((i=o-Xx(a,u))>Qx)){r>-Qx?(n=a.P,e=a):i>-Qx?(n=a,e=a.N):n=e=a;break}if(!a.R){n=a;break}a=a.R}!function(t){$x[t.index]={site:t,halfedges:[]}}(t);var c=Ix(t);if(Vx.insert(n,c),n||e){if(n===e)return Ox(n),e=Ix(n.site),Vx.insert(c,e),c.edge=e.edge=Nx(n.site,c.site),Bx(n),void Bx(e);if(e){Ox(n),Ox(e);var f=n.site,s=f[0],l=f[1],h=t[0]-s,d=t[1]-l,p=e.site,g=p[0]-s,y=p[1]-l,v=2*(h*y-d*g),b=h*h+d*d,_=g*g+y*y,m=[(y*b-d*_)/v+s,(h*_-g*b)/v+l];Cx(e.edge,f,p,m),c.edge=Nx(f,t,null,m),e.edge=Nx(t,p,null,m),Bx(n),Bx(e)}else c.edge=Nx(n.site,c.site)}}function Gx(t,n){var e=t.site,r=e[0],i=e[1],o=i-n;if(!o)return r;var u=t.P;if(!u)return-1/0;var a=(e=u.site)[0],c=e[1],f=c-n;if(!f)return a;var s=a-r,l=1/o-1/f,h=s/f;return l?(-h+Math.sqrt(h*h-2*l*(s*s/(-2*f)-c+f/2+i-o/2)))/l+r:(r+a)/2}function Xx(t,n){var e=t.N;if(e)return Gx(e,n);var r=t.site;return r[1]===n?r[0]:1/0}var Vx,$x,Wx,Zx,Qx=1e-6,Kx=1e-12;function Jx(t,n){return n[1]-t[1]||n[0]-t[0]}function tw(t,n){var e,r,i,o=t.sort(Jx).pop();for(Zx=[],$x=new Array(t.length),Vx=new kx,Wx=new kx;;)if(i=Dx,o&&(!i||o[1]<i.y||o[1]===i.y&&o[0]<i.x))o[0]===e&&o[1]===r||(Hx(o),e=o[0],r=o[1]),o=t.pop();else{if(!i)break;jx(i.arc)}if(function(){for(var t,n,e,r,i=0,o=$x.length;i<o;++i)if((t=$x[i])&&(r=(n=t.halfedges).length)){var u=new Array(r),a=new Array(r);for(e=0;e<r;++e)u[e]=e,a[e]=Rx(t,Zx[n[e]]);for(u.sort(function(t,n){return a[n]-a[t]}),e=0;e<r;++e)a[e]=n[u[e]];for(e=0;e<r;++e)n[e]=a[e]}}(),n){var u=+n[0][0],a=+n[0][1],c=+n[1][0],f=+n[1][1];!function(t,n,e,r){for(var i,o=Zx.length;o--;)Px(i=Zx[o],t,n,e,r)&&zx(i,t,n,e,r)&&(Math.abs(i[0][0]-i[1][0])>Qx||Math.abs(i[0][1]-i[1][1])>Qx)||delete Zx[o]}(u,a,c,f),function(t,n,e,r){var i,o,u,a,c,f,s,l,h,d,p,g,y=$x.length,v=!0;for(i=0;i<y;++i)if(o=$x[i]){for(u=o.site,a=(c=o.halfedges).length;a--;)Zx[c[a]]||c.splice(a,1);for(a=0,f=c.length;a<f;)p=(d=Ux(o,Zx[c[a]]))[0],g=d[1],l=(s=Lx(o,Zx[c[++a%f]]))[0],h=s[1],(Math.abs(p-l)>Qx||Math.abs(g-h)>Qx)&&(c.splice(a,0,Zx.push(Ex(u,d,Math.abs(p-t)<Qx&&r-g>Qx?[t,Math.abs(l-t)<Qx?h:r]:Math.abs(g-r)<Qx&&e-p>Qx?[Math.abs(h-r)<Qx?l:e,r]:Math.abs(p-e)<Qx&&g-n>Qx?[e,Math.abs(l-e)<Qx?h:n]:Math.abs(g-n)<Qx&&p-t>Qx?[Math.abs(h-n)<Qx?l:t,n]:null))-1),++f);f&&(v=!1)}if(v){var b,_,m,x=1/0;for(i=0,v=null;i<y;++i)(o=$x[i])&&(m=(b=(u=o.site)[0]-t)*b+(_=u[1]-n)*_)<x&&(x=m,v=o);if(v){var w=[t,n],M=[t,r],A=[e,r],S=[e,n];v.halfedges.push(Zx.push(Ex(u=v.site,w,M))-1,Zx.push(Ex(u,M,A))-1,Zx.push(Ex(u,A,S))-1,Zx.push(Ex(u,S,w))-1)}}for(i=0;i<y;++i)(o=$x[i])&&(o.halfedges.length||delete $x[i])}(u,a,c,f)}this.edges=Zx,this.cells=$x,Vx=Wx=Zx=$x=null}tw.prototype={constructor:tw,polygons:function(){var t=this.edges;return this.cells.map(function(n){var e=n.halfedges.map(function(e){return Lx(n,t[e])});return e.data=n.site.data,e})},triangles:function(){var t=[],n=this.edges;return this.cells.forEach(function(e,r){if(o=(i=e.halfedges).length)for(var i,o,u,a,c,f,s=e.site,l=-1,h=n[i[o-1]],d=h.left===s?h.right:h.left;++l<o;)u=d,d=(h=n[i[l]]).left===s?h.right:h.left,u&&d&&r<u.index&&r<d.index&&(c=u,f=d,((a=s)[0]-f[0])*(c[1]-a[1])-(a[0]-c[0])*(f[1]-a[1])<0)&&t.push([s.data,u.data,d.data])}),t},links:function(){return this.edges.filter(function(t){return t.right}).map(function(t){return{source:t.left.data,target:t.right.data}})},find:function(t,n,e){for(var r,i,o=this,u=o._found||0,a=o.cells.length;!(i=o.cells[u]);)if(++u>=a)return null;var c=t-i.site[0],f=n-i.site[1],s=c*c+f*f;do{i=o.cells[r=u],u=null,i.halfedges.forEach(function(e){var r=o.edges[e],a=r.left;if(a!==i.site&&a||(a=r.right)){var c=t-a[0],f=n-a[1],l=c*c+f*f;l<s&&(s=l,u=a.index)}})}while(null!==u);return o._found=r,null==e||s<=e*e?i.site:null}};var nw=function(){var t=mx,n=xx,e=null;function r(r){return new tw(r.map(function(e,i){var o=[Math.round(t(e,i,r)/Qx)*Qx,Math.round(n(e,i,r)/Qx)*Qx];return o.index=i,o.data=e,o}),e)}return r.polygons=function(t){return r(t).polygons()},r.links=function(t){return r(t).links()},r.triangles=function(t){return r(t).triangles()},r.x=function(n){return arguments.length?(t="function"==typeof n?n:_x(+n),r):t},r.y=function(t){return arguments.length?(n="function"==typeof t?t:_x(+t),r):n},r.extent=function(t){return arguments.length?(e=null==t?null:[[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]],r):e&&[[e[0][0],e[0][1]],[e[1][0],e[1][1]]]},r.size=function(t){return arguments.length?(e=null==t?null:[[0,0],[+t[0],+t[1]]],r):e&&[e[1][0]-e[0][0],e[1][1]-e[0][1]]},r},ew=function(t){return function(){return t}};function rw(t,n,e){this.k=t,this.x=n,this.y=e}rw.prototype={constructor:rw,scale:function(t){return 1===t?this:new rw(this.k*t,this.x,this.y)},translate:function(t,n){return 0===t&0===n?this:new rw(this.k,this.x+this.k*t,this.y+this.k*n)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var iw=new rw(1,0,0);function ow(t){return t.__zoom||iw}function uw(){Vt.stopImmediatePropagation()}ow.prototype=rw.prototype;var aw=function(){Vt.preventDefault(),Vt.stopImmediatePropagation()};function cw(){return!Vt.button}function fw(){var t,n,e=this;return e instanceof SVGElement?(t=(e=e.ownerSVGElement||e).width.baseVal.value,n=e.height.baseVal.value):(t=e.clientWidth,n=e.clientHeight),[[0,0],[t,n]]}function sw(){return this.__zoom||iw}function lw(){return-Vt.deltaY*(Vt.deltaMode?120:1)/500}function hw(){return"ontouchstart"in this}function dw(t,n,e){var r=t.invertX(n[0][0])-e[0][0],i=t.invertX(n[1][0])-e[1][0],o=t.invertY(n[0][1])-e[0][1],u=t.invertY(n[1][1])-e[1][1];return t.translate(i>r?(r+i)/2:Math.min(0,r)||Math.max(0,i),u>o?(o+u)/2:Math.min(0,o)||Math.max(0,u))}var pw=function(){var t,n,e=cw,r=fw,i=dw,o=lw,u=hw,a=[0,1/0],c=[[-1/0,-1/0],[1/0,1/0]],f=250,s=ar,l=[],h=ht("start","zoom","end"),d=500,p=150,g=0;function y(t){t.property("__zoom",sw).on("wheel.zoom",M).on("mousedown.zoom",A).on("dblclick.zoom",S).filter(u).on("touchstart.zoom",T).on("touchmove.zoom",k).on("touchend.zoom touchcancel.zoom",N).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function v(t,n){return(n=Math.max(a[0],Math.min(a[1],n)))===t.k?t:new rw(n,t.x,t.y)}function b(t,n,e){var r=n[0]-e[0]*t.k,i=n[1]-e[1]*t.k;return r===t.x&&i===t.y?t:new rw(t.k,r,i)}function _(t){return[(+t[0][0]+ +t[1][0])/2,(+t[0][1]+ +t[1][1])/2]}function m(t,n,e){t.on("start.zoom",function(){x(this,arguments).start()}).on("interrupt.zoom end.zoom",function(){x(this,arguments).end()}).tween("zoom",function(){var t=arguments,i=x(this,t),o=r.apply(this,t),u=e||_(o),a=Math.max(o[1][0]-o[0][0],o[1][1]-o[0][1]),c=this.__zoom,f="function"==typeof n?n.apply(this,t):n,l=s(c.invert(u).concat(a/c.k),f.invert(u).concat(a/f.k));return function(t){if(1===t)t=f;else{var n=l(t),e=a/n[2];t=new rw(e,u[0]-n[0]*e,u[1]-n[1]*e)}i.zoom(null,t)}})}function x(t,n){for(var e,r=0,i=l.length;r<i;++r)if((e=l[r]).that===t)return e;return new w(t,n)}function w(t,n){this.that=t,this.args=n,this.index=-1,this.active=0,this.extent=r.apply(t,n)}function M(){if(e.apply(this,arguments)){var t=x(this,arguments),n=this.__zoom,r=Math.max(a[0],Math.min(a[1],n.k*Math.pow(2,o.apply(this,arguments)))),u=hn(this);if(t.wheel)t.mouse[0][0]===u[0]&&t.mouse[0][1]===u[1]||(t.mouse[1]=n.invert(t.mouse[0]=u)),clearTimeout(t.wheel);else{if(n.k===r)return;t.mouse=[u,n.invert(u)],ti(this),t.start()}aw(),t.wheel=setTimeout(function(){t.wheel=null,t.end()},p),t.zoom("mouse",i(b(v(n,r),t.mouse[0],t.mouse[1]),t.extent,c))}}function A(){if(!n&&e.apply(this,arguments)){var t=x(this,arguments),r=on(Vt.view).on("mousemove.zoom",function(){if(aw(),!t.moved){var n=Vt.clientX-u,e=Vt.clientY-a;t.moved=n*n+e*e>g}t.zoom("mouse",i(b(t.that.__zoom,t.mouse[0]=hn(t.that),t.mouse[1]),t.extent,c))},!0).on("mouseup.zoom",function(){r.on("mousemove.zoom mouseup.zoom",null),_n(Vt.view,t.moved),aw(),t.end()},!0),o=hn(this),u=Vt.clientX,a=Vt.clientY;bn(Vt.view),uw(),t.mouse=[o,this.__zoom.invert(o)],ti(this),t.start()}}function S(){if(e.apply(this,arguments)){var t=this.__zoom,n=hn(this),o=t.invert(n),u=t.k*(Vt.shiftKey?.5:2),a=i(b(v(t,u),n,o),r.apply(this,arguments),c);aw(),f>0?on(this).transition().duration(f).call(m,a,n):on(this).call(y.transform,a)}}function T(){if(e.apply(this,arguments)){var n,r,i,o,u=x(this,arguments),a=Vt.changedTouches,c=a.length;for(uw(),r=0;r<c;++r)i=a[r],o=[o=pn(this,a,i.identifier),this.__zoom.invert(o),i.identifier],u.touch0?u.touch1||(u.touch1=o):(u.touch0=o,n=!0);if(t&&(t=clearTimeout(t),!u.touch1))return u.end(),void((o=on(this).on("dblclick.zoom"))&&o.apply(this,arguments));n&&(t=setTimeout(function(){t=null},d),ti(this),u.start())}}function k(){var n,e,r,o,u=x(this,arguments),a=Vt.changedTouches,f=a.length;for(aw(),t&&(t=clearTimeout(t)),n=0;n<f;++n)e=a[n],r=pn(this,a,e.identifier),u.touch0&&u.touch0[2]===e.identifier?u.touch0[0]=r:u.touch1&&u.touch1[2]===e.identifier&&(u.touch1[0]=r);if(e=u.that.__zoom,u.touch1){var s=u.touch0[0],l=u.touch0[1],h=u.touch1[0],d=u.touch1[1],p=(p=h[0]-s[0])*p+(p=h[1]-s[1])*p,g=(g=d[0]-l[0])*g+(g=d[1]-l[1])*g;e=v(e,Math.sqrt(p/g)),r=[(s[0]+h[0])/2,(s[1]+h[1])/2],o=[(l[0]+d[0])/2,(l[1]+d[1])/2]}else{if(!u.touch0)return;r=u.touch0[0],o=u.touch0[1]}u.zoom("touch",i(b(e,r,o),u.extent,c))}function N(){var t,e,r=x(this,arguments),i=Vt.changedTouches,o=i.length;for(uw(),n&&clearTimeout(n),n=setTimeout(function(){n=null},d),t=0;t<o;++t)e=i[t],r.touch0&&r.touch0[2]===e.identifier?delete r.touch0:r.touch1&&r.touch1[2]===e.identifier&&delete r.touch1;r.touch1&&!r.touch0&&(r.touch0=r.touch1,delete r.touch1),r.touch0?r.touch0[1]=this.__zoom.invert(r.touch0[0]):r.end()}return y.transform=function(t,n){var e=t.selection?t.selection():t;e.property("__zoom",sw),t!==e?m(t,n):e.interrupt().each(function(){x(this,arguments).start().zoom(null,"function"==typeof n?n.apply(this,arguments):n).end()})},y.scaleBy=function(t,n){y.scaleTo(t,function(){return this.__zoom.k*("function"==typeof n?n.apply(this,arguments):n)})},y.scaleTo=function(t,n){y.transform(t,function(){var t=r.apply(this,arguments),e=this.__zoom,o=_(t),u=e.invert(o),a="function"==typeof n?n.apply(this,arguments):n;return i(b(v(e,a),o,u),t,c)})},y.translateBy=function(t,n,e){y.transform(t,function(){return i(this.__zoom.translate("function"==typeof n?n.apply(this,arguments):n,"function"==typeof e?e.apply(this,arguments):e),r.apply(this,arguments),c)})},y.translateTo=function(t,n,e){y.transform(t,function(){var t=r.apply(this,arguments),o=this.__zoom,u=_(t);return i(iw.translate(u[0],u[1]).scale(o.k).translate("function"==typeof n?-n.apply(this,arguments):-n,"function"==typeof e?-e.apply(this,arguments):-e),t,c)})},w.prototype={start:function(){return 1==++this.active&&(this.index=l.push(this)-1,this.emit("start")),this},zoom:function(t,n){return this.mouse&&"mouse"!==t&&(this.mouse[1]=n.invert(this.mouse[0])),this.touch0&&"touch"!==t&&(this.touch0[1]=n.invert(this.touch0[0])),this.touch1&&"touch"!==t&&(this.touch1[1]=n.invert(this.touch1[0])),this.that.__zoom=n,this.emit("zoom"),this},end:function(){return 0==--this.active&&(l.splice(this.index,1),this.index=-1,this.emit("end")),this},emit:function(t){Kt(new function(t,n,e){this.target=t,this.type=n,this.transform=e}(y,t,this.that.__zoom),h.apply,h,[t,this.that,this.args])}},y.wheelDelta=function(t){return arguments.length?(o="function"==typeof t?t:ew(+t),y):o},y.filter=function(t){return arguments.length?(e="function"==typeof t?t:ew(!!t),y):e},y.touchable=function(t){return arguments.length?(u="function"==typeof t?t:ew(!!t),y):u},y.extent=function(t){return arguments.length?(r="function"==typeof t?t:ew([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),y):r},y.scaleExtent=function(t){return arguments.length?(a[0]=+t[0],a[1]=+t[1],y):[a[0],a[1]]},y.translateExtent=function(t){return arguments.length?(c[0][0]=+t[0][0],c[1][0]=+t[1][0],c[0][1]=+t[0][1],c[1][1]=+t[1][1],y):[[c[0][0],c[0][1]],[c[1][0],c[1][1]]]},y.constrain=function(t){return arguments.length?(i=t,y):i},y.duration=function(t){return arguments.length?(f=+t,y):f},y.interpolate=function(t){return arguments.length?(s=t,y):s},y.on=function(){var t=h.on.apply(h,arguments);return t===h?y:t},y.clickDistance=function(t){return arguments.length?(g=(t=+t)*t,y):Math.sqrt(g)},y};e.d(n,"version",function(){return"5.4.0"}),e.d(n,"bisect",function(){return c}),e.d(n,"bisectRight",function(){return u}),e.d(n,"bisectLeft",function(){return a}),e.d(n,"ascending",function(){return r}),e.d(n,"bisector",function(){return i}),e.d(n,"cross",function(){return l}),e.d(n,"descending",function(){return h}),e.d(n,"deviation",function(){return g}),e.d(n,"extent",function(){return y}),e.d(n,"histogram",function(){return C}),e.d(n,"thresholdFreedmanDiaconis",function(){return P}),e.d(n,"thresholdScott",function(){return R}),e.d(n,"thresholdSturges",function(){return E}),e.d(n,"max",function(){return L}),e.d(n,"mean",function(){return U}),e.d(n,"median",function(){return D}),e.d(n,"merge",function(){return q}),e.d(n,"min",function(){return B}),e.d(n,"pairs",function(){return f}),e.d(n,"permute",function(){return O}),e.d(n,"quantile",function(){return z}),e.d(n,"range",function(){return w}),e.d(n,"scan",function(){return Y}),e.d(n,"shuffle",function(){return I}),e.d(n,"sum",function(){return F}),e.d(n,"ticks",function(){return T}),e.d(n,"tickIncrement",function(){return k}),e.d(n,"tickStep",function(){return N}),e.d(n,"transpose",function(){return j}),e.d(n,"variance",function(){return p}),e.d(n,"zip",function(){return G}),e.d(n,"axisTop",function(){return rt}),e.d(n,"axisRight",function(){return it}),e.d(n,"axisBottom",function(){return ot}),e.d(n,"axisLeft",function(){return ut}),e.d(n,"brush",function(){return So}),e.d(n,"brushX",function(){return Mo}),e.d(n,"brushY",function(){return Ao}),e.d(n,"brushSelection",function(){return wo}),e.d(n,"chord",function(){return Ro}),e.d(n,"ribbon",function(){return Vo}),e.d(n,"nest",function(){return Qo}),e.d(n,"set",function(){return ou}),e.d(n,"map",function(){return Zo}),e.d(n,"keys",function(){return uu}),e.d(n,"values",function(){return au}),e.d(n,"entries",function(){return cu}),e.d(n,"color",function(){return Fn}),e.d(n,"rgb",function(){return Xn}),e.d(n,"hsl",function(){return Zn}),e.d(n,"lab",function(){return se}),e.d(n,"hcl",function(){return be}),e.d(n,"lch",function(){return ve}),e.d(n,"gray",function(){return fe}),e.d(n,"cubehelix",function(){return Te}),e.d(n,"contours",function(){return bu}),e.d(n,"contourDensity",function(){return Mu}),e.d(n,"dispatch",function(){return ht}),e.d(n,"drag",function(){return Tn}),e.d(n,"dragDisable",function(){return bn}),e.d(n,"dragEnable",function(){return _n}),e.d(n,"dsvFormat",function(){return Cu}),e.d(n,"csvParse",function(){return Pu}),e.d(n,"csvParseRows",function(){return Ru}),e.d(n,"csvFormat",function(){return Lu}),e.d(n,"csvFormatRows",function(){return Uu}),e.d(n,"tsvParse",function(){return qu}),e.d(n,"tsvParseRows",function(){return Bu}),e.d(n,"tsvFormat",function(){return Ou}),e.d(n,"tsvFormatRows",function(){return Yu}),e.d(n,"easeLinear",function(){return fi}),e.d(n,"easeQuad",function(){return hi}),e.d(n,"easeQuadIn",function(){return si}),e.d(n,"easeQuadOut",function(){return li}),e.d(n,"easeQuadInOut",function(){return hi}),e.d(n,"easeCubic",function(){return gi}),e.d(n,"easeCubicIn",function(){return di}),e.d(n,"easeCubicOut",function(){return pi}),e.d(n,"easeCubicInOut",function(){return gi}),e.d(n,"easePoly",function(){return bi}),e.d(n,"easePolyIn",function(){return yi}),e.d(n,"easePolyOut",function(){return vi}),e.d(n,"easePolyInOut",function(){return bi}),e.d(n,"easeSin",function(){return Mi}),e.d(n,"easeSinIn",function(){return xi}),e.d(n,"easeSinOut",function(){return wi}),e.d(n,"easeSinInOut",function(){return Mi}),e.d(n,"easeExp",function(){return Ti}),e.d(n,"easeExpIn",function(){return Ai}),e.d(n,"easeExpOut",function(){return Si}),e.d(n,"easeExpInOut",function(){return Ti}),e.d(n,"easeCircle",function(){return Ei}),e.d(n,"easeCircleIn",function(){return ki}),e.d(n,"easeCircleOut",function(){return Ni}),e.d(n,"easeCircleInOut",function(){return Ei}),e.d(n,"easeBounce",function(){return Ii}),e.d(n,"easeBounceIn",function(){return Yi}),e.d(n,"easeBounceOut",function(){return Ii}),e.d(n,"easeBounceInOut",function(){return Fi}),e.d(n,"easeBack",function(){return Gi}),e.d(n,"easeBackIn",function(){return ji}),e.d(n,"easeBackOut",function(){return Hi}),e.d(n,"easeBackInOut",function(){return Gi}),e.d(n,"easeElastic",function(){return $i}),e.d(n,"easeElasticIn",function(){return Vi}),e.d(n,"easeElasticOut",function(){return $i}),e.d(n,"easeElasticInOut",function(){return Wi}),e.d(n,"blob",function(){return Fu}),e.d(n,"buffer",function(){return Hu}),e.d(n,"dsv",function(){return $u}),e.d(n,"csv",function(){return Wu}),e.d(n,"tsv",function(){return Zu}),e.d(n,"image",function(){return Qu}),e.d(n,"json",function(){return Ju}),e.d(n,"text",function(){return Xu}),e.d(n,"xml",function(){return na}),e.d(n,"html",function(){return ea}),e.d(n,"svg",function(){return ra}),e.d(n,"forceCenter",function(){return ia}),e.d(n,"forceCollide",function(){return va}),e.d(n,"forceLink",function(){return ma}),e.d(n,"forceManyBody",function(){return Ta}),e.d(n,"forceRadial",function(){return ka}),e.d(n,"forceSimulation",function(){return Sa}),e.d(n,"forceX",function(){return Na}),e.d(n,"forceY",function(){return Ea}),e.d(n,"formatDefaultLocale",function(){return Ga}),e.d(n,"format",function(){return qa}),e.d(n,"formatPrefix",function(){return Ba}),e.d(n,"formatLocale",function(){return Ha}),e.d(n,"formatSpecifier",function(){return Ra}),e.d(n,"precisionFixed",function(){return Xa}),e.d(n,"precisionPrefix",function(){return Va}),e.d(n,"precisionRound",function(){return $a}),e.d(n,"geoArea",function(){return Yc}),e.d(n,"geoBounds",function(){return Rf}),e.d(n,"geoCentroid",function(){return Gf}),e.d(n,"geoCircle",function(){return es}),e.d(n,"geoClipAntimeridian",function(){return ds}),e.d(n,"geoClipCircle",function(){return ps}),e.d(n,"geoClipExtent",function(){return ws}),e.d(n,"geoClipRectangle",function(){return bs}),e.d(n,"geoContains",function(){return Ys}),e.d(n,"geoDistance",function(){return zs}),e.d(n,"geoGraticule",function(){return js}),e.d(n,"geoGraticule10",function(){return Hs}),e.d(n,"geoInterpolate",function(){return Ws}),e.d(n,"geoLength",function(){return Ns}),e.d(n,"geoPath",function(){return Vl}),e.d(n,"geoAlbers",function(){return hh}),e.d(n,"geoAlbersUsa",function(){return dh}),e.d(n,"geoAzimuthalEqualArea",function(){return vh}),e.d(n,"geoAzimuthalEqualAreaRaw",function(){return yh}),e.d(n,"geoAzimuthalEquidistant",function(){return _h}),e.d(n,"geoAzimuthalEquidistantRaw",function(){return bh}),e.d(n,"geoConicConformal",function(){return Sh}),e.d(n,"geoConicConformalRaw",function(){return Ah}),e.d(n,"geoConicEqualArea",function(){return lh}),e.d(n,"geoConicEqualAreaRaw",function(){return sh}),e.d(n,"geoConicEquidistant",function(){return Eh}),e.d(n,"geoConicEquidistantRaw",function(){return Nh}),e.d(n,"geoEquirectangular",function(){return kh}),e.d(n,"geoEquirectangularRaw",function(){return Th}),e.d(n,"geoGnomonic",function(){return zh}),e.d(n,"geoGnomonicRaw",function(){return Ch}),e.d(n,"geoIdentity",function(){return Rh}),e.d(n,"geoProjection",function(){return ah}),e.d(n,"geoProjectionMutator",function(){return ch}),e.d(n,"geoMercator",function(){return xh}),e.d(n,"geoMercatorRaw",function(){return mh}),e.d(n,"geoNaturalEarth1",function(){return Uh}),e.d(n,"geoNaturalEarth1Raw",function(){return Lh}),e.d(n,"geoOrthographic",function(){return qh}),e.d(n,"geoOrthographicRaw",function(){return Dh}),e.d(n,"geoStereographic",function(){return Oh}),e.d(n,"geoStereographicRaw",function(){return Bh}),e.d(n,"geoTransverseMercator",function(){return Ih}),e.d(n,"geoTransverseMercatorRaw",function(){return Yh}),e.d(n,"geoRotation",function(){return Jf}),e.d(n,"geoStream",function(){return Pc}),e.d(n,"geoTransform",function(){return $l}),e.d(n,"cluster",function(){return Gh}),e.d(n,"hierarchy",function(){return Vh}),e.d(n,"pack",function(){return vd}),e.d(n,"packSiblings",function(){return hd}),e.d(n,"packEnclose",function(){return Jh}),e.d(n,"partition",function(){return Md}),e.d(n,"stratify",function(){return Ed}),e.d(n,"tree",function(){return Dd}),e.d(n,"treemap",function(){return Id}),e.d(n,"treemapBinary",function(){return Fd}),e.d(n,"treemapDice",function(){return wd}),e.d(n,"treemapSlice",function(){return qd}),e.d(n,"treemapSliceDice",function(){return jd}),e.d(n,"treemapSquarify",function(){return Yd}),e.d(n,"treemapResquarify",function(){return Hd}),e.d(n,"interpolate",function(){return Qe}),e.d(n,"interpolateArray",function(){return Ye}),e.d(n,"interpolateBasis",function(){return Ee}),e.d(n,"interpolateBasisClosed",function(){return Ce}),e.d(n,"interpolateDate",function(){return Ie}),e.d(n,"interpolateNumber",function(){return Fe}),e.d(n,"interpolateObject",function(){return je}),e.d(n,"interpolateRound",function(){return Ke}),e.d(n,"interpolateString",function(){return Ze}),e.d(n,"interpolateTransformCss",function(){return rr}),e.d(n,"interpolateTransformSvg",function(){return ir}),e.d(n,"interpolateZoom",function(){return ar}),e.d(n,"interpolateRgb",function(){return De}),e.d(n,"interpolateRgbBasis",function(){return Be}),e.d(n,"interpolateRgbBasisClosed",function(){return Oe}),e.d(n,"interpolateHsl",function(){return fr}),e.d(n,"interpolateHslLong",function(){return sr}),e.d(n,"interpolateLab",function(){return lr}),e.d(n,"interpolateHcl",function(){return dr}),e.d(n,"interpolateHclLong",function(){return pr}),e.d(n,"interpolateCubehelix",function(){return yr}),e.d(n,"interpolateCubehelixLong",function(){return vr}),e.d(n,"piecewise",function(){return br}),e.d(n,"quantize",function(){return xr}),e.d(n,"path",function(){return Io}),e.d(n,"polygonArea",function(){return Gd}),e.d(n,"polygonCentroid",function(){return Xd}),e.d(n,"polygonHull",function(){return Zd}),e.d(n,"polygonContains",function(){return Qd}),e.d(n,"polygonLength",function(){return Kd}),e.d(n,"quadtree",function(){return la}),e.d(n,"randomUniform",function(){return tp}),e.d(n,"randomNormal",function(){return np}),e.d(n,"randomLogNormal",function(){return ep}),e.d(n,"randomBates",function(){return ip}),e.d(n,"randomIrwinHall",function(){return rp}),e.d(n,"randomExponential",function(){return op}),e.d(n,"scaleBand",function(){return lp}),e.d(n,"scalePoint",function(){return hp}),e.d(n,"scaleIdentity",function(){return Ap}),e.d(n,"scaleLinear",function(){return Mp}),e.d(n,"scaleLog",function(){return Pp}),e.d(n,"scaleOrdinal",function(){return sp}),e.d(n,"scaleImplicit",function(){return fp}),e.d(n,"scalePow",function(){return Lp}),e.d(n,"scaleSqrt",function(){return Up}),e.d(n,"scaleQuantile",function(){return Dp}),e.d(n,"scaleQuantize",function(){return qp}),e.d(n,"scaleThreshold",function(){return Bp}),e.d(n,"scaleTime",function(){return Lv}),e.d(n,"scaleUtc",function(){return Uv}),e.d(n,"scaleSequential",function(){return Dv}),e.d(n,"schemeCategory10",function(){return Bv}),e.d(n,"schemeAccent",function(){return Ov}),e.d(n,"schemeDark2",function(){return Yv}),e.d(n,"schemePaired",function(){return Iv}),e.d(n,"schemePastel1",function(){return Fv}),e.d(n,"schemePastel2",function(){return jv}),e.d(n,"schemeSet1",function(){return Hv}),e.d(n,"schemeSet2",function(){return Gv}),e.d(n,"schemeSet3",function(){return Xv}),e.d(n,"interpolateBrBG",function(){return Wv}),e.d(n,"schemeBrBG",function(){return $v}),e.d(n,"interpolatePRGn",function(){return Qv}),e.d(n,"schemePRGn",function(){return Zv}),e.d(n,"interpolatePiYG",function(){return Jv}),e.d(n,"schemePiYG",function(){return Kv}),e.d(n,"interpolatePuOr",function(){return nb}),e.d(n,"schemePuOr",function(){return tb}),e.d(n,"interpolateRdBu",function(){return rb}),e.d(n,"schemeRdBu",function(){return eb}),e.d(n,"interpolateRdGy",function(){return ob}),e.d(n,"schemeRdGy",function(){return ib}),e.d(n,"interpolateRdYlBu",function(){return ab}),e.d(n,"schemeRdYlBu",function(){return ub}),e.d(n,"interpolateRdYlGn",function(){return fb}),e.d(n,"schemeRdYlGn",function(){return cb}),e.d(n,"interpolateSpectral",function(){return lb}),e.d(n,"schemeSpectral",function(){return sb}),e.d(n,"interpolateBuGn",function(){return db}),e.d(n,"schemeBuGn",function(){return hb}),e.d(n,"interpolateBuPu",function(){return gb}),e.d(n,"schemeBuPu",function(){return pb}),e.d(n,"interpolateGnBu",function(){return vb}),e.d(n,"schemeGnBu",function(){return yb}),e.d(n,"interpolateOrRd",function(){return _b}),e.d(n,"schemeOrRd",function(){return bb}),e.d(n,"interpolatePuBuGn",function(){return xb}),e.d(n,"schemePuBuGn",function(){return mb}),e.d(n,"interpolatePuBu",function(){return Mb}),e.d(n,"schemePuBu",function(){return wb}),e.d(n,"interpolatePuRd",function(){return Sb}),e.d(n,"schemePuRd",function(){return Ab}),e.d(n,"interpolateRdPu",function(){return kb}),e.d(n,"schemeRdPu",function(){return Tb}),e.d(n,"interpolateYlGnBu",function(){return Eb}),e.d(n,"schemeYlGnBu",function(){return Nb}),e.d(n,"interpolateYlGn",function(){return zb}),e.d(n,"schemeYlGn",function(){return Cb}),e.d(n,"interpolateYlOrBr",function(){return Rb}),e.d(n,"schemeYlOrBr",function(){return Pb}),e.d(n,"interpolateYlOrRd",function(){return Ub}),e.d(n,"schemeYlOrRd",function(){return Lb}),e.d(n,"interpolateBlues",function(){return qb}),e.d(n,"schemeBlues",function(){return Db}),e.d(n,"interpolateGreens",function(){return Ob}),e.d(n,"schemeGreens",function(){return Bb}),e.d(n,"interpolateGreys",function(){return Ib}),e.d(n,"schemeGreys",function(){return Yb}),e.d(n,"interpolatePurples",function(){return jb}),e.d(n,"schemePurples",function(){return Fb}),e.d(n,"interpolateReds",function(){return Gb}),e.d(n,"schemeReds",function(){return Hb}),e.d(n,"interpolateOranges",function(){return Vb}),e.d(n,"schemeOranges",function(){return Xb}),e.d(n,"interpolateCubehelixDefault",function(){return $b}),e.d(n,"interpolateRainbow",function(){return Kb}),e.d(n,"interpolateWarm",function(){return Wb}),e.d(n,"interpolateCool",function(){return Zb}),e.d(n,"interpolateSinebow",function(){return e_}),e.d(n,"interpolateViridis",function(){return i_}),e.d(n,"interpolateMagma",function(){return o_}),e.d(n,"interpolateInferno",function(){return u_}),e.d(n,"interpolatePlasma",function(){return a_}),e.d(n,"create",function(){return un}),e.d(n,"creator",function(){return yt}),e.d(n,"local",function(){return cn}),e.d(n,"matcher",function(){return At}),e.d(n,"mouse",function(){return hn}),e.d(n,"namespace",function(){return gt}),e.d(n,"namespaces",function(){return pt}),e.d(n,"clientPoint",function(){return ln}),e.d(n,"select",function(){return on}),e.d(n,"selectAll",function(){return dn}),e.d(n,"selection",function(){return rn}),e.d(n,"selector",function(){return bt}),e.d(n,"selectorAll",function(){return mt}),e.d(n,"style",function(){return Pt}),e.d(n,"touch",function(){return pn}),e.d(n,"touches",function(){return gn}),e.d(n,"window",function(){return zt}),e.d(n,"event",function(){return Vt}),e.d(n,"customEvent",function(){return Kt}),e.d(n,"arc",function(){return k_}),e.d(n,"area",function(){return R_}),e.d(n,"line",function(){return P_}),e.d(n,"pie",function(){return D_}),e.d(n,"areaRadial",function(){return F_}),e.d(n,"radialArea",function(){return F_}),e.d(n,"lineRadial",function(){return I_}),e.d(n,"radialLine",function(){return I_}),e.d(n,"pointRadial",function(){return j_}),e.d(n,"linkHorizontal",function(){return Q_}),e.d(n,"linkVertical",function(){return K_}),e.d(n,"linkRadial",function(){return J_}),e.d(n,"symbol",function(){return vm}),e.d(n,"symbols",function(){return ym}),e.d(n,"symbolCircle",function(){return tm}),e.d(n,"symbolCross",function(){return nm}),e.d(n,"symbolDiamond",function(){return im}),e.d(n,"symbolSquare",function(){return fm}),e.d(n,"symbolStar",function(){return cm}),e.d(n,"symbolTriangle",function(){return lm}),e.d(n,"symbolWye",function(){return gm}),e.d(n,"curveBasisClosed",function(){return Mm}),e.d(n,"curveBasisOpen",function(){return Sm}),e.d(n,"curveBasis",function(){return xm}),e.d(n,"curveBundle",function(){return km}),e.d(n,"curveCardinalClosed",function(){return Pm}),e.d(n,"curveCardinalOpen",function(){return Lm}),e.d(n,"curveCardinal",function(){return Cm}),e.d(n,"curveCatmullRomClosed",function(){return Om}),e.d(n,"curveCatmullRomOpen",function(){return Im}),e.d(n,"curveCatmullRom",function(){return qm}),e.d(n,"curveLinearClosed",function(){return jm}),e.d(n,"curveLinear",function(){return E_}),e.d(n,"curveMonotoneX",function(){return Qm}),e.d(n,"curveMonotoneY",function(){return Km}),e.d(n,"curveNatural",function(){return nx}),e.d(n,"curveStep",function(){return rx}),e.d(n,"curveStepAfter",function(){return ox}),e.d(n,"curveStepBefore",function(){return ix}),e.d(n,"stack",function(){return fx}),e.d(n,"stackOffsetExpand",function(){return sx}),e.d(n,"stackOffsetDiverging",function(){return lx}),e.d(n,"stackOffsetNone",function(){return ux}),e.d(n,"stackOffsetSilhouette",function(){return hx}),e.d(n,"stackOffsetWiggle",function(){return dx}),e.d(n,"stackOrderAscending",function(){return px}),e.d(n,"stackOrderDescending",function(){return yx}),e.d(n,"stackOrderInsideOut",function(){return vx}),e.d(n,"stackOrderNone",function(){return ax}),e.d(n,"stackOrderReverse",function(){return bx}),e.d(n,"timeInterval",function(){return Ip}),e.d(n,"timeMillisecond",function(){return jp}),e.d(n,"timeMilliseconds",function(){return Hp}),e.d(n,"utcMillisecond",function(){return jp}),e.d(n,"utcMilliseconds",function(){return Hp}),e.d(n,"timeSecond",function(){return $p}),e.d(n,"timeSeconds",function(){return Wp}),e.d(n,"utcSecond",function(){return $p}),e.d(n,"utcSeconds",function(){return Wp}),e.d(n,"timeMinute",function(){return Qp}),e.d(n,"timeMinutes",function(){return Kp}),e.d(n,"timeHour",function(){return tg}),e.d(n,"timeHours",function(){return ng}),e.d(n,"timeDay",function(){return rg}),e.d(n,"timeDays",function(){return ig}),e.d(n,"timeWeek",function(){return ug}),e.d(n,"timeWeeks",function(){return dg}),e.d(n,"timeSunday",function(){return ug}),e.d(n,"timeSundays",function(){return dg}),e.d(n,"timeMonday",function(){return ag}),e.d(n,"timeMondays",function(){return pg}),e.d(n,"timeTuesday",function(){return cg}),e.d(n,"timeTuesdays",function(){return gg}),e.d(n,"timeWednesday",function(){return fg}),e.d(n,"timeWednesdays",function(){return yg}),e.d(n,"timeThursday",function(){return sg}),e.d(n,"timeThursdays",function(){return vg}),e.d(n,"timeFriday",function(){return lg}),e.d(n,"timeFridays",function(){return bg}),e.d(n,"timeSaturday",function(){return hg}),e.d(n,"timeSaturdays",function(){return _g}),e.d(n,"timeMonth",function(){return xg}),e.d(n,"timeMonths",function(){return wg}),e.d(n,"timeYear",function(){return Ag}),e.d(n,"timeYears",function(){return Sg}),e.d(n,"utcMinute",function(){return kg}),e.d(n,"utcMinutes",function(){return Ng}),e.d(n,"utcHour",function(){return Cg}),e.d(n,"utcHours",function(){return zg}),e.d(n,"utcDay",function(){return Rg}),e.d(n,"utcDays",function(){return Lg}),e.d(n,"utcWeek",function(){return Dg}),e.d(n,"utcWeeks",function(){return jg}),e.d(n,"utcSunday",function(){return Dg}),e.d(n,"utcSundays",function(){return jg}),e.d(n,"utcMonday",function(){return qg}),e.d(n,"utcMondays",function(){return Hg}),e.d(n,"utcTuesday",function(){return Bg}),e.d(n,"utcTuesdays",function(){return Gg}),e.d(n,"utcWednesday",function(){return Og}),e.d(n,"utcWednesdays",function(){return Xg}),e.d(n,"utcThursday",function(){return Yg}),e.d(n,"utcThursdays",function(){return Vg}),e.d(n,"utcFriday",function(){return Ig}),e.d(n,"utcFridays",function(){return $g}),e.d(n,"utcSaturday",function(){return Fg}),e.d(n,"utcSaturdays",function(){return Wg}),e.d(n,"utcMonth",function(){return Qg}),e.d(n,"utcMonths",function(){return Kg}),e.d(n,"utcYear",function(){return ty}),e.d(n,"utcYears",function(){return ny}),e.d(n,"timeFormatDefaultLocale",function(){return xv}),e.d(n,"timeFormat",function(){return ay}),e.d(n,"timeParse",function(){return cy}),e.d(n,"utcFormat",function(){return fy}),e.d(n,"utcParse",function(){return sy}),e.d(n,"timeFormatLocale",function(){return oy}),e.d(n,"isoFormat",function(){return wv}),e.d(n,"isoParse",function(){return Mv}),e.d(n,"now",function(){return zr}),e.d(n,"timer",function(){return Lr}),e.d(n,"timerFlush",function(){return Ur}),e.d(n,"timeout",function(){return Or}),e.d(n,"interval",function(){return Yr}),e.d(n,"transition",function(){return ui}),e.d(n,"active",function(){return Ji}),e.d(n,"interrupt",function(){return ti}),e.d(n,"voronoi",function(){return nw}),e.d(n,"zoom",function(){return pw}),e.d(n,"zoomTransform",function(){return ow}),e.d(n,"zoomIdentity",function(){return iw})},function(t,n,e){t.exports=e.p+"90b6360f1bb584a2059dd164a584c4a8.gif"},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default={nodes:[{country:"East Timor",code:"tl"},{country:"Canada",code:"ca"},{country:"Turkmenistan",code:"tm"},{country:"United States of America",code:"us"},{country:"Lithuania",code:"lt"},{country:"Cambodia",code:"kh"},{country:"Ethiopia",code:"et"},{country:"Swaziland",code:"sz"},{country:"Argentina",code:"ar"},{country:"Bolivia",code:"bo"},{country:"Cameroon",code:"cm"},{country:"Burkina Faso",code:"bf"},{country:"Ghana",code:"gh"},{country:"Saudi Arabia",code:"sa"},{country:"Slovenia",code:"si"},{country:"Guatemala",code:"gt"},{country:"Bosnia and Herzegovina",code:"ba"},{country:"Kuwait",code:"kw"},{country:"Russian Federation",code:"ru"},{country:"Jordan",code:"jo"},{country:"St. Lucia",code:"lc"},{country:"Spain",code:"es"},{country:"Liberia",code:"lr"},{country:"Netherlands",code:"nl"},{country:"Paraguay",code:"py"},{country:"Oman",code:"om"},{country:"Tanzania",code:"tz"},{country:"Gabon",code:"ga"},{country:"Monaco",code:"mc"},{country:"Yemen",code:"ye"},{country:"Pakistan",code:"pk"},{country:"Albania",code:"al"},{country:"United Arab Emirates",code:"ae"},{country:"India",code:"in"},{country:"Azerbaijan",code:"az"},{country:"Lesotho",code:"ls"},{country:"Kenya",code:"ke"},{country:"South Korea",code:"kr"},{country:"Tajikistan",code:"tj"},{country:"Turkey",code:"tr"},{country:"Afghanistan",code:"af"},{country:"Bangladesh",code:"bd"},{country:"Mauritania",code:"mr"},{country:"Solomon Islands",code:"sb"},{country:"San Marino",code:"sm"},{country:"Kyrgyzstan",code:"kg"},{country:"Mongolia",code:"mn"},{country:"France",code:"fr"},{country:"Rwanda",code:"rw"},{country:"Slovakia",code:"sk"},{country:"Somalia",code:"so"},{country:"Peru",code:"pe"},{country:"Laos",code:"la"},{country:"Norway",code:"no"},{country:"Malawi",code:"mw"},{country:"Benin",code:"bj"},{country:"Singapore",code:"sg"},{country:"Montenegro",code:"me"},{country:"Togo",code:"tg"},{country:"China",code:"cn"},{country:"Armenia",code:"am"},{country:"Dominican Republic",code:"do"},{country:"Ukraine",code:"ua"},{country:"Bahrain",code:"bh"},{country:"Finland",code:"fi"},{country:"Libya",code:"ly"},{country:"Indonesia",code:"id"},{country:"Central African Republic",code:"cf"},{country:"Sweden",code:"se"},{country:"Vietnam",code:"vn"},{country:"Mali",code:"ml"},{country:"Bulgaria",code:"bg"},{country:"Romania",code:"ro"},{country:"Angola",code:"ao"},{country:"Chad",code:"td"},{country:"South Africa",code:"za"},{country:"St. Vincent and the Grenadines",code:"vc"},{country:"Nicaragua",code:"ni"},{country:"Liechtenstein",code:"li"},{country:"Antigua & Barbuda",code:"ag"},{country:"Malaysia",code:"my"},{country:"Senegal",code:"sn"},{country:"Mozambique",code:"mz"},{country:"Uganda",code:"ug"},{country:"Japan",code:"jp"},{country:"Niger",code:"ne"},{country:"Brazil",code:"br"},{country:"Guinea",code:"gn"},{country:"Panama",code:"pa"},{country:"Guyana",code:"gy"},{country:"Costa Rica",code:"cr"},{country:"Luxembourg",code:"lu"},{country:"Andorra",code:"ad"},{country:"Ivory Coast",code:"ci"},{country:"Syria",code:"sy"},{country:"Nigeria",code:"ng"},{country:"Ecuador",code:"ec"},{country:"Czech Republic",code:"cz"},{country:"Brunei",code:"bn"},{country:"Australia",code:"au"},{country:"Iran",code:"ir"},{country:"Algeria",code:"dz"},{country:"El Salvador",code:"sv"},{country:"St. Kitts and Nevis",code:"kn"},{country:"Chile",code:"cl"},{country:"Belgium",code:"be"},{country:"Thailand",code:"th"},{country:"Haiti",code:"ht"},{country:"Iraq",code:"iq"},{country:"Sierra Leone",code:"sl"},{country:"Georgia",code:"ge"},{country:"Gambia",code:"gm"},{country:"Philippines",code:"ph"},{country:"Moldova",code:"md"},{country:"Morocco",code:"ma"},{country:"Namibia",code:"na"},{country:"Guinea-Bissau",code:"gw"},{country:"Switzerland",code:"ch"},{country:"Grenada",code:"gd"},{country:"Belize",code:"bz"},{country:"Portugal",code:"pt"},{country:"Estonia",code:"ee"},{country:"Uruguay",code:"uy"},{country:"Equatorial Guinea",code:"gq"},{country:"Lebanon",code:"lb"},{country:"Uzbekistan",code:"uz"},{country:"Egypt",code:"eg"},{country:"Djibouti",code:"dj"},{country:"Colombia",code:"co"},{country:"Burundi",code:"bi"},{country:"Taiwan",code:"tw"},{country:"Cyprus",code:"cy"},{country:"Qatar",code:"qa"},{country:"Italy",code:"it"},{country:"Bhutan",code:"bt"},{country:"Sudan",code:"sd"},{country:"Nepal",code:"np"},{country:"Democratic Republic of the Congo",code:"cd"},{country:"Suriname",code:"sr"},{country:"Venezuela",code:"ve"},{country:"Israel",code:"il"},{country:"Zambia",code:"zm"},{country:"Austria",code:"at"},{country:"Papua New Guinea",code:"pg"},{country:"Zimbabwe",code:"zw"},{country:"Germany",code:"de"},{country:"Denmark",code:"dk"},{country:"Kazakhstan",code:"kz"},{country:"Poland",code:"pl"},{country:"Eritrea",code:"er"},{country:"Ireland",code:"ie"},{country:"Macedonia",code:"mk"},{country:"North Korea",code:"kp"},{country:"Trinidad and Tobago",code:"tt"},{country:"Latvia",code:"lv"},{country:"Hungary",code:"hu"},{country:"Belarus",code:"by"},{country:"Honduras",code:"hn"},{country:"Myanmar",code:"mm"},{country:"Mexico",code:"mx"},{country:"Tunisia",code:"tn"},{country:"United Kingdom",code:"gb"},{country:"Congo",code:"cg"},{country:"Yugoslavia",code:"xk"},{country:"Greece",code:"gr"},{country:"Sri Lanka",code:"lk"},{country:"Croatia",code:"hr"},{country:"Botswana",code:"bw"}],links:[{target:66,source:0},{target:3,source:1},{target:100,source:2},{target:40,source:2},{target:125,source:2},{target:147,source:2},{target:159,source:3},{target:18,source:3},{target:148,source:4},{target:18,source:4},{target:154,source:4},{target:156,source:4},{target:106,source:5},{target:52,source:5},{target:69,source:5},{target:36,source:6},{target:50,source:6},{target:127,source:6},{target:149,source:6},{target:135,source:6},{target:82,source:7},{target:75,source:7},{target:86,source:8},{target:9,source:8},{target:24,source:8},{target:104,source:8},{target:122,source:8},{target:51,source:9},{target:86,source:9},{target:24,source:9},{target:104,source:9},{target:123,source:10},{target:95,source:10},{target:27,source:10},{target:67,source:10},{target:74,source:10},{target:162,source:10},{target:70,source:11},{target:55,source:11},{target:85,source:11},{target:93,source:11},{target:12,source:11},{target:58,source:11},{target:93,source:12},{target:58,source:12},{target:108,source:13},{target:126,source:13},{target:19,source:13},{target:140,source:13},{target:29,source:13},{target:17,source:13},{target:63,source:13},{target:132,source:13},{target:32,source:13},{target:25,source:13},{target:142,source:14},{target:155,source:14},{target:133,source:14},{target:166,source:14},{target:159,source:15},{target:119,source:15},{target:157,source:15},{target:102,source:15},{target:166,source:16},{target:163,source:16},{target:57,source:16},{target:100,source:17},{target:108,source:17},{target:148,source:18},{target:121,source:18},{target:154,source:18},{target:62,source:18},{target:156,source:18},{target:110,source:18},{target:34,source:18},{target:64,source:18},{target:53,source:18},{target:147,source:18},{target:59,source:18},{target:46,source:18},{target:152,source:18},{target:84,source:18},{target:108,source:19},{target:126,source:19},{target:94,source:19},{target:140,source:19},{target:76,source:20},{target:47,source:21},{target:92,source:21},{target:120,source:21},{target:114,source:21},{target:93,source:22},{target:87,source:22},{target:109,source:22},{target:105,source:23},{target:145,source:23},{target:86,source:24},{target:29,source:25},{target:32,source:25},{target:137,source:26},{target:83,source:26},{target:36,source:26},{target:129,source:26},{target:48,source:26},{target:82,source:26},{target:141,source:26},{target:54,source:26},{target:123,source:27},{target:162,source:27},{target:47,source:28},{target:127,source:29},{target:149,source:29},{target:100,source:30},{target:40,source:30},{target:59,source:30},{target:33,source:30},{target:158,source:30},{target:151,source:31},{target:163,source:31},{target:57,source:31},{target:164,source:31},{target:132,source:32},{target:59,source:33},{target:134,source:33},{target:41,source:33},{target:158,source:33},{target:165,source:33},{target:136,source:33},{target:60,source:34},{target:110,source:34},{target:100,source:34},{target:39,source:34},{target:75,source:35},{target:83,source:36},{target:50,source:36},{target:135,source:36},{target:152,source:37},{target:40,source:38},{target:45,source:38},{target:125,source:38},{target:59,source:38},{target:164,source:39},{target:131,source:39},{target:71,source:39},{target:60,source:39},{target:110,source:39},{target:100,source:39},{target:108,source:39},{target:94,source:39},{target:100,source:40},{target:125,source:40},{target:59,source:40},{target:158,source:41},{target:70,source:42},{target:81,source:42},{target:114,source:42},{target:101,source:42},{target:143,source:43},{target:133,source:44},{target:125,source:45},{target:147,source:45},{target:59,source:45},{target:59,source:46},{target:161,source:47},{target:105,source:47},{target:91,source:47},{target:117,source:47},{target:92,source:47},{target:145,source:47},{target:133,source:47},{target:137,source:48},{target:83,source:48},{target:129,source:48},{target:148,source:49},{target:142,source:49},{target:155,source:49},{target:97,source:49},{target:62,source:49},{target:127,source:50},{target:128,source:51},{target:96,source:51},{target:86,source:51},{target:104,source:51},{target:59,source:52},{target:158,source:52},{target:106,source:52},{target:69,source:52},{target:64,source:53},{target:68,source:53},{target:82,source:54},{target:141,source:54},{target:85,source:55},{target:58,source:55},{target:95,source:55},{target:80,source:56},{target:66,source:56},{target:166,source:57},{target:163,source:57},{target:147,source:59},{target:130,source:59},{target:152,source:59},{target:134,source:59},{target:158,source:59},{target:136,source:59},{target:69,source:59},{target:110,source:60},{target:100,source:60},{target:107,source:61},{target:148,source:62},{target:155,source:62},{target:113,source:62},{target:72,source:62},{target:156,source:62},{target:132,source:63},{target:121,source:64},{target:68,source:64},{target:85,source:65},{target:74,source:65},{target:101,source:65},{target:160,source:65},{target:135,source:65},{target:126,source:65},{target:80,source:66},{target:143,source:66},{target:74,source:67},{target:162,source:67},{target:137,source:67},{target:135,source:67},{target:146,source:68},{target:81,source:70},{target:85,source:70},{target:93,source:70},{target:87,source:70},{target:101,source:70},{target:151,source:71},{target:163,source:71},{target:164,source:71},{target:72,source:71},{target:155,source:72},{target:163,source:72},{target:113,source:72},{target:162,source:73},{target:137,source:73},{target:141,source:73},{target:115,source:73},{target:85,source:74},{target:95,source:74},{target:135,source:74},{target:82,source:75},{target:144,source:75},{target:115,source:75},{target:167,source:75},{target:118,source:76},{target:157,source:77},{target:102,source:77},{target:90,source:77},{target:117,source:78},{target:142,source:78},{target:103,source:79},{target:106,source:80},{target:98,source:80},{target:112,source:80},{target:116,source:81},{target:111,source:81},{target:87,source:81},{target:141,source:82},{target:144,source:82},{target:137,source:83},{target:135,source:83},{target:95,source:85},{target:101,source:85},{target:128,source:86},{target:139,source:86},{target:89,source:86},{target:138,source:86},{target:122,source:86},{target:116,source:87},{target:93,source:87},{target:109,source:87},{target:90,source:88},{target:128,source:88},{target:139,source:89},{target:138,source:89},{target:105,source:91},{target:145,source:91},{target:108,source:94},{target:124,source:94},{target:140,source:94},{target:128,source:96},{target:145,source:97},{target:148,source:97},{target:142,source:97},{target:143,source:99},{target:108,source:100},{target:114,source:101},{target:160,source:101},{target:157,source:102},{target:145,source:105},{target:158,source:106},{target:141,source:115},{target:167,source:115},{target:145,source:117},{target:142,source:117},{target:133,source:117},{target:159,source:119},{target:154,source:121},{target:140,source:124},{target:147,source:125},{target:135,source:126},{target:140,source:126},{target:149,source:127},{target:139,source:128},{target:137,source:129},{target:142,source:133},{target:166,source:133},{target:137,source:135},{target:149,source:135},{target:162,source:137},{target:141,source:137},{target:153,source:139},{target:144,source:141},{target:167,source:141},{target:145,source:142},{target:155,source:142},{target:167,source:144},{target:148,source:145},{target:146,source:145},{target:156,source:148},{target:161,source:150},{target:163,source:151},{target:164,source:151},{target:156,source:154},{target:166,source:155},{target:163,source:155},{target:166,source:163}]}},function(t,n,e){"use strict";e(12);var r=u(e(2)),i=function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(n[e]=t[e]);return n.default=t,n}(e(0));e(7),e(6);var o=u(e(1));function u(t){return t&&t.__esModule?t:{default:t}}var a=r.default.nodes,c=r.default.links,f=i.forceSimulation(a),s=+i.select("svg").attr("width"),l=+i.select("svg").attr("height");f.force("many",i.forceManyBody()),f.force("center",i.forceCenter(s/2,l/2)),f.force("links",i.forceLink(c).id(function(t,n){return n})),f.force("radial",i.forceRadial(100,s/2,l/2));var h=.09;f.force("radial").strength(h),window.addEventListener("load",function(){var t=i.select("svg").append("g").attr("class","nodes").selectAll("rect").data(a).enter().append("rect").attr("width",1).attr("height",1).attr("fill","green"),n=i.select(".flag-container").selectAll("rect").data(a).enter().append("rect").attr("href",o.default).attr("class",function(t){return"flag flag-"+t.code}).attr("title",function(t){return t.country}).call(i.drag().on("start",function(t){i.event.active||f.alphaTarget(.7).restart();t.fx=t.x,t.fy=t.y,p=!0,f.force("radial").strength(.16),setTimeout(function(){f.force("radial").strength(h)},300)}).on("drag",function(t){t.fx=i.event.x,t.fy=i.event.y}).on("end",function(t){i.event.active||f.alphaTarget(.1);t.fx=null,t.fy=null,p=!1})),e=i.select("svg").append("g").attr("class","links").selectAll("line").data(c).enter().append("line").attr("stroke-width",1).attr("stroke","gray"),r=document.querySelector("svg"),u=r.getBoundingClientRect().left+scrollX,s=r.getBoundingClientRect().top+scrollY;window.addEventListener("resize",function(){u=r.getBoundingClientRect().left+scrollX,s=r.getBoundingClientRect().top+scrollY});var l=void 0,d=function(t,n){return l&&t.country===l.id&&(t[n]=l[n]),t[n]};f.on("tick",function(){t.attr("x",function(t){return d(t,"x")}).attr("y",function(t){return d(t,"y")}),n.style("left",function(t){return d(t,"x")+u-8+"px"}).style("top",function(t){return d(t,"y")+s-8+"px"}),e.attr("x1",function(t){return d(t.source,"x")}).attr("y1",function(t){return d(t.source,"y")}).attr("x2",function(t){return d(t.target,"x")}).attr("y2",function(t){return d(t.target,"y")})});var p=!1;n.on("mouseover",function(t){p||l||(l={x:t.x,y:t.y,id:t.country})}),n.on("mouseleave",function(){l=null})})},,,function(t,n){},function(t,n){},,,,,function(t,n){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,